{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nvar supportExt = ['xlsx', 'xlsm', 'xlsb', 'xls', 'ods', 'fods', 'csv', 'txt', 'sylk', 'html', 'dif', 'dbf', 'rtf', 'prn', 'eth'];\n\nclass ExportSheet extends PureComponent {\n  // 存储新的dataSource\n  static getDerivedStateFromProps(props, state) {\n    if (props.dataSource !== state.dataSource) {\n      return {\n        dataSource: props.dataSource\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.XLSX = this.props.xlsx;\n\n    this.toSheet = () => {\n      var _this$props;\n\n      var {\n        utilsName,\n        dataSource\n      } = this.state;\n\n      switch (utilsName) {\n        case 'table_to_sheet':\n          var tableEle = (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.tableElement;\n          if (tableEle && tableEle instanceof HTMLTableElement) return this.XLSX.utils[utilsName](tableEle);\n          throw 'props.tableElement must be instance of HTMLTableElement';\n\n        case 'aoa_to_sheet':\n        case 'json_to_sheet':\n          if (!dataSource.length) return;\n          var value = this.toRightDate();\n          return this.XLSX.utils[utilsName](...value);\n\n        default:\n          break;\n      }\n    };\n\n    this.exportFile = () => {\n      var ws = this.toSheet();\n      var {\n        extName,\n        fileName,\n        isRequiredNameDate,\n        fileDate\n      } = this.props;\n      var name = isRequiredNameDate ? fileName + \"__\" + fileDate : fileName;\n      var formatName = name.replace(/\\\\|\\/|\\?|\\*|\\[|\\]|\\s|\\{|\\}/g, '_');\n      var wb = this.XLSX.utils.book_new();\n      this.XLSX.utils.book_append_sheet(wb, ws, formatName);\n      this.XLSX.writeFile(wb, formatName + \".\" + extName);\n    };\n\n    if (!supportExt.includes(props.extName)) throw new Error('extName not suport');\n    this.importType = {\n      'Array-of-Arrays': 'aoa_to_sheet',\n      'Array-of-Object': 'json_to_sheet',\n      'Table-Node-Element': 'table_to_sheet'\n    };\n    if (!this.importType[props.dataType]) throw new Error('dataType must be oneOf [ ' + 'Array-of-Arrays,' + 'Array-of-Object,' + 'Table-Node-Element' + ']');\n    this.state = {\n      utilsName: this.importType[props.dataType],\n      dataSource: props.dataSource\n    };\n  }\n\n  toRightDate() {\n    var {\n      header,\n      headerOption\n    } = this.props;\n    var {\n      dataSource\n    } = this.state;\n    var {\n      dataType\n    } = this.props;\n    var resultValues = [];\n    var resultHeaders = []; // !Array.isArray(props.dataSource[0]))\n\n    if (dataType === 'Array-of-Object') {\n      dataSource.map(value => {\n        if (isEmpty(value)) throw new Error('dataSource must be like Array-of-Object type, the Object not be empty');\n        var dealedObj = {};\n        header.map(key => {\n          dealedObj[key.title] = value[key.dataIndex];\n          if (resultValues.includes(dealedObj)) return true;\n          resultValues.push(dealedObj);\n          if (resultHeaders.includes(key.title)) return true;\n          resultHeaders.push(key.title);\n          return true;\n        });\n        return true;\n      });\n      return [resultValues, _extends({\n        header: resultHeaders\n      }, headerOption)];\n    }\n\n    if (dataType === 'Array-of-Arrays') {\n      dataSource.map(item => {\n        if (!Array.isArray(item)) throw new Error('dataSource must be like Array-of-Arrays type');\n        return null;\n      });\n      return [dataSource, _extends({}, headerOption)];\n    }\n\n    return [];\n  }\n\n  render() {\n    var {\n      children,\n      isDOMElement\n    } = this.props;\n    var ResultElement;\n\n    if (React.isValidElement(children)) {\n      var originHandler = children.props.onClick;\n\n      if (isDOMElement) {\n        var exportHandler = event => {\n          this.exportFile();\n\n          if (isFunction(originHandler)) {\n            originHandler(event);\n          }\n        };\n\n        ResultElement = React.cloneElement(React.Children.only(children), {\n          onClick: exportHandler\n        });\n      } else {\n        ResultElement = React.cloneElement(React.Children.only(children), {\n          exportsheet: this.exportFile\n        });\n      }\n    } else {\n      throw new Error('The Children must be a valid React Element !');\n    }\n\n    return ResultElement;\n  }\n\n}\n\nExportSheet.propTypes = {\n  dataType: PropTypes.oneOf(['Array-of-Arrays', 'Array-of-Object', 'Table-Node-Element']),\n  header: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    dataIndex: PropTypes.string\n  })),\n  headerOption: PropTypes.shape({\n    dateNF: PropTypes.string,\n    // 在字符串输出中使用指定的日期格式\n    skipHeader: PropTypes.bool\n  }),\n  dataSource: PropTypes.array,\n  fileName: PropTypes.string,\n  fileDate: PropTypes.string,\n  extName: PropTypes.oneOf(supportExt),\n  isRequiredNameDate: PropTypes.bool,\n  isDOMElement: PropTypes.bool.isRequired,\n  xlsx: PropTypes.object.isRequired,\n  tableElement: PropTypes.object\n};\nExportSheet.defaultProps = {\n  dataType: 'Array-of-Object',\n  header: [],\n  headerOption: {\n    skipHeader: false,\n    dateNF: 'FMT 14'\n  },\n  dataSource: [],\n  extName: 'xlsx',\n  isRequiredNameDate: true,\n  fileName: '',\n  isDOMElement: true,\n  fileDate: new Date().toLocaleDateString()\n};\nexport default ExportSheet;","map":{"version":3,"sources":["D:/imenso/Reactjs/real-estate-marketplace/node_modules/react-xlsx-sheet/es/export-sheet/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","PureComponent","PropTypes","isEmpty","isFunction","supportExt","ExportSheet","getDerivedStateFromProps","props","state","dataSource","constructor","XLSX","xlsx","toSheet","_this$props","utilsName","tableEle","tableElement","HTMLTableElement","utils","value","toRightDate","exportFile","ws","extName","fileName","isRequiredNameDate","fileDate","name","formatName","replace","wb","book_new","book_append_sheet","writeFile","includes","Error","importType","dataType","header","headerOption","resultValues","resultHeaders","map","dealedObj","title","dataIndex","push","item","Array","isArray","render","children","isDOMElement","ResultElement","isValidElement","originHandler","onClick","exportHandler","event","cloneElement","Children","only","exportsheet","propTypes","oneOf","arrayOf","shape","string","dateNF","skipHeader","bool","array","isRequired","object","defaultProps","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nvar supportExt = ['xlsx', 'xlsm', 'xlsb', 'xls', 'ods', 'fods', 'csv', 'txt', 'sylk', 'html', 'dif', 'dbf', 'rtf', 'prn', 'eth'];\n\nclass ExportSheet extends PureComponent {\n  // 存储新的dataSource\n  static getDerivedStateFromProps(props, state) {\n    if (props.dataSource !== state.dataSource) {\n      return {\n        dataSource: props.dataSource\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.XLSX = this.props.xlsx;\n\n    this.toSheet = () => {\n      var _this$props;\n\n      var {\n        utilsName,\n        dataSource\n      } = this.state;\n\n      switch (utilsName) {\n        case 'table_to_sheet':\n          var tableEle = (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.tableElement;\n          if (tableEle && tableEle instanceof HTMLTableElement) return this.XLSX.utils[utilsName](tableEle);\n          throw 'props.tableElement must be instance of HTMLTableElement';\n\n        case 'aoa_to_sheet':\n        case 'json_to_sheet':\n          if (!dataSource.length) return;\n          var value = this.toRightDate();\n          return this.XLSX.utils[utilsName](...value);\n\n        default:\n          break;\n      }\n    };\n\n    this.exportFile = () => {\n      var ws = this.toSheet();\n      var {\n        extName,\n        fileName,\n        isRequiredNameDate,\n        fileDate\n      } = this.props;\n      var name = isRequiredNameDate ? fileName + \"__\" + fileDate : fileName;\n      var formatName = name.replace(/\\\\|\\/|\\?|\\*|\\[|\\]|\\s|\\{|\\}/g, '_');\n      var wb = this.XLSX.utils.book_new();\n      this.XLSX.utils.book_append_sheet(wb, ws, formatName);\n      this.XLSX.writeFile(wb, formatName + \".\" + extName);\n    };\n\n    if (!supportExt.includes(props.extName)) throw new Error('extName not suport');\n    this.importType = {\n      'Array-of-Arrays': 'aoa_to_sheet',\n      'Array-of-Object': 'json_to_sheet',\n      'Table-Node-Element': 'table_to_sheet'\n    };\n    if (!this.importType[props.dataType]) throw new Error('dataType must be oneOf [ ' + 'Array-of-Arrays,' + 'Array-of-Object,' + 'Table-Node-Element' + ']');\n    this.state = {\n      utilsName: this.importType[props.dataType],\n      dataSource: props.dataSource\n    };\n  }\n\n  toRightDate() {\n    var {\n      header,\n      headerOption\n    } = this.props;\n    var {\n      dataSource\n    } = this.state;\n    var {\n      dataType\n    } = this.props;\n    var resultValues = [];\n    var resultHeaders = []; // !Array.isArray(props.dataSource[0]))\n\n    if (dataType === 'Array-of-Object') {\n      dataSource.map(value => {\n        if (isEmpty(value)) throw new Error('dataSource must be like Array-of-Object type, the Object not be empty');\n        var dealedObj = {};\n        header.map(key => {\n          dealedObj[key.title] = value[key.dataIndex];\n          if (resultValues.includes(dealedObj)) return true;\n          resultValues.push(dealedObj);\n          if (resultHeaders.includes(key.title)) return true;\n          resultHeaders.push(key.title);\n          return true;\n        });\n        return true;\n      });\n      return [resultValues, _extends({\n        header: resultHeaders\n      }, headerOption)];\n    }\n\n    if (dataType === 'Array-of-Arrays') {\n      dataSource.map(item => {\n        if (!Array.isArray(item)) throw new Error('dataSource must be like Array-of-Arrays type');\n        return null;\n      });\n      return [dataSource, _extends({}, headerOption)];\n    }\n\n    return [];\n  }\n\n  render() {\n    var {\n      children,\n      isDOMElement\n    } = this.props;\n    var ResultElement;\n\n    if (React.isValidElement(children)) {\n      var originHandler = children.props.onClick;\n\n      if (isDOMElement) {\n        var exportHandler = event => {\n          this.exportFile();\n\n          if (isFunction(originHandler)) {\n            originHandler(event);\n          }\n        };\n\n        ResultElement = React.cloneElement(React.Children.only(children), {\n          onClick: exportHandler\n        });\n      } else {\n        ResultElement = React.cloneElement(React.Children.only(children), {\n          exportsheet: this.exportFile\n        });\n      }\n    } else {\n      throw new Error('The Children must be a valid React Element !');\n    }\n\n    return ResultElement;\n  }\n\n}\n\nExportSheet.propTypes = {\n  dataType: PropTypes.oneOf(['Array-of-Arrays', 'Array-of-Object', 'Table-Node-Element']),\n  header: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    dataIndex: PropTypes.string\n  })),\n  headerOption: PropTypes.shape({\n    dateNF: PropTypes.string,\n    // 在字符串输出中使用指定的日期格式\n    skipHeader: PropTypes.bool\n  }),\n  dataSource: PropTypes.array,\n  fileName: PropTypes.string,\n  fileDate: PropTypes.string,\n  extName: PropTypes.oneOf(supportExt),\n  isRequiredNameDate: PropTypes.bool,\n  isDOMElement: PropTypes.bool.isRequired,\n  xlsx: PropTypes.object.isRequired,\n  tableElement: PropTypes.object\n};\nExportSheet.defaultProps = {\n  dataType: 'Array-of-Object',\n  header: [],\n  headerOption: {\n    skipHeader: false,\n    dateNF: 'FMT 14'\n  },\n  dataSource: [],\n  extName: 'xlsx',\n  isRequiredNameDate: true,\n  fileName: '',\n  isDOMElement: true,\n  fileDate: new Date().toLocaleDateString()\n};\nexport default ExportSheet;"]},"metadata":{},"sourceType":"module"}