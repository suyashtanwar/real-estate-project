{"ast":null,"code":"import _toConsumableArray from \"D:/imenso/Reactjs/real-estate-marketplace/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:/imenso/Reactjs/real-estate-marketplace/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/imenso/Reactjs/real-estate-marketplace/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/imenso/Reactjs/real-estate-marketplace/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/imenso/Reactjs/real-estate-marketplace/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nvar supportExt = ['xlsx', 'xlsm', 'xlsb', 'xls', 'ods', 'fods', 'csv', 'txt', 'sylk', 'html', 'dif', 'dbf', 'rtf', 'prn', 'eth'];\n\nvar ExportSheet = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ExportSheet, _PureComponent);\n\n  var _super = _createSuper(ExportSheet);\n\n  function ExportSheet(props) {\n    var _this;\n\n    _classCallCheck(this, ExportSheet);\n\n    _this = _super.call(this, props);\n    _this.XLSX = _this.props.xlsx;\n\n    _this.toSheet = function () {\n      var _this$XLSX$utils;\n\n      var _this$props;\n\n      var _this$state = _this.state,\n          utilsName = _this$state.utilsName,\n          dataSource = _this$state.dataSource;\n\n      switch (utilsName) {\n        case 'table_to_sheet':\n          var tableEle = (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : _this$props.tableElement;\n          if (tableEle && tableEle instanceof HTMLTableElement) return _this.XLSX.utils[utilsName](tableEle);\n          throw 'props.tableElement must be instance of HTMLTableElement';\n\n        case 'aoa_to_sheet':\n        case 'json_to_sheet':\n          if (!dataSource.length) return;\n\n          var value = _this.toRightDate();\n\n          return (_this$XLSX$utils = _this.XLSX.utils)[utilsName].apply(_this$XLSX$utils, _toConsumableArray(value));\n\n        default:\n          break;\n      }\n    };\n\n    _this.exportFile = function () {\n      var ws = _this.toSheet();\n\n      var _this$props2 = _this.props,\n          extName = _this$props2.extName,\n          fileName = _this$props2.fileName,\n          isRequiredNameDate = _this$props2.isRequiredNameDate,\n          fileDate = _this$props2.fileDate;\n      var name = isRequiredNameDate ? fileName + \"__\" + fileDate : fileName;\n      var formatName = name.replace(/\\\\|\\/|\\?|\\*|\\[|\\]|\\s|\\{|\\}/g, '_');\n\n      var wb = _this.XLSX.utils.book_new();\n\n      _this.XLSX.utils.book_append_sheet(wb, ws, formatName);\n\n      _this.XLSX.writeFile(wb, formatName + \".\" + extName);\n    };\n\n    if (!supportExt.includes(props.extName)) throw new Error('extName not suport');\n    _this.importType = {\n      'Array-of-Arrays': 'aoa_to_sheet',\n      'Array-of-Object': 'json_to_sheet',\n      'Table-Node-Element': 'table_to_sheet'\n    };\n    if (!_this.importType[props.dataType]) throw new Error('dataType must be oneOf [ ' + 'Array-of-Arrays,' + 'Array-of-Object,' + 'Table-Node-Element' + ']');\n    _this.state = {\n      utilsName: _this.importType[props.dataType],\n      dataSource: props.dataSource\n    };\n    return _this;\n  }\n\n  _createClass(ExportSheet, [{\n    key: \"toRightDate\",\n    value: function toRightDate() {\n      var _this$props3 = this.props,\n          header = _this$props3.header,\n          headerOption = _this$props3.headerOption;\n      var dataSource = this.state.dataSource;\n      var dataType = this.props.dataType;\n      var resultValues = [];\n      var resultHeaders = []; // !Array.isArray(props.dataSource[0]))\n\n      if (dataType === 'Array-of-Object') {\n        dataSource.map(function (value) {\n          if (isEmpty(value)) throw new Error('dataSource must be like Array-of-Object type, the Object not be empty');\n          var dealedObj = {};\n          header.map(function (key) {\n            dealedObj[key.title] = value[key.dataIndex];\n            if (resultValues.includes(dealedObj)) return true;\n            resultValues.push(dealedObj);\n            if (resultHeaders.includes(key.title)) return true;\n            resultHeaders.push(key.title);\n            return true;\n          });\n          return true;\n        });\n        return [resultValues, _extends({\n          header: resultHeaders\n        }, headerOption)];\n      }\n\n      if (dataType === 'Array-of-Arrays') {\n        dataSource.map(function (item) {\n          if (!Array.isArray(item)) throw new Error('dataSource must be like Array-of-Arrays type');\n          return null;\n        });\n        return [dataSource, _extends({}, headerOption)];\n      }\n\n      return [];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          isDOMElement = _this$props4.isDOMElement;\n      var ResultElement;\n\n      if (React.isValidElement(children)) {\n        var originHandler = children.props.onClick;\n\n        if (isDOMElement) {\n          var exportHandler = function exportHandler(event) {\n            _this2.exportFile();\n\n            if (isFunction(originHandler)) {\n              originHandler(event);\n            }\n          };\n\n          ResultElement = React.cloneElement(React.Children.only(children), {\n            onClick: exportHandler\n          });\n        } else {\n          ResultElement = React.cloneElement(React.Children.only(children), {\n            exportsheet: this.exportFile\n          });\n        }\n      } else {\n        throw new Error('The Children must be a valid React Element !');\n      }\n\n      return ResultElement;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: // 存储新的dataSource\n    function getDerivedStateFromProps(props, state) {\n      if (props.dataSource !== state.dataSource) {\n        return {\n          dataSource: props.dataSource\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ExportSheet;\n}(PureComponent);\n\nExportSheet.propTypes = {\n  dataType: PropTypes.oneOf(['Array-of-Arrays', 'Array-of-Object', 'Table-Node-Element']),\n  header: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    dataIndex: PropTypes.string\n  })),\n  headerOption: PropTypes.shape({\n    dateNF: PropTypes.string,\n    // 在字符串输出中使用指定的日期格式\n    skipHeader: PropTypes.bool\n  }),\n  dataSource: PropTypes.array,\n  fileName: PropTypes.string,\n  fileDate: PropTypes.string,\n  extName: PropTypes.oneOf(supportExt),\n  isRequiredNameDate: PropTypes.bool,\n  isDOMElement: PropTypes.bool.isRequired,\n  xlsx: PropTypes.object.isRequired,\n  tableElement: PropTypes.object\n};\nExportSheet.defaultProps = {\n  dataType: 'Array-of-Object',\n  header: [],\n  headerOption: {\n    skipHeader: false,\n    dateNF: 'FMT 14'\n  },\n  dataSource: [],\n  extName: 'xlsx',\n  isRequiredNameDate: true,\n  fileName: '',\n  isDOMElement: true,\n  fileDate: new Date().toLocaleDateString()\n};\nexport default ExportSheet;","map":{"version":3,"sources":["D:/imenso/Reactjs/real-estate-marketplace/node_modules/react-xlsx-sheet/es/export-sheet/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","PureComponent","PropTypes","isEmpty","isFunction","supportExt","ExportSheet","props","XLSX","xlsx","toSheet","_this$props","state","utilsName","dataSource","tableEle","tableElement","HTMLTableElement","utils","value","toRightDate","exportFile","ws","extName","fileName","isRequiredNameDate","fileDate","name","formatName","replace","wb","book_new","book_append_sheet","writeFile","includes","Error","importType","dataType","header","headerOption","resultValues","resultHeaders","map","dealedObj","title","dataIndex","push","item","Array","isArray","children","isDOMElement","ResultElement","isValidElement","originHandler","onClick","exportHandler","event","cloneElement","Children","only","exportsheet","propTypes","oneOf","arrayOf","shape","string","dateNF","skipHeader","bool","array","isRequired","object","defaultProps","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nvar supportExt = ['xlsx', 'xlsm', 'xlsb', 'xls', 'ods', 'fods', 'csv', 'txt', 'sylk', 'html', 'dif', 'dbf', 'rtf', 'prn', 'eth'];\n\nclass ExportSheet extends PureComponent {\n  // 存储新的dataSource\n  static getDerivedStateFromProps(props, state) {\n    if (props.dataSource !== state.dataSource) {\n      return {\n        dataSource: props.dataSource\n      };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.XLSX = this.props.xlsx;\n\n    this.toSheet = () => {\n      var _this$props;\n\n      var {\n        utilsName,\n        dataSource\n      } = this.state;\n\n      switch (utilsName) {\n        case 'table_to_sheet':\n          var tableEle = (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.tableElement;\n          if (tableEle && tableEle instanceof HTMLTableElement) return this.XLSX.utils[utilsName](tableEle);\n          throw 'props.tableElement must be instance of HTMLTableElement';\n\n        case 'aoa_to_sheet':\n        case 'json_to_sheet':\n          if (!dataSource.length) return;\n          var value = this.toRightDate();\n          return this.XLSX.utils[utilsName](...value);\n\n        default:\n          break;\n      }\n    };\n\n    this.exportFile = () => {\n      var ws = this.toSheet();\n      var {\n        extName,\n        fileName,\n        isRequiredNameDate,\n        fileDate\n      } = this.props;\n      var name = isRequiredNameDate ? fileName + \"__\" + fileDate : fileName;\n      var formatName = name.replace(/\\\\|\\/|\\?|\\*|\\[|\\]|\\s|\\{|\\}/g, '_');\n      var wb = this.XLSX.utils.book_new();\n      this.XLSX.utils.book_append_sheet(wb, ws, formatName);\n      this.XLSX.writeFile(wb, formatName + \".\" + extName);\n    };\n\n    if (!supportExt.includes(props.extName)) throw new Error('extName not suport');\n    this.importType = {\n      'Array-of-Arrays': 'aoa_to_sheet',\n      'Array-of-Object': 'json_to_sheet',\n      'Table-Node-Element': 'table_to_sheet'\n    };\n    if (!this.importType[props.dataType]) throw new Error('dataType must be oneOf [ ' + 'Array-of-Arrays,' + 'Array-of-Object,' + 'Table-Node-Element' + ']');\n    this.state = {\n      utilsName: this.importType[props.dataType],\n      dataSource: props.dataSource\n    };\n  }\n\n  toRightDate() {\n    var {\n      header,\n      headerOption\n    } = this.props;\n    var {\n      dataSource\n    } = this.state;\n    var {\n      dataType\n    } = this.props;\n    var resultValues = [];\n    var resultHeaders = []; // !Array.isArray(props.dataSource[0]))\n\n    if (dataType === 'Array-of-Object') {\n      dataSource.map(value => {\n        if (isEmpty(value)) throw new Error('dataSource must be like Array-of-Object type, the Object not be empty');\n        var dealedObj = {};\n        header.map(key => {\n          dealedObj[key.title] = value[key.dataIndex];\n          if (resultValues.includes(dealedObj)) return true;\n          resultValues.push(dealedObj);\n          if (resultHeaders.includes(key.title)) return true;\n          resultHeaders.push(key.title);\n          return true;\n        });\n        return true;\n      });\n      return [resultValues, _extends({\n        header: resultHeaders\n      }, headerOption)];\n    }\n\n    if (dataType === 'Array-of-Arrays') {\n      dataSource.map(item => {\n        if (!Array.isArray(item)) throw new Error('dataSource must be like Array-of-Arrays type');\n        return null;\n      });\n      return [dataSource, _extends({}, headerOption)];\n    }\n\n    return [];\n  }\n\n  render() {\n    var {\n      children,\n      isDOMElement\n    } = this.props;\n    var ResultElement;\n\n    if (React.isValidElement(children)) {\n      var originHandler = children.props.onClick;\n\n      if (isDOMElement) {\n        var exportHandler = event => {\n          this.exportFile();\n\n          if (isFunction(originHandler)) {\n            originHandler(event);\n          }\n        };\n\n        ResultElement = React.cloneElement(React.Children.only(children), {\n          onClick: exportHandler\n        });\n      } else {\n        ResultElement = React.cloneElement(React.Children.only(children), {\n          exportsheet: this.exportFile\n        });\n      }\n    } else {\n      throw new Error('The Children must be a valid React Element !');\n    }\n\n    return ResultElement;\n  }\n\n}\n\nExportSheet.propTypes = {\n  dataType: PropTypes.oneOf(['Array-of-Arrays', 'Array-of-Object', 'Table-Node-Element']),\n  header: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    dataIndex: PropTypes.string\n  })),\n  headerOption: PropTypes.shape({\n    dateNF: PropTypes.string,\n    // 在字符串输出中使用指定的日期格式\n    skipHeader: PropTypes.bool\n  }),\n  dataSource: PropTypes.array,\n  fileName: PropTypes.string,\n  fileDate: PropTypes.string,\n  extName: PropTypes.oneOf(supportExt),\n  isRequiredNameDate: PropTypes.bool,\n  isDOMElement: PropTypes.bool.isRequired,\n  xlsx: PropTypes.object.isRequired,\n  tableElement: PropTypes.object\n};\nExportSheet.defaultProps = {\n  dataType: 'Array-of-Object',\n  header: [],\n  headerOption: {\n    skipHeader: false,\n    dateNF: 'FMT 14'\n  },\n  dataSource: [],\n  extName: 'xlsx',\n  isRequiredNameDate: true,\n  fileName: '',\n  isDOMElement: true,\n  fileDate: new Date().toLocaleDateString()\n};\nexport default ExportSheet;"]},"metadata":{},"sourceType":"module"}