[{"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\index.js":"1","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\App.js":"2","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\reportWebVitals.js":"3","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\UserManagement.js":"4","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\SignUp.js":"5","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\SignIn.js":"6","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\Index.js":"7","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\Test.js":"8","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\PermissionDenied.js":"9","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\ErrorPage.js":"10","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Listings\\Index.js":"11","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\CheckUser.js":"12","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\Index.js":"13","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\ResetPassword.js":"14","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\contact\\Index.js":"15","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\Slider.js":"16","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\Index.js":"17","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\ReceiveEnquiry.js":"18","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\ForgotPassword.js":"19","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\About\\Index.js":"20","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Enquiry.js":"21","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\AgentApproval.js":"22","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\ChangePassword.js":"23","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Index.js":"24","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property.js":"25","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ChangePassword.js":"26","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\TakeTourEnq.js":"27","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContectAgent.js":"28","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\DashBoard.js":"29","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Property.js":"30","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ViewPropertyDetails.js":"31","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Profile.js":"32","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Profile.js":"33","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\AssignedProperty.js":"34","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\AssignProperty.js":"35","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\VerifiedProperties.js":"36","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Index.js":"37","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\RequestedPropertyView.js":"38","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\verifiedProperty.js":"39","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\VerifiedPropertyView.js":"40","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\AssignedPropertyView.js":"41","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Profile.js":"42","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\VerifiedPropertyView.js":"43","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ViewVerifiedProperty.js":"44","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\RequestedAssignPropery.js":"45","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\VerifiedProperty.js":"46","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ContractForms\\sellerPurchaseList.js":"47","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\WishList.js":"48","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ChangePassword.js":"49","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Cms\\PageList.js":"50","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Cms\\EditPage.js":"51","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\AddProperty.js":"52","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\PropertyList.js":"53","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Enquiry.js":"54","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\ChangePassword.js":"55","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ContractForms\\agentSellerContract.js":"56","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\MyProfile.js":"57","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\PropertyEnquiry\\ContactAgent.js":"58","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\PropertyEnquiry\\TakeTour.js":"59","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\ContractForms\\BuyerAgentContract.js":"60","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\ContractForms\\BuyerPurchase.js":"61","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Index.js":"62","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerContract\\AgentSeller.js":"63","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerContract\\ContractList.js":"64","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerPurchase\\BuyerPurchaseList.js":"65","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerPurchase\\SellerPurchaseContract.js":"66","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerPurchase\\BuyerPurchaseContract.js":"67","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerPurchase\\SellerPurchaseList.js":"68","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerContract\\ContractList.js":"69","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerContract\\BuyerContract.js":"70","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Navbar.js":"71","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Sidebar.js":"72","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Navbar.js":"73","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Sidebar.js":"74","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Header.js":"75","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Navbar.js":"76","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Sidebar.js":"77","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Footer.js":"78","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Navbar.js":"79","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Sidebar.js":"80","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Features.js":"81","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Address.js":"82","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Map.js":"83","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Gallery.js":"84","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\PropertyInfo.js":"85","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\About\\Header.js":"86","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\About\\Navbar.js":"87","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\Header.js":"88","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\contact\\Header.js":"89","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\Footer.js":"90","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\Index.js":"91","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\Header.js":"92","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\contact\\Navbar.js":"93","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\SearchPlace.js":"94","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\News.js":"95","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\HowItWorks.js":"96","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\Index.js":"97","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\LatestProperty.js":"98","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\Navbar.js":"99","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\Header.js":"100","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Listings\\Map\\index.js":"101","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Map\\index.js":"102","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\FeaturedProperty.js":"103","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\ContactCard.js":"104","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\FeaturedProperty.js":"105","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\Calculate.js":"106","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Listings\\Map\\Map.js":"107","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\Calculate.js":"108","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\ContactCard.js":"109","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Map\\Map.js":"110","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\constants\\common.js":"111"},{"size":1210,"mtime":1642748868116,"results":"112","hashOfConfig":"113"},{"size":11501,"mtime":1642748864694,"results":"114","hashOfConfig":"113"},{"size":375,"mtime":1642748868116,"results":"115","hashOfConfig":"113"},{"size":23818,"mtime":1642774892060,"results":"116","hashOfConfig":"113"},{"size":48106,"mtime":1642748865896,"results":"117","hashOfConfig":"113"},{"size":15866,"mtime":1642748865879,"results":"118","hashOfConfig":"113"},{"size":1427,"mtime":1642748865616,"results":"119","hashOfConfig":"113"},{"size":674,"mtime":1642748865536,"results":"120","hashOfConfig":"113"},{"size":537,"mtime":1642748865535,"results":"121","hashOfConfig":"113"},{"size":556,"mtime":1642748865499,"results":"122","hashOfConfig":"113"},{"size":45193,"mtime":1644433390925,"results":"123","hashOfConfig":"113"},{"size":1283,"mtime":1642748865498,"results":"124","hashOfConfig":"113"},{"size":9197,"mtime":1642748865399,"results":"125","hashOfConfig":"113"},{"size":12064,"mtime":1642748865875,"results":"126","hashOfConfig":"113"},{"size":6482,"mtime":1642748866034,"results":"127","hashOfConfig":"113"},{"size":5521,"mtime":1642748865990,"results":"128","hashOfConfig":"113"},{"size":10983,"mtime":1642748865902,"results":"129","hashOfConfig":"113"},{"size":18893,"mtime":1642774857318,"results":"130","hashOfConfig":"113"},{"size":7905,"mtime":1642748865450,"results":"131","hashOfConfig":"113"},{"size":3057,"mtime":1642748865363,"results":"132","hashOfConfig":"113"},{"size":7734,"mtime":1642774780147,"results":"133","hashOfConfig":"113"},{"size":21645,"mtime":1642774736646,"results":"134","hashOfConfig":"113"},{"size":13498,"mtime":1642774758448,"results":"135","hashOfConfig":"113"},{"size":2932,"mtime":1644433390934,"results":"136","hashOfConfig":"113"},{"size":2892,"mtime":1642774842211,"results":"137","hashOfConfig":"113"},{"size":12273,"mtime":1643014893585,"results":"138","hashOfConfig":"113"},{"size":23292,"mtime":1643014893604,"results":"139","hashOfConfig":"113"},{"size":22660,"mtime":1643014893586,"results":"140","hashOfConfig":"113"},{"size":2869,"mtime":1644433390944,"results":"141","hashOfConfig":"113"},{"size":7395,"mtime":1643014893603,"results":"142","hashOfConfig":"113"},{"size":52471,"mtime":1644433390951,"results":"143","hashOfConfig":"113"},{"size":36957,"mtime":1644433390947,"results":"144","hashOfConfig":"113"},{"size":18596,"mtime":1642774829251,"results":"145","hashOfConfig":"113"},{"size":15758,"mtime":1644433390942,"results":"146","hashOfConfig":"113"},{"size":18009,"mtime":1642774941937,"results":"147","hashOfConfig":"113"},{"size":12385,"mtime":1644433390948,"results":"148","hashOfConfig":"113"},{"size":2880,"mtime":1643014893608,"results":"149","hashOfConfig":"113"},{"size":41276,"mtime":1644433390938,"results":"150","hashOfConfig":"113"},{"size":17582,"mtime":1642774942015,"results":"151","hashOfConfig":"113"},{"size":36298,"mtime":1644433390939,"results":"152","hashOfConfig":"113"},{"size":41171,"mtime":1644433390936,"results":"153","hashOfConfig":"113"},{"size":30614,"mtime":1643014893609,"results":"154","hashOfConfig":"113"},{"size":39043,"mtime":1644433390950,"results":"155","hashOfConfig":"113"},{"size":42380,"mtime":1644433390953,"results":"156","hashOfConfig":"113"},{"size":17658,"mtime":1642774941937,"results":"157","hashOfConfig":"113"},{"size":12321,"mtime":1643014893611,"results":"158","hashOfConfig":"113"},{"size":19057,"mtime":1643271942355,"results":"159","hashOfConfig":"113"},{"size":16111,"mtime":1642748867023,"results":"160","hashOfConfig":"113"},{"size":12408,"mtime":1643014893606,"results":"161","hashOfConfig":"113"},{"size":17328,"mtime":1642774941936,"results":"162","hashOfConfig":"113"},{"size":14127,"mtime":1642775010032,"results":"163","hashOfConfig":"113"},{"size":18555,"mtime":1643014893610,"results":"164","hashOfConfig":"113"},{"size":21278,"mtime":1643014893610,"results":"165","hashOfConfig":"113"},{"size":23151,"mtime":1643376841736,"results":"166","hashOfConfig":"113"},{"size":13829,"mtime":1642748866816,"results":"167","hashOfConfig":"113"},{"size":20427,"mtime":1643014893607,"results":"168","hashOfConfig":"113"},{"size":29365,"mtime":1642748866940,"results":"169","hashOfConfig":"113"},{"size":21144,"mtime":1642748866989,"results":"170","hashOfConfig":"113"},{"size":22060,"mtime":1642748866991,"results":"171","hashOfConfig":"113"},{"size":24701,"mtime":1642748866887,"results":"172","hashOfConfig":"113"},{"size":21896,"mtime":1642748866889,"results":"173","hashOfConfig":"113"},{"size":6654,"mtime":1642748866939,"results":"174","hashOfConfig":"113"},{"size":21404,"mtime":1643014893598,"results":"175","hashOfConfig":"113"},{"size":19289,"mtime":1643014893599,"results":"176","hashOfConfig":"113"},{"size":18927,"mtime":1643014893598,"results":"177","hashOfConfig":"113"},{"size":18497,"mtime":1643014893600,"results":"178","hashOfConfig":"113"},{"size":20553,"mtime":1643014893597,"results":"179","hashOfConfig":"113"},{"size":19064,"mtime":1643014893600,"results":"180","hashOfConfig":"113"},{"size":19309,"mtime":1643014893597,"results":"181","hashOfConfig":"113"},{"size":18064,"mtime":1643014893596,"results":"182","hashOfConfig":"113"},{"size":5712,"mtime":1644433390935,"results":"183","hashOfConfig":"113"},{"size":13064,"mtime":1644433390941,"results":"184","hashOfConfig":"113"},{"size":5580,"mtime":1644433390945,"results":"185","hashOfConfig":"113"},{"size":20301,"mtime":1644433390948,"results":"186","hashOfConfig":"113"},{"size":727,"mtime":1642748866937,"results":"187","hashOfConfig":"113"},{"size":4110,"mtime":1642748866972,"results":"188","hashOfConfig":"113"},{"size":13232,"mtime":1642748866992,"results":"189","hashOfConfig":"113"},{"size":3668,"mtime":1642748866890,"results":"190","hashOfConfig":"113"},{"size":9187,"mtime":1643378284613,"results":"191","hashOfConfig":"113"},{"size":15872,"mtime":1644433390952,"results":"192","hashOfConfig":"113"},{"size":27429,"mtime":1642748867592,"results":"193","hashOfConfig":"113"},{"size":20939,"mtime":1643613626350,"results":"194","hashOfConfig":"113"},{"size":9490,"mtime":1642748867595,"results":"195","hashOfConfig":"113"},{"size":13715,"mtime":1642748867593,"results":"196","hashOfConfig":"113"},{"size":16962,"mtime":1643613657247,"results":"197","hashOfConfig":"113"},{"size":728,"mtime":1642748865362,"results":"198","hashOfConfig":"113"},{"size":6761,"mtime":1642748865364,"results":"199","hashOfConfig":"113"},{"size":3622,"mtime":1642748865899,"results":"200","hashOfConfig":"113"},{"size":739,"mtime":1642748865991,"results":"201","hashOfConfig":"113"},{"size":3403,"mtime":1642748865502,"results":"202","hashOfConfig":"113"},{"size":54368,"mtime":1644433390927,"results":"203","hashOfConfig":"113"},{"size":2509,"mtime":1642748865384,"results":"204","hashOfConfig":"113"},{"size":6759,"mtime":1642748866035,"results":"205","hashOfConfig":"113"},{"size":1165,"mtime":1642748865703,"results":"206","hashOfConfig":"113"},{"size":3188,"mtime":1642748865701,"results":"207","hashOfConfig":"113"},{"size":2291,"mtime":1642748865615,"results":"208","hashOfConfig":"113"},{"size":34633,"mtime":1642748865439,"results":"209","hashOfConfig":"113"},{"size":7200,"mtime":1642748865634,"results":"210","hashOfConfig":"113"},{"size":6140,"mtime":1642748865636,"results":"211","hashOfConfig":"113"},{"size":4267,"mtime":1642748865614,"results":"212","hashOfConfig":"113"},{"size":612,"mtime":1642748865816,"results":"213","hashOfConfig":"113"},{"size":380,"mtime":1642748867566,"results":"214","hashOfConfig":"113"},{"size":4981,"mtime":1642748865437,"results":"215","hashOfConfig":"113"},{"size":4818,"mtime":1642748865413,"results":"216","hashOfConfig":"113"},{"size":4887,"mtime":1642748865932,"results":"217","hashOfConfig":"113"},{"size":2281,"mtime":1642748865413,"results":"218","hashOfConfig":"113"},{"size":2010,"mtime":1644433390925,"results":"219","hashOfConfig":"113"},{"size":2281,"mtime":1642748865925,"results":"220","hashOfConfig":"113"},{"size":1730,"mtime":1642748865930,"results":"221","hashOfConfig":"113"},{"size":1308,"mtime":1642748867555,"results":"222","hashOfConfig":"113"},{"size":363,"mtime":1638004598074,"results":"223","hashOfConfig":"113"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"227"},"1u4czx3",{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"227"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"227"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"227"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"227"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"227"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"227"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"227"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"227"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"227"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"227"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"227"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"227"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"227"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"227"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"227"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"227"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"227"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"227"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"227"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"227"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"227"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"227"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"227"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"227"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"227"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"227"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"227"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"227"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"227"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"227"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"227"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"227"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"227"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"227"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"227"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"227"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"227"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"227"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"227"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"227"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"227"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"227"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"227"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"227"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"227"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"227"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"227"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"227"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"227"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"227"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"227"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"227"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"227"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"227"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"227"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"227"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"227"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"227"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"227"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"227"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"227"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"227"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"227"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"227"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"227"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"227"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"227"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"227"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\index.js",["517","518"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport axios from 'axios';\r\n// For GET requests\r\naxios.interceptors.request.use(\r\n  (req) => {\r\n\r\n    // Add configurations here\r\n    return req;\r\n  },\r\n  (err) => {\r\n    if (err.response.status == 401) {\r\n      localStorage.clear();\r\n      window.location.reload();\r\n    }\r\n    //console.log(err.response.status,'error get auhonticate 401');\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  (res) => {\r\n\r\n    return res;\r\n  },\r\n  (err) => {\r\n    if (err.response.status == 401) {\r\n      localStorage.clear();\r\n      window.location.reload();\r\n    }\r\n    //console.log(err.response.status,'error post auhonticate 401');\r\n    return Promise.reject(err);\r\n  }\r\n);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["519","520"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\App.js",["521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584"],"import React, { Component } from 'react'\r\nimport '../src/css/style.css'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from './components/Home/Index'\r\nimport Listing from './components/Listings/Index'\r\nimport Features from './components/Features/Index'\r\nimport SignIn from \"./components/SignIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Test from \"./components/GlobalComponents/Test\";\r\nimport Viewproperty from \"./components//Viewproperty/Index\";\r\nimport Slider from './components/Viewproperty/details/Slider'\r\nimport Contact from './components/contact/Index'\r\nimport About from './components/About/Index'\r\n\r\nimport Agent from './components/users/Agent/DashBoard';\r\nimport AgentProperty from './components/users/Agent/Property'\r\nimport AgentContact from './components/users/Agent/ContectAgent'\r\nimport AgentTakeTour from './components/users/Agent/TakeTourEnq'\r\nimport AgentChangePassword from './components/users/Agent/ChangePassword';\r\nimport AgentApproval from './components/users/Admin/AgentApproval'\r\nimport PropertyRequest from './components/users/Agent/AssignedProperty'\r\nimport AgentSellerContract from './components/users/Agent/ContractForms/SellerContract/AgentSeller'\r\nimport AgentContractBuyer from './components/users/Agent/ContractForms/BuyerContract/BuyerContract'\r\nimport SellerPurchaseList from './components/users/Agent/ContractForms/SellerPurchase/SellerPurchaseList'\r\nimport BuyerPurchaseList from './components/users/Agent/ContractForms/BuyerPurchase/BuyerPurchaseList'\r\nimport SellerContractList from './components/users/Agent/ContractForms/SellerContract/ContractList';\r\nimport buyerContractList from './components/users/Agent/ContractForms/BuyerContract/ContractList';\r\nimport SellerPurchaseContract from './components/users/Agent/ContractForms/SellerPurchase/SellerPurchaseContract'\r\nimport BuyerPurchaseContract from './components/users/Agent/ContractForms/BuyerPurchase/BuyerPurchaseContract'\r\n\r\n\r\nimport Seller from './components/users/Seller/Index';\r\nimport SellerProperty from './components/users/Seller/PropertyList'\r\nimport SellerVerifiedProperty from './components/users/Seller/VerifiedProperty'\r\nimport SellerVerifiedPropertyView from './components/users/Seller/ViewVerifiedProperty'\r\nimport SellerAddProperty from './components/users/Seller/Property/AddProperty';\r\nimport SellerEnquiry from './components/users/Seller/Enquiry'\r\nimport SellerProfile from './components/users/Seller/Profile';\r\nimport SellerChangePassword from './components/users/Seller/ChangePassword';\r\nimport SellerAgentContractList from './components/users/Seller/ContractForms/agentSellerContract'\r\nimport SellerPurchaseConList from './components/users/Seller/ContractForms/sellerPurchaseList'\r\n\r\nimport Admin from './components/users/Admin/Index';\r\nimport Cms from './components/users/Admin/Cms/PageList';\r\nimport EditCms from './components/users/Admin/Cms/EditPage'\r\nimport Users from './components/users/Admin/UserManagement.js';\r\nimport ReceiveEnquiry from './components/users/Admin/ReceiveEnquiry';\r\nimport AdminProperty from './components/users/Admin/Property';\r\nimport AdminEnquiry from './components/users/Admin/Enquiry';\r\nimport AdminProfile from './components/users/Admin/Profile';\r\nimport VerifiedPropertyAdmin from './components/users/Admin/Property/verifiedProperty';\r\nimport AssignProperty from './components/users/Admin/Property/AssignProperty';\r\nimport RequestedAssignPropery from './components/users/Admin/Property/RequestedAssignPropery'\r\nimport AdAssignedPropertyView from './components/users/Admin/Property/AssignedPropertyView';\r\nimport AdVerifiedPropertyView from './components/users/Admin/Property/VerifiedPropertyView';\r\nimport AdRequestedAssignProperyView from './components/users/Admin/Property/RequestedPropertyView';\r\nimport AdminChangePassword from './components/users/Admin/ChangePassword';\r\n\r\nimport Buyer from './components/users/Buyer/Index';\r\nimport BuyerMyWishlist from './components/users/Buyer/WishList'\r\nimport BuyerPropertyEnquiry from './components/users/Buyer/PropertyEnquiry/ContactAgent'\r\nimport BuyerPropertyEnquiryTour from \"./components/users/Buyer/PropertyEnquiry/TakeTour\"\r\nimport BuyerProfile from './components/users/Buyer/MyProfile';\r\nimport BuyerChangePassword from './components/users/Buyer/ChangePassword';\r\nimport BuyerAgentContractList from './components/users/Buyer/ContractForms/BuyerAgentContract'\r\nimport BuyerPurchaseConList from './components/users/Buyer/ContractForms/BuyerPurchase'\r\n\r\nimport AgentProfile from './components/users/Agent/Profile';\r\nimport ForgotPassword from './components/ForgotPassword';\r\n\r\nimport ErrorPage from './components/GlobalComponents/ErrorPage'\r\nimport permissionDenied from './components/GlobalComponents/PermissionDenied'\r\nimport CheckUser from './components/GlobalComponents/CheckUser';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ViewPropertyDetails from './components/users/Agent/ViewPropertyDetails';\r\nimport VerifiedProperty from './components/users/Agent/VerifiedProperties';\r\nimport VerifiedPropertyView from './components/users/Agent/VerifiedPropertyView'\r\n\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n     return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\"  component={Home} />\r\n            <Route exact path=\"/signin\" exact component={SignIn} />\r\n            <Route exact path=\"/user/verify/:token\" exact component={SignIn} />\r\n            <Route exact path=\"/signup\" exact component={SignUp} />\r\n            <Route exact path=\"/forgot/password\" exact component={ForgotPassword} />\r\n            <Route exact path=\"/reset-password/:token\" component={ResetPassword}></Route>\r\n            <Route exact path=\"/checkuser\" exact component={CheckUser} />\r\n            <Route exact path=\"/listing\" exact component={Listing} />\r\n            <Route exact path=\"/features\" exact component={Features} />\r\n            <Route exact path=\"/viewproperty/details/:id?\" exact component={Viewproperty} />\r\n            <Route exact path=\"/slider\" exact component={Slider} />\r\n            <Route exact path=\"/contact\" exact component={Contact} />\r\n            <Route exact path=\"/cms/:slug\" exact component={About} />\r\n            <Route exact path=\"/buyer\" exact component={Buyer} />\r\n            {/* <Route exact path=\"/buyer/dashboard\" exact component={DashBoard} /> */}\r\n            <Route exact path=\"/buyer/profile\" exact component={BuyerProfile} />\r\n            <Route exact path=\"/buyer/wishlist\" exact component={BuyerMyWishlist} />\r\n            <Route exact path=\"/buyer/contact/enquiry\" exact component={BuyerPropertyEnquiry} />\r\n            <Route exact path=\"/buyer/taketour/enquiry\" exact component={BuyerPropertyEnquiryTour} />\r\n            <Route exact path=\"/buyer/contract/list\" exact component={BuyerAgentContractList} />\r\n            <Route exact path=\"/buyer/purchase/contract/list\" exact component={BuyerPurchaseConList} />\r\n            <Route exact path=\"/buyer/changepassword\" exact component={BuyerChangePassword} />\r\n            \r\n            <Route exact path=\"/agent\" exact component={Agent} />\r\n            <Route exact path=\"/agent/profile\" exact component={AgentProfile} />\r\n            <Route exact path=\"/agent/property\" exact component={AgentProperty} />\r\n            <Route exact path=\"/agent/assigned/property\" exact component={PropertyRequest} />\r\n            <Route exact path=\"/agent/verified/property\" exact component={VerifiedProperty} />\r\n            <Route exact path=\"/agent/verified/property/details/:id?\" exact component={VerifiedPropertyView} />\r\n            <Route exact path=\"/agent/property/details/:id?\" exact component={ViewPropertyDetails} />\r\n            <Route exact path=\"/agent/enquiry\" exact component={AgentContact} />\r\n            <Route exact path=\"/agent/enquiry/tour\" exact component={AgentTakeTour} />\r\n            <Route exact path=\"/agent/changepassword\" exact component={AgentChangePassword} />\r\n            <Route exact path=\"/agent/seller/contract/list\" exact component={SellerContractList} />\r\n            <Route exact path=\"/agent/buyer/contract/list\" exact component={buyerContractList} />\r\n            <Route exact path=\"/agent/contract/seller\" exact component={AgentSellerContract} />\r\n            <Route exact path=\"/agent/contract/buyer\" exact component={AgentContractBuyer} />\r\n            <Route exact path=\"/agent/contract/seller/purchase/list\" exact component={SellerPurchaseList} />\r\n            <Route exact path=\"/agent/contract/buyer/purchase/list\" exact component={BuyerPurchaseList} />\r\n            <Route exact path=\"/agent/seller/purchase/contract\" exact component={SellerPurchaseContract} />\r\n            <Route exact path=\"/agent/buyer/purchase/contract\" exact component={BuyerPurchaseContract} />\r\n          \r\n\r\n            <Route exact path=\"/seller\" exact component={Seller} />\r\n            <Route exact path=\"/seller/profile\" exact component={SellerProfile} />\r\n            <Route exact path=\"/seller/verified/property\" exact component={SellerVerifiedProperty} />\r\n            <Route exact path=\"/seller/verified/property/details/:id?\" exact component={SellerVerifiedPropertyView} />\r\n            <Route exact path=\"/seller/property\" exact component={SellerProperty} />\r\n            <Route exact path=\"/seller/edit-property/:id?\" exact component={SellerAddProperty} />\r\n            <Route exact path=\"/seller/enquiry\" exact component={SellerEnquiry} />\r\n            <Route exact path=\"/seller/changepassword\" exact component={SellerChangePassword} />\r\n            <Route exact path=\"/seller/contract/list\" exact component={SellerAgentContractList} />\r\n            <Route exact path=\"/seller/purchase/contract/list\" exact component={SellerPurchaseConList} />\r\n\r\n            <Route exact path=\"/admin\" exact component={Admin} />\r\n            <Route exact path=\"/cms\" exact component={Cms} />\r\n            <Route exact path=\"/edit/cms/:id\" exact component={EditCms} />\r\n            <Route exact path=\"/admin/users\" exact component={Users} />\r\n            <Route exact path=\"/admin/received/enquiry\" exact component={ReceiveEnquiry} />\r\n            <Route exact path=\"/admin/profile\" exact component={AdminProfile} />\r\n            <Route exact path=\"/admin/property\" exact component={AdminProperty} />\r\n            <Route exact path=\"/admin/enquiry\" exact component={AdminEnquiry} />\r\n            <Route exact path=\"/admin/approval\" exact component={AgentApproval} />\r\n            <Route exact path=\"/admin/verified/property\" exact component={VerifiedPropertyAdmin} />\r\n            <Route exact path=\"/admin/assign/property\" exact component={AssignProperty} />\r\n            <Route exact path=\"/admin/requested/assign/property\" exact component={RequestedAssignPropery} />\r\n            <Route exact path=\"/admin/changepassword\" exact component={AdminChangePassword} />\r\n            <Route exact path=\"/admin/verified/property/View/:id?\" exact component={AdVerifiedPropertyView} />\r\n            <Route exact path=\"/admin/requested/property/View/:id?\" exact component={AdRequestedAssignProperyView} />\r\n            <Route exact path=\"/admin/property/View/:id?\" exact component={AdAssignedPropertyView} />\r\n            \r\n            <Route exact path=\"/test\" exact component={Test} />\r\n            <Route path=\"/permission\" component={permissionDenied}></Route>\r\n            <Route path=\"\" component={ErrorPage}></Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\reportWebVitals.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\UserManagement.js",["585"],"import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../constants/common';\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Button } from \"reactstrap\"\r\nimport { Modal, Table, ModalBody, ModalHeader, ModalFooter, Input, Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport XLSX from 'xlsx'\r\nimport { ExportSheet } from 'react-xlsx-sheet'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class AssignProperty extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            userList: [],\r\n            exportList: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"unblock\", \"label\": \"Active\" }, { 'value': \"block\", \"label\": \"Blocked\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            userTypeArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"buyer\", \"label\": \"Buyer\" }, { 'value': \"seller\", \"label\": \"Seller\" }, { 'value': \"agent\", \"label\": \"Agent\" }],\r\n            userTypeArrayDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            AgentList: [],\r\n            agentId: \"\",\r\n            agentReq: [],\r\n            Visible: false,\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            userType: [],\r\n            AssignModal: false,\r\n            agent_id: \"\",\r\n            sortby: \"DESC\",\r\n            sort: false,\r\n            userId: \"\",\r\n            table: \"\",\r\n            activeSide:false\r\n        }\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getUsersList()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getUsersList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getUsersList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleUserType(e) {\r\n        this.setState(\r\n            {\r\n                userType: e.value,\r\n                userTypeArrayDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getUsersList() });\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getUsersList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getUsersList()\r\n            }\r\n        );\r\n    }\r\n\r\n    getUsersList() {\r\n        this.setState({ Loader: true })\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('usertypefilter', this.state.userType);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        //GET users Data List \r\n        axios\r\n            .post(APIURL + \"admin/get-allusers-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    userList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader: false\r\n                })\r\n            })\r\n        //GET Export Data List \r\n        axios\r\n            .post(APIURL + \"admin/export-users\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"reposmse export list\", response.data.data)\r\n                this.setState({\r\n                    exportList: response.data.data,\r\n                })\r\n            })\r\n    }\r\n\r\n    handleAgentName(e) {\r\n        console.log(e)\r\n        this.setState({\r\n            agent_id: e,\r\n\r\n        })\r\n    };\r\n\r\n    ActiveDrop = (e) => {\r\n        this.setState({\r\n            userId: e,\r\n            AssignModal: true,\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            AssignModal: false\r\n        })\r\n    }\r\n\r\n    SubmitProperty = (item, status) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('user_id', item.id);\r\n        formData.append('status', status);\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"admin/user-status-update\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    Loader: false,\r\n                    Visible: false,\r\n                    AssignModal: false\r\n                });\r\n                this.getUsersList()\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    Visible: false\r\n                })\r\n            });\r\n        this.getUsersList()\r\n    };\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            table: document.querySelector('#table-to-xls'),\r\n        });\r\n        this.getUsersList()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container-scroller resido-admin\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\r\n                    <Navbar\r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                    />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar\r\n                            sideMenu={this.sideMenu.bind(this)}\r\n                            activeSide={this.state.activeSide}\r\n                            activePage=\"users\"\r\n                        />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">User Management</h4>\r\n                                    <h4 className=\"text-uppercase\">\r\n                                        <ExportSheet\r\n                                            dataType=\"Table-Node-Element\"\r\n                                            fileName={`users`}\r\n                                            tableElement={this.state.table}\r\n                                            xlsx={XLSX}\r\n                                            className=\"text-dark\"\r\n                                        >\r\n                                            <Button color=\"info\" className=\"download-table-xls-button btn-sm btn-info btn-rounded\"><i style={{ fontSize: \"12px\" }} className=\"fas fa-arrow-circle-down menu-icon\"></i> Export</Button>\r\n                                        </ExportSheet>\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"All\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.userTypeArray}\r\n                                            value={this.state.userTypeArrayDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleUserType(e)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Select Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-12 grid-margin\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <Table className=\"table \">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by text-left\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}>Name</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"email\")}>Email Address</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"user_type\")}> User Type</th>\r\n                                                                <th> Status</th>\r\n                                                                <th className=\"text-center\"> Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.userList.length > 0 ? this.state.userList.map((item, idx) => (\r\n                                                                <React.Fragment>\r\n                                                                    <tr >\r\n                                                                        <td className=\"text-left\" >{item.fullName}</td>\r\n                                                                        <td>  {item.email} </td>\r\n                                                                        <td>  {item.user_type} </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === \"deactive\" ?\r\n                                                                                    <label className=\"badge badge-danger\">Blocked</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-success\">Active</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            <Button color='info' size='sm' className=\"btn-rounded px-3\" onClick={() => this.ActiveDrop(item.id)}>View</Button>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </React.Fragment>\r\n                                                            )) :\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"4\" className=\"text-center\">\r\n                                                                        No Request Available\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n\r\n                                                {/* export table hidden */}\r\n\r\n                                                <div className=\"table-responsive d-none\">\r\n                                                    <Table id=\"table-to-xls\" className=\"table \">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by text-left\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}>Name</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"email\")}>Email Address</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"user_type\")}> User Type</th>\r\n                                                                <th> Status</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.exportList.length > 0 ? this.state.exportList.map((item, idx) => (\r\n                                                                <React.Fragment>\r\n                                                                    <tr >\r\n                                                                        <td className=\"text-left\" >{item.fullName}</td>\r\n                                                                        <td>  {item.email} </td>\r\n                                                                        <td>  {item.user_type} </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === \"deactive\" ?\r\n                                                                                    <label className=\"badge badge-danger\">Blocked</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-success\">Active</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </React.Fragment>\r\n                                                            )) :\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"4\" className=\"text-center\">\r\n                                                                        No Request Available\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n\r\n                                        {this.state.totalItemsCount > 0 &&\r\n                                            <div className=\"pagination-rounded\">\r\n                                                <Pagination\r\n                                                    activePage={this.state.activePage}\r\n                                                    itemsCountPerPage={this.state.limit}\r\n                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                    pageRangeDisplayed={5}\r\n                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                />\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.AssignModal} toggle={() => this.ModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>User Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {\r\n                            this.state.userList.length > 0 ? this.state.userList.filter(item => item.id === this.state.userId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Name</label>\r\n                                        <p>{item.fullName}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Email</label>\r\n                                        <p className='text-break'>{item.email}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Country</label>\r\n                                        <p>{item.country_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">State</label>\r\n                                        <p>{item.state_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Phone Number</label>\r\n                                        <p>{item.phone}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">User Type</label>\r\n                                        <p>{item.user_type}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{item.status === \"active\" ? \"Active\" : item.status === \"deactive\" ? \"Blocked\" : \"\"}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )) :\r\n                                <tr>\r\n                                    <td colSpan=\"4\" className=\"text-center\">\r\n                                        No data Available\r\n                                    </td>\r\n                                </tr>\r\n                        }\r\n                    </ModalBody>\r\n                    {\r\n                        this.state.userList.length > 0 && this.state.userList.filter(item => item.id === this.state.userId).map((item, idx) => (\r\n                            <ModalFooter >\r\n                                <div className=\"d-flex justify-content-between w-100\">\r\n                                    {\r\n                                        item.status === \"active\" ?\r\n                                            <Button color=\"success\" onClick={(e) => this.SubmitProperty(item, \"block\")} >Block</Button> :\r\n                                            <Button color=\"success\" onClick={(e) => this.SubmitProperty(item, \"unblock\")}  >Unblock</Button>\r\n                                    }\r\n                                    <Button color=\"danger\" onClick={(e) => this.ModalClose()}  >Cancel</Button>\r\n                                </div>\r\n                            </ModalFooter>\r\n                        ))\r\n                    }\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\SignUp.js",["586","587","588","589"],"import React, { Component } from 'react'\r\nimport logo from '../assets/img/logo.png'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from \"axios\";\r\n// import Button from '@restart/ui/esm/Button'\r\nimport { APIURL } from '../components/constants/common';\r\nimport { Spinner, Button } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst options = [\r\n    { value: 'a', label: 'a' },\r\n    { value: 'b', label: 'b' },\r\n];\r\n\r\n\r\nexport default class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signupData: {\r\n                name: \"\",\r\n                first_name: \"\",\r\n                last_name: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                language: \"\",\r\n                introduction: \"\",\r\n                license_number: \"\",\r\n                password: \"\",\r\n                c_password: \"\",\r\n                address: \"\",\r\n                city: \"\",\r\n                street_name: \"\",\r\n                street_number: \"\",\r\n                zip_code: \"\",\r\n                image: \"\",\r\n                username: \"\"\r\n            },\r\n            image: \"\",\r\n            ImageName: \"\",\r\n            licenceImage: \"\",\r\n            languages: [],\r\n            selectecdLanguages: [],\r\n            countrycode: \"\",\r\n            countryId: \"\",\r\n            countries: [0],\r\n            States: [],\r\n            stateId: \"\",\r\n            user_type_id: 0,\r\n            user_Type: \"\",\r\n            selectType: \"\",\r\n            msg: \"\",\r\n            errMsg: {},\r\n            scsMsg: \"\",\r\n            user_types: [],\r\n            redirect: false,\r\n            isLoading: false,\r\n            fullscrLoader: true,\r\n            showPassword: false,\r\n            Cofirm_showPassword: false,\r\n\r\n        }\r\n    }\r\n\r\n\r\n    onChangehandler = (e, key) => {\r\n        const { signupData } = this.state;\r\n        signupData[e.target.name] = e.target.value;\r\n        this.setState({ signupData, errMsg: \"\" });\r\n        console.log(signupData)\r\n    };\r\n\r\n    handleUserType = (e) => {\r\n        this.setState({\r\n            user_type_id: e\r\n        })\r\n    }\r\n\r\n    //get language\r\n    getLanguages() {\r\n        axios\r\n            .get(APIURL + \"languages\")\r\n            .then((response) => {\r\n                let languages = response.data.languages;\r\n                for (var c = 0; c < languages.length; c++) {\r\n                    this.state.languages.push({ value: languages[c].id, label: languages[c].name })\r\n                }\r\n\r\n\r\n                console.log(this.state.languages)\r\n            })\r\n    }\r\n\r\n\r\n    handleLanguages = (selectedLanguages) => {\r\n        this.setState({\r\n            selectedLanguages: selectedLanguages\r\n        });\r\n    }\r\n\r\n    getCountries() {\r\n        axios\r\n            .get(APIURL + \"countries\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    countries: response.data.countries\r\n                })\r\n            })\r\n    }\r\n\r\n    handleCountry(e) {\r\n        this.setState({\r\n            countryId: e\r\n        }, () => {\r\n            this.handleCountryState()\r\n        })\r\n        console.log(this.state.countryId)\r\n    }\r\n\r\n    handleCountryState = () => {\r\n        console.log(this.state.countryId)\r\n        axios\r\n            .post(APIURL + \"states\", {\r\n                country_id: this.state.countryId,\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data.states)\r\n                this.setState({\r\n                    States: response.data.states\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    // isLoading: false,\r\n                    // errMsg: error.response.data.error,\r\n                })\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 3000);\r\n            });\r\n    };\r\n\r\n\r\n    handleState(e) {\r\n        this.setState({\r\n            stateId: e\r\n        }, () => {\r\n            this.handleCountryState()\r\n        })\r\n        console.log(\"stateId\", this.state.stateId)\r\n    }\r\n    handleLicenceImage = (e) => {\r\n        this.setState({\r\n            licenceImage: e.target.files[0]\r\n        })\r\n        console.log(this.state.licenceImage)\r\n    }\r\n    handleUploadDoc = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0],\r\n            ImageName: e.target.files[0].name\r\n        })\r\n\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        // console.log(JSON.stringify(this.state.selectedOptions))\r\n        e.preventDefault()\r\n        const { signupData } = this.state;\r\n        const user_type = parseInt(this.state.user_type_id) === 0 ? \"buyer\" : parseInt(this.state.user_type_id) === 1 ? \"agent\" : \"seller\"\r\n\r\n        const formData = new FormData();\r\n        formData.append('user_type', user_type);\r\n        formData.append('username', this.state.signupData.username);\r\n        formData.append('name', this.state.signupData.name);\r\n        formData.append('last_name', this.state.signupData.last_name);\r\n        formData.append('phone', this.state.signupData.phone);\r\n        formData.append('email', this.state.signupData.email);\r\n        formData.append('state', this.state.stateId);\r\n        formData.append('country', this.state.countryId);\r\n        formData.append('license_file_upload', this.state.image);\r\n        formData.append('language', JSON.stringify(this.state.selectedLanguages) ? JSON.stringify(this.state.selectedLanguages) : \"\");\r\n        formData.append('street_number', this.state.signupData.street_number);\r\n        formData.append('street_name', this.state.signupData.street_name);\r\n        formData.append('city', this.state.signupData.city ? this.state.signupData.city : \"\");\r\n        formData.append('zip_code', this.state.signupData.zip_code ? this.state.signupData.zip_code : \"\");\r\n        formData.append('password', this.state.signupData.password);\r\n        formData.append('c_password', this.state.signupData.c_password);\r\n        formData.append('license_number', this.state.signupData.license_number);\r\n        formData.append('introduction', this.state.signupData.introduction);\r\n\r\n        const success = this.props.location;\r\n        this.setState({ isLoading: true });\r\n        axios\r\n            .post(APIURL + \"register\", formData)\r\n            .then((response) => {\r\n                // console.log(\"register\", response.data.accountVerified)\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    isLoading: false\r\n                }, () => {\r\n                    // this.SignUpSuccess(this.state.scsMsg)\r\n                })\r\n                localStorage.setItem(\"accountVerified\", response.data.accountVerified);\r\n                setTimeout(() => this.setState({\r\n                    redirect: true\r\n                }), 5000);\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    redirect: false,\r\n                    errMsg: error.response.data.error,\r\n                })\r\n\r\n            });\r\n    };\r\n    showPassword() {\r\n        this.setState({\r\n            showPassword: !this.state.showPassword\r\n        })\r\n    }\r\n    Cofirm_showPassword() {\r\n        this.setState({\r\n            Cofirm_showPassword: !this.state.Cofirm_showPassword\r\n        })\r\n    }\r\n    SignUpSuccess = (text) => toast.success(text, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\",\r\n        onclick: this.redirect\r\n    })\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        setTimeout(() => this.setState({ fullscrLoader: \"\" }), 500);\r\n        this.getCountries();\r\n        this.getLanguages();\r\n        this.handleCountry(231);\r\n\r\n    }\r\n    toggle(){\r\n\t\tthis.setState({\r\n\t\t\tportrait:!this.state.portrait\r\n\t\t})\r\n\t}\r\n    render() {\r\n        console.log(this.props)\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/signin\" push={true} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-front\">\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                {this.state.fullscrLoader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div id=\"main-wrapper\">\r\n                    <div className=\"header header-light head-shadow\">\r\n                        <div className=\"container\">\r\n                        <nav id=\"navigation\" className={this.state.portrait ? \"navigation navigation-portrait\":\"navigation navigation-landscape\"}>\r\n\t\t\t\t\t\t\t<div className=\"nav-header\">\r\n\t\t\t\t\t\t\t\t{/* <Link className=\"nav-brand static-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link> */}\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand fixed-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<div onClick={() => this.toggle()} className=\"nav-toggle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={this.state.portrait ? \"nav-menus-wrapper-open nav-menus-wrapper\": \"nav-menus-wrapper\"} style={{ transitionProperty: this.state.portrait ? \"left\" : \"none\" }}>\r\n\t\t\t\t\t\t\t\t<span class=\"nav-menus-wrapper-close-button\" onClick={() => this.toggle()}>✕</span>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu\">\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t{!this.state.disableWishList ? <li><Link to=\"/buyer/wishlist\">Wishlist</Link></li> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu nav-menu-social align-to-right\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"d-none\"><Link to=\"\"><i className=\"far fa-heart mr-2 text-success\"></i>Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"dropdown bg-transparent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-toggle text-success \" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* {\r\n                                        this.state.noRecords &&\r\n                                        <img  className='mr-1 rounded-circle' width={30} height={30} src={this.state.profile_image !== \"\" ? this.state.profile_image : face1} alt=\"profile\" />\r\n                                    } */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-success' >{this.state.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.goToProfile()} ><i className=\"far fa-user mr-2 \"></i>Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.onLogoutHandler()} to=\"/\"><i className=\"fas fa-sign-out-alt mr-2\"></i>Logout</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li> :\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"\"> <Link to=\"/signin\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign In</Link> </li>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<li className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign Up</Link>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.portrait ? \r\n\t\t\t\t\t\t\t\t<div className='nav-overlay-panel'></div>\r\n\t\t\t\t\t\t\t\t:\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"gray-simple\">\r\n                        <div className=\"col-12 col-lg-7 m-auto py-5 signupForm\" role=\"document\" >\r\n                            <div className=\"\" id=\"registermodal\">\r\n                                <div className=\"submit-page login-pop-form\">\r\n                                    <div className=\"card-body\">\r\n                                        <h2 className=\"mb-4\" style={{ margin: \"0px\" }}>Sign Up</h2>\r\n                                        {this.state.scsMsg ? <div className=\"alert alert-success\" role=\"alert\">\r\n                                            {this.state.scsMsg}\r\n                                        </div> : \"\"}\r\n                                        <div className=\"row mt-3 mb-3\">\r\n                                            <div className=\"col-lg-12 col-md-12\">\r\n                                                <div className=\"mb-3 d-flex justify-content-around select-arrow\">\r\n                                                    <div className=\"input-with-icon\">\r\n                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handleUserType(e.target.value)} >\r\n                                                            <option value=\"0\"  >As a Buyer</option>\r\n                                                            <option value=\"1\"  >As a Agent</option>\r\n                                                            <option value=\"2\"  >As a Seller</option>\r\n                                                        </select>\r\n                                                        <span className=\"text-danger\">{this.state.errMsg.user_type}</span>\r\n                                                        <i className=\"ti-briefcase\"></i>\r\n                                                    </div>\r\n                                                    <i className=\"fas fa-chevron-down\"></i>\r\n                                                    <span className=\"text-danger\">{this.state.errMsg.user_type}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"login-form\">\r\n                                            <form onSubmit={(e) => this.onSubmitHandler(e)}>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>First Name <strong className=\"text-danger\" >*</strong></label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n                                                                    autoFocus={true}\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"First Name\"\r\n                                                                    value={this.state.signupData.name}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <i className=\"ti-user\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.name}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>Surname <strong className=\"text-danger\" ></strong></label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"last_name\"\r\n                                                                    placeholder=\"Surname\"\r\n                                                                    value={this.state.signupData.last_name}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <i className=\"ti-user\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.last_name}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {parseInt(this.state.user_type_id) === 1 ?\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label> User Name <strong className=\"text-danger\" ></strong></label>\r\n\r\n                                                                <div className=\"input-with-icon\">\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"username\"\r\n                                                                        placeholder=\"User Name\"\r\n                                                                        value={this.state.signupData.username}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <i className=\"fas fa-address-card\"></i>\r\n                                                                </div>\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.username}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : \"\"}\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>Email Address<strong className=\"text-danger\" >*</strong></label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"email\"\r\n                                                                    name=\"email\"\r\n                                                                    placeholder=\"Email Address\"\r\n                                                                    value={this.state.signupData.email}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <i className=\"ti-email\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.email}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>Country <strong className=\"text-danger\" ></strong></label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handleCountry(e.target.value)}  >\r\n                                                                    <option  >Select Country</option>\r\n                                                                    {this.state.countries.length > 0 ?\r\n                                                                        this.state.countries.map((item, idx) => (\r\n                                                                            <option value={item.id} selected={item.id === 231}  >{item.name}</option>\r\n                                                                        )) :\r\n                                                                        <span></span>\r\n                                                                    }\r\n                                                                </select>\r\n                                                                <i className=\"fas fa-globe-asia\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.country}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>State </label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handleState(e.target.value)}  >\r\n                                                                    <option>Select State</option>\r\n                                                                    {this.state.States.length > 0 ?\r\n                                                                        this.state.States.map((item, idx) => (\r\n                                                                            <option value={item.id} >{item.name}</option>\r\n                                                                        )) :\r\n                                                                        <span></span>\r\n                                                                    }\r\n                                                                </select>\r\n                                                                <i className=\"fas fa-city\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.state}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n\r\n                                                            <label> City </label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    name=\"city\"\r\n                                                                    onkeypress=\"return isNumberKey(event)\"\r\n                                                                    placeholder=\"City\"\r\n                                                                    value={this.state.signupData.city}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n\r\n                                                                <i className=\"fas fa-city\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.city}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>Street Number</label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"number\"\r\n                                                                    name=\"street_number\"\r\n                                                                    placeholder=\"Street Number\"\r\n                                                                    value={this.state.signupData.street_number}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <i className=\"fas fa-road\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.street_number}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>Street Name</label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"street_name\"\r\n                                                                    placeholder=\"Street Name\"\r\n                                                                    value={this.state.signupData.street_name}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <i className=\"fas fa-road\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.street_name}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n\r\n                                                            <label> Zip </label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"number\"\r\n                                                                    min=\"0\"\r\n                                                                    name=\"zip_code\"\r\n                                                                    onkeypress=\"return isNumberKey(event)\"\r\n                                                                    placeholder=\"Zip\"\r\n                                                                    value={this.state.signupData.zip_code}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n\r\n                                                                <i className=\"fas fa-mail-bulk\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.zip_code}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n\r\n                                                            <label> Phone Number <strong className=\"text-danger\" >*</strong></label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"number\"\r\n                                                                    min=\"0\"\r\n                                                                    name=\"phone\"\r\n                                                                    onkeypress=\"return isNumberKey(event)\"\r\n                                                                    placeholder=\"Phone Number\"\r\n                                                                    value={this.state.signupData.phone}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n\r\n                                                                <i className=\"lni-phone-handset\"></i>\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.phone}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-12 col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label> Language <strong className=\"text-danger\" ></strong></label>\r\n                                                            <div className=\"input-with-icon\">\r\n                                                                <Select\r\n                                                                    isMulti\r\n                                                                    placeholder=\"Select Language\"\r\n                                                                    value={this.state.selectedLanguages}\r\n                                                                    onChange={this.handleLanguages}\r\n                                                                    options={this.state.languages}\r\n                                                                />\r\n\r\n\r\n                                                                {/* <i className=\"fas fa-language\"></i> */}\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.language}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {parseInt(this.state.user_type_id) === 1 ?\r\n                                                        <div className=\"col-lg-12 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label> License Image<strong className=\"text-danger\"></strong></label>\r\n                                                                <div className='mt-2 mb-2' style={{ color: \"blue\" }} >{this.state.ImageName}</div>\r\n                                                                <div className=\"\">\r\n                                                                    <div className=\"license-uplode\">\r\n                                                                        <input\r\n                                                                            type=\"file\"\r\n                                                                            onChange={this.handleUploadDoc}\r\n                                                                            className=\"form-control \"\r\n                                                                            id=\"fileinput\"\r\n                                                                            style={{ lineHeight: \"2.1\" }}\r\n                                                                        />\r\n                                                                        <label htmlFor=\"fileinput\"> <i className=\"fas fa-plus-circle mr-2\"></i> License Upload</label>                                                                    </div>\r\n                                                                    {/* <i className=\"fas fa-address-card\"></i> */}\r\n                                                                    <span style={{ color: \"#485d94\" }}> (Only png, jpg, jpeg format and size upto 2 MB is allowed)</span><br />\r\n\r\n                                                                </div>\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.license_number}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : \"\"}\r\n                                                    {parseInt(this.state.user_type_id) === 1 ?\r\n                                                        <div className=\"col-lg-12 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label> License Number <strong className=\"text-danger\" ></strong></label>\r\n\r\n                                                                <div className=\"input-with-icon\">\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"number\"\r\n                                                                        min=\"0\"\r\n                                                                        name=\"license_number\"\r\n                                                                        placeholder=\"License number\"\r\n                                                                        value={this.state.signupData.license_number}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <i className=\"fas fa-address-card\"></i>\r\n                                                                </div>\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.license_number}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : \"\"}\r\n                                                    {\r\n                                                        parseInt(this.state.user_type_id) === 1 ?\r\n                                                            <div className=\"col-lg-12 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label> Introduction <strong className=\"text-danger\" ></strong></label>\r\n\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <textarea\r\n                                                                            className=\"form-control\"\r\n                                                                            required=\"\"\r\n                                                                            type=\"textarea\"\r\n                                                                            name=\"introduction\"\r\n                                                                            placeholder=\"Introduction\"\r\n                                                                            value={this.state.signupData.introduction}\r\n                                                                            onChange={this.onChangehandler}\r\n                                                                        >\r\n                                                                        </textarea>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.introduction}</span>\r\n\r\n                                                                        <i className=\"fas fa-info info-sp\"></i>\r\n                                                                    </div>\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.introduction}</span>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : \"\"\r\n                                                    }\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label> Password <strong className=\"text-danger\" >*</strong></label>\r\n\r\n                                                            <div className=\"position-relative\">\r\n                                                                <div className=\"input-with-icon\">\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type={this.state.showPassword ? \"text\" : \"password\"}\r\n                                                                        name=\"password\"\r\n                                                                        placeholder=\"Password\"\r\n                                                                        value={this.state.signupData.password}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <i className=\"ti-unlock\"></i>\r\n                                                                </div>\r\n                                                                {this.state.showPassword ?\r\n                                                                    <span className=\"fa-eye-pass\"> <i onClick={() => this.showPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                    :\r\n                                                                    <span className=\"fa-eye-pass\"> <i onClick={() => this.showPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                                }\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.password}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label> Confirm Password <strong className=\"text-danger\" >*</strong></label>\r\n                                                            <div className=\"position-relative\">\r\n                                                                <div className=\"input-with-icon\">\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type={this.state.Cofirm_showPassword ? \"text\" : \"password\"}\r\n                                                                        name=\"c_password\"\r\n                                                                        placeholder=\"Confirm Password\"\r\n                                                                        value={this.state.signupData.c_password}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <i className=\"ti-unlock\"></i>\r\n                                                                </div>\r\n                                                                {this.state.Cofirm_showPassword ?\r\n                                                                    <span className=\"fa-eye-pass\"> <i onClick={() => this.Cofirm_showPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                    :\r\n                                                                    <span className=\"fa-eye-pass\"> <i onClick={() => this.Cofirm_showPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                                }\r\n                                                            </div>\r\n                                                            <span className=\"text-danger\">{this.state.errMsg.c_password}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <Button\r\n                                                        type=\"submit\"\r\n                                                        // onSubmit={() => this.onSubmitHandler()}\r\n                                                        className=\"btn btn-md full-width btn-theme-light-2 rounded mt-4\"\r\n                                                    >\r\n                                                        Sign Up\r\n                                                        {this.state.isLoading ? (\r\n                                                            <span\r\n                                                                className=\"spinner-border spinner-border-sm ml-2\"\r\n                                                                role=\"status\"\r\n                                                                aria-hidden=\"true\"\r\n                                                            ></span>\r\n                                                        ) : (\r\n                                                            <span></span>\r\n                                                        )}\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"mt-3 fw-bold\">\r\n                                                <i className=\"ti-user mr-1\"></i>\r\n                                                Already Have An Account?\r\n                                                <Link to=\"/signin\" className=\"link ms-2\">Go For LogIn</Link></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\SignIn.js",["590","591","592","593","594"],"import React, { Component } from 'react'\r\n// import '../frontend_css/'\r\nimport logo from '../assets/img/logo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Spinner, Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { APIURL, BASEURL } from '../components/constants/common';\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errMsgEmail: \"\",\r\n            errMsgPwd: \"\",\r\n            msg: \"\",\r\n            isLoading: false,\r\n            redirect: false,\r\n            errMsg: [],\r\n            scsMsg: \"\",\r\n            showPassword: false,\r\n            modal: false,\r\n            fullScrLoader: true,\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            accountVerified: true,\r\n            scsMsgResend: \"\",\r\n            ActiveMsg: \"\",\r\n            stylePath: true\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    onChangehandler = (e) => {\r\n        console.log(e)\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        let data = {};\r\n        data[name] = value;\r\n        this.setState(data);\r\n        console.log(data)\r\n    };\r\n\r\n    handleUserName(e) {\r\n        console.log(e)\r\n        this.setState({\r\n            userName: e\r\n        })\r\n        console.log(this.state.userName)\r\n    }\r\n\r\n    handlePassword(e) {\r\n        console.log(e)\r\n        this.setState({\r\n            password: e\r\n        })\r\n        console.log(this.state.password)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        axios\r\n            .post(APIURL + \"login\", {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                })\r\n                localStorage.setItem(\"isLoggedIn\", true);\r\n                localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n                localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n                localStorage.setItem(\"user_type\", JSON.stringify(response.data.user.user_type));\r\n                this.setState({\r\n                    redirect: true,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    accountVerified: error.response.data.accountVerified,\r\n                    errMsg: error.response.data.error,\r\n                })\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 5000);\r\n            });\r\n    }\r\n\r\n    showPassword() {\r\n        this.setState({\r\n            showPassword: !this.state.showPassword\r\n        })\r\n    }\r\n\r\n\r\n    resendActivationMail = () => {\r\n        axios\r\n            .post(APIURL + \"resend/email\", {\r\n                email: this.state.email,\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    scsMsgResend: response.data.message,\r\n                    errMsg: \"\"\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n    ActivationMsg = () => {\r\n        const params = this.props.match.params\r\n        // console.log(params.id)\r\n        if (params.token) {\r\n            axios\r\n                .get(APIURL + \"email/verify/\" + params.token)\r\n                .then((response) => {\r\n\r\n                    this.setState({\r\n                        ActivationMsg: response.data.message\r\n                    })\r\n                    setTimeout(() => this.setState({ ActivationMsg: false }), 4000);\r\n\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        errMsg: error.response.data.error,\r\n                    })\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.ActivationMsg()\r\n        setTimeout(() => this.setState({\r\n            fullScrLoader: false\r\n        }), 500);\r\n    }\r\n\r\n    toggle(){\r\n\t\tthis.setState({\r\n\t\t\tportrait:!this.state.portrait\r\n\t\t})\r\n\t}\r\n    render() {\r\n        console.log(this.props)\r\n        const { user } = this.state;\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/checkuser\" />;\r\n        }\r\n        return (\r\n            <div className=\"resido-front\">\r\n                {this.state.fullScrLoader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div id=\"main-wrapper\">\r\n                    <div className=\"header header-light head-shadow\">\r\n                        <div className=\"container\">\r\n                        <nav id=\"navigation\" className={this.state.portrait ? \"navigation navigation-portrait\":\"navigation navigation-landscape\"}>\r\n\t\t\t\t\t\t\t<div className=\"nav-header\">\r\n\t\t\t\t\t\t\t\t{/* <Link className=\"nav-brand static-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link> */}\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand fixed-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<div onClick={() => this.toggle()} className=\"nav-toggle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={this.state.portrait ? \"nav-menus-wrapper-open nav-menus-wrapper\": \"nav-menus-wrapper\"} style={{ transitionProperty: this.state.portrait ? \"left\" : \"none\" }}>\r\n\t\t\t\t\t\t\t\t<span class=\"nav-menus-wrapper-close-button\" onClick={() => this.toggle()}>✕</span>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu\">\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t{!this.state.disableWishList ? <li><Link to=\"/buyer/wishlist\">Wishlist</Link></li> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu nav-menu-social align-to-right\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"d-none\"><Link to=\"\"><i className=\"far fa-heart mr-2 text-success\"></i>Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"dropdown bg-transparent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-toggle text-success \" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* {\r\n                                        this.state.noRecords &&\r\n                                        <img  className='mr-1 rounded-circle' width={30} height={30} src={this.state.profile_image !== \"\" ? this.state.profile_image : face1} alt=\"profile\" />\r\n                                    } */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-success' >{this.state.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.goToProfile()} ><i className=\"far fa-user mr-2 \"></i>Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.onLogoutHandler()} to=\"/\"><i className=\"fas fa-sign-out-alt mr-2\"></i>Logout</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li> :\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"\"> <Link to=\"/signin\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign In</Link> </li>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<li className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign Up</Link>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.portrait ? \r\n\t\t\t\t\t\t\t\t<div className='nav-overlay-panel'></div>\r\n\t\t\t\t\t\t\t\t:\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"gray-simple\">\r\n                        <div className=\"login-pop-form col-12 col-lg-5 m-auto py-5\" role=\"document\">\r\n                            <div className=\"\" id=\"registermodal\">\r\n                                <div className=\"submit-page login-pop-form\">\r\n                                    <div className=\"card-body\">\r\n                                        <h2 className=\"mb-4\">Log In</h2>\r\n                                        {this.state.errMsg.message ?\r\n                                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                                {this.state.errMsg.message}<br />\r\n                                                {this.state.accountVerified ? \"\" :\r\n                                                    <a className=\"text-secondary font-weight-bold \" onClick={this.resendActivationMail} href=\"javascript:;\">Resend Verification Link</a>\r\n                                                }\r\n                                            </div> : \"\"\r\n                                        }\r\n                                        {/* blocking Message */}\r\n                                        {this.state.errMsg.block_account ?\r\n                                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                                {this.state.errMsg.block_account}\r\n                                            </div> : \"\"\r\n                                        }\r\n                                        {/* success msg */}\r\n                                        {this.state.scsMsgResend ?\r\n                                            <div className=\"alert alert-success\" role=\"alert\">\r\n                                                {this.state.scsMsgResend}\r\n                                            </div> : \"\"\r\n                                        }\r\n\r\n                                        {/* activtion msg */}\r\n                                        {this.state.ActivationMsg ?\r\n                                            <div className=\"alert alert-success\" role=\"alert\">\r\n                                                {this.state.ActivationMsg}\r\n                                            </div> : \"\"\r\n                                        }\r\n                                        {/* <span className=\"text-danger\"></span> */}\r\n                                        <div className=\"login-form\">\r\n                                            <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email Address <strong className=\"text-danger\" >*</strong></label>\r\n                                                    <div className=\"input-with-icon\">\r\n                                                        <input\r\n                                                            autoFocus={true}\r\n                                                            className=\"form-control\"\r\n                                                            required=\"\"\r\n                                                            type=\"text\"\r\n                                                            name=\"email\"\r\n                                                            id=\"email\"\r\n                                                            placeholder=\"Email Address \"\r\n                                                            value={this.state.email}\r\n                                                            onChange={this.onChangehandler}\r\n                                                        />\r\n                                                        <i className=\"ti-user\"></i>\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.errMsg.email}</span>\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Password <strong className=\"text-danger\" >*</strong></label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        <div className=\"input-with-icon\">\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                type={this.state.showPassword ? \"text\" : \"password\"}\r\n                                                                name=\"password\"\r\n                                                                id=\"password\"\r\n                                                                placeholder=\"Password\"\r\n                                                                value={this.state.password}\r\n                                                                onChange={this.onChangehandler}\r\n                                                            />\r\n                                                            <i className=\"ti-unlock\"></i>\r\n                                                        </div>\r\n                                                        {this.state.showPassword ?\r\n                                                            <span href=\"\" className=\"fa-eye-pass\"> <i onClick={() => this.showPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                            :\r\n                                                            <span href=\"\" className=\"fa-eye-pass\"> <i onClick={() => this.showPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.errMsg.password}</span>\r\n\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                   \r\n                                                    <Button\r\n                                                        type=\"submit\"\r\n                                                        className=\"btn btn-md full-width btn-theme-light-2 rounded mt-4\"\r\n                                                    >\r\n                                                        Login\r\n                                                        {this.state.isLoading ? (\r\n                                                            <span\r\n                                                                className=\"spinner-border spinner-border-sm ml-2\"\r\n                                                                role=\"status\"\r\n                                                                aria-hidden=\"true\"\r\n                                                            ></span>\r\n                                                        ) : (\r\n                                                            <span></span>\r\n                                                        )}\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"mt-3 fw-bold\"><Link to=\"/forgot/password\" className=\"link\">Forgot password?</Link></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\Index.js",["595","596"],"import React, { Component } from 'react'\r\nimport logo from '../../assets/img/logo.png'\r\nimport Navbar from './Navbar'\r\nimport Header from './Header'\r\nimport Latestproperty from './LatestProperty'\r\nimport HowItWorks from './HowItWorks'\r\nimport SearchPlace from './SearchPlace'\r\nimport News from './News'\r\nimport Footer from '../GlobalComponents/Footer'\r\nimport {Spinner} from 'reactstrap'\r\n\r\nexport default class Home extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tstylePath:true,\r\n\t\t\tLoader:true\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\twindow.scrollTo(0,0);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n\t}\r\n\trender() {\r\n\t\tconsole.log(this.props)\r\n\t\treturn (\r\n\t\t<div className=\"resido-front\">\t\r\n\t\t {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}         \r\n               \r\n\t\t\t<div id=\"main-wrapper\" className=\"blue-skin\">\r\n\t\t\t\t{/* Navbar cmp */}\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t{/* header cmp */}\r\n\r\n\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t<Header/>\r\n\r\n\t\t\t\t{/* explore places cmp */}\r\n\t\t\t\t<Latestproperty />\r\n\r\n\t\t\t\t{/* FindByPlaces */}\r\n\t\t\t\t{/* <FindByPlaces /> */}\r\n\r\n\t\t\t\t{/* how it Works */}\r\n\t\t\t\t<HowItWorks />\r\n\r\n\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t{/* SearchPlace cmp */}\r\n\t\t\t\t<SearchPlace />\r\n\r\n\t\t\t\t{/* footer cmp */}\r\n\t\t\t\t<Footer />\r\n\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t</div>\t\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\Test.js",["597","598","599","600"],"import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t<a className=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\tDropdown link\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n\t\t\t\t\t\t<li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n\t\t\t\t\t\t<li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n\t\t\t\t\t\t<li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\PermissionDenied.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\ErrorPage.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Listings\\Index.js",["601","602","603","604","605","606","607","608","609","610","611","612","613","614"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\CheckUser.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\Index.js",["615","616","617","618","619"],"import React, { Component } from 'react'\r\nimport logo from '../../assets/img/logo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Footer from '../GlobalComponents/Footer'\r\nimport PropertyDetails from './PropertyDetails/Index'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nexport default class Index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n\t\t\tuser_type: localStorage.getItem(\"user_type\"),\r\n            navigate: false,\r\n            Loader:true\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n     this.setState({\r\n        Loader:false\r\n     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"resido-front\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"grow\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                \r\n            <div className=\"blue-skin\">\r\n                <div id=\"main-wrapper\">\r\n\r\n                    <div className=\"header header-light head-shadow\">\r\n                        <div className=\"container\">\r\n                            <nav id=\"navigation\" className=\"navigation navigation-landscape\">\r\n                                <div className=\"nav-header\">\r\n                                    <Link className=\"nav-brand\" to=\"/\">\r\n                                        <img src={logo} className=\"logo\" alt=\"\" />\r\n                                    </Link>\r\n                                    <div className=\"nav-toggle\"></div>\r\n                                </div>\r\n                                <div className=\"nav-menus-wrapper\" style={{ transitionProperty: \"none\" }}>\r\n                                <ul className=\"nav-menu\">\r\n                                <li ><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"active\"><Link to=\"#\">Help</Link></li>\r\n                                        <li>\r\n                                        {this.state.user ? \r\n\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t: \r\n                                    <Link to=\"/signup\" ><img src=\"assets/img/user.svg\" width=\"12\" alt=\"\" className=\"mr-2\" />Sign up</Link>\r\n\t\t                             }\r\n                                            {/* <Link to=\"/signup\">SignUp</Link> */}\r\n                                            </li>   \r\n                                    </ul>\r\n                                    <ul className=\"nav-menu nav-menu-social align-to-right\">\r\n                                        <li>\r\n                                        {this.state.user ? \r\n\t\t\t\t\t\t\t\t\t<Link to={this.state.user.user_type === \"Agent\" ? \"/agent\" : this.state.user.user_type === \"Seller\" ?  \"/seller\" : \"/Buyer\"}  ><img src=\"assets/img/user.svg\" width=\"12\" alt=\"\" className=\"mr-2\" />Profile</Link>\r\n\t\t\t\t\t\t\t\t\t: \r\n                                    <Link to=\"/signin\" ><img src=\"assets/img/user.svg\" width=\"12\" alt=\"\" className=\"mr-2\" />Sign In</Link>\r\n\t\t                             }\r\n                                            {/* <Link to=\"/signin\" className=\"text-success\">\r\n                                                <i className=\"fas fa-user-circle mr-2\"></i>Sign In</Link> */}\r\n                                        </li>\r\n                                       \r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n\r\n\r\n                    <div className=\"featured_slick_gallery gray\">\r\n                        <div className=\"featured_slick_gallery-slide\">\r\n                            <Header />\r\n                            {/* <div className=\"featured_slick_padd\"><a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a></div>\r\n                <div className=\"featured_slick_padd\"><a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a></div>\r\n                <div className=\"featured_slick_padd\"><a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a></div>\r\n                <div className=\"featured_slick_padd\"><a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a></div> */}\r\n                        </div>\r\n                        {/* <a href=\"JavaScript:Void(0);\" className=\"btn-view-pic\">View photos</a> */}\r\n                    </div>\r\n\r\n                    <PropertyDetails />\r\n\r\n                    <section className=\"theme-bg call-to-act-wrap\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n\r\n                                    <div className=\"call-to-act\">\r\n                                        <div className=\"call-to-act-head\">\r\n                                            <h3>Want to Become a Real Estate Agent?</h3>\r\n                                            <span>We'll help you to grow your career and growth.</span>\r\n                                        </div>\r\n                                        <a href=\"#\" className=\"btn btn-call-to-act\">SignUp Today</a>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    <Footer />\r\n\r\n                    <div className=\"modal fade\" id=\"login\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"registermodal\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog modal-dialog-centered login-pop-form\" role=\"document\">\r\n                            <div className=\"modal-content\" id=\"registermodal\">\r\n                                <span className=\"mod-close\" data-bs-dismiss=\"modal\" aria-hidden=\"true\"><i className=\"ti-close\"></i></span>\r\n                                <div className=\"modal-body\">\r\n                                    <h4 className=\"modal-header-title\">Log In</h4>\r\n                                    <div className=\"login-form\">\r\n                                        <form>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label>User Name</label>\r\n                                                <div className=\"input-with-icon\">\r\n                                                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\" />\r\n                                                    <i className=\"ti-user\"></i>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label>Password</label>\r\n                                                <div className=\"input-with-icon\">\r\n                                                    <input type=\"password\" className=\"form-control\" placeholder=\"*******\" />\r\n                                                    <i className=\"ti-unlock\"></i>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"submit\" className=\"btn btn-md full-width btn-theme-light-2 rounded\">Login</button>\r\n                                            </div>\r\n\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"modal-divider\"><span>Or login via</span></div>\r\n                                    <div className=\"social-login mb-3\">\r\n                                        <ul>\r\n                                            <li><a href=\"#\" className=\"btn connect-fb\"><i className=\"ti-facebook\"></i>Facebook</a></li>\r\n                                            <li><a href=\"#\" className=\"btn connect-google\"><i className=\"ti-google\"></i>Google+</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"mt-5\"><a href=\"#\" className=\"link\">Forgot password?</a></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <a id=\"back2Top\" className=\"top-scroll\" title=\"Back to top\" href=\"#\"><i className=\"ti-arrow-up\"></i></a>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\ResetPassword.js",["620","621"],"import React, { Component } from 'react'\r\nimport logo from '../assets/img/logo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Spinner ,    Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { APIURL } from '../components/constants/common';\r\nexport default class ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfo: {\r\n                email: \"\",\r\n                password: \"\",\r\n                password_confirmation: \"\"\r\n            },\r\n            errMsg: \"\",\r\n            showPassword: false,\r\n            Cofirm_showPassword: false,\r\n        }\r\n    }\r\n\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({\r\n            userInfo,\r\n            errMsg: \"\"\r\n        });\r\n        console.log(userInfo)\r\n    };\r\n\r\n\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        const params = this.props.match.params;\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"password/reset/update\", {\r\n                token: params.token,\r\n                email: this.state.userInfo.email,\r\n                password: this.state.userInfo.password,\r\n                password_confirmation: this.state.userInfo.password_confirmation,\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false });\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                });\r\n                setTimeout(() => this.setState({ scsMsg: \"\" }), 3000);\r\n                setTimeout(() => this.setState({ redirect: true }), 4000);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response.data.error)\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 4000);\r\n            });\r\n    };\r\n\r\n    showPassword() {\r\n        this.setState({\r\n            showPassword: !this.state.showPassword\r\n        })\r\n    }\r\n    Cofirm_showPassword() {\r\n        this.setState({\r\n            Cofirm_showPassword: !this.state.Cofirm_showPassword\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div id=\"main-wrapper\" className=\"resido-front\">\r\n                    <div className=\"header header-light head-shadow\">\r\n                        <div className=\"container\">\r\n                            <nav id=\"navigation\" className=\"navigation navigation-landscape\">\r\n                                <div className=\"nav-header\">\r\n                                    <a className=\"nav-brand\" href=\"#\">\r\n                                        <img src={logo} className=\"logo\" alt=\"\" />\r\n                                    </a>\r\n                                    <div className=\"nav-toggle\"></div>\r\n                                </div>\r\n                                <div className=\"nav-menus-wrapper\" style={{ transitionProperty: \"none\" }}>\r\n                                    <ul className=\"nav-menu\">\r\n                                    <li ><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/buyer/wishlist\">Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n                                    </ul>\r\n\r\n                                    <ul className=\"nav-menu nav-menu-social align-to-right\">\r\n                                        <li>\r\n                                            <Link to=\"/signup\" className=\"text-success\">\r\n                                                <i className=\"fas fa-user-circle mr-2\"></i>Sign Up</Link>\r\n                                        </li>\r\n                                      \r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"gray-simple\">\r\n                        <div className=\"login-pop-form col-12 col-lg-5 m-auto py-5\" role=\"document\">\r\n                            <div className=\"\" id=\"registermodal\">\r\n                                <div className=\"submit-page login-pop-form\">\r\n                                    <div className=\"card-body\">\r\n                                        <h2 className=\"mb-4\">Reset Password</h2>\r\n                                        {this.state.scsMsg ? <div className=\"alert alert-success\" role=\"alert\">\r\n                                            {this.state.scsMsg}\r\n                                        </div> : \"\"}\r\n                                        <div className=\"login-form\">\r\n                                            <form onSubmit={(e) => this.onSubmitHandler(e)}>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email Address <strong className=\"text-danger\" >*</strong></label>\r\n                                                    <div className=\"input-with-icon\">\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            required=\"\"\r\n                                                            type=\"email\"\r\n                                                            name=\"email\"\r\n                                                            placeholder=\"Email Address\"\r\n                                                            value={this.state.email}\r\n                                                            onChange={this.onChangehandler}\r\n                                                        />\r\n                                                        <span className=\"text-danger\">{this.state.errMsg.email}</span>\r\n                                                        <i className=\"ti-user\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>New Password <strong className=\"text-danger\" >*</strong></label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        <div className=\"input-with-icon\">\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                required=\"\"\r\n                                                                type={this.state.showPassword ? \"text\" : \"password\"}\r\n                                                                name=\"password\"\r\n                                                                placeholder=\"New Password\"\r\n                                                                value={this.state.password}\r\n                                                                onChange={this.onChangehandler}\r\n                                                            />\r\n                                                            <i className=\"ti-unlock\"></i>\r\n                                                        </div>\r\n                                                        {this.state.showPassword ?\r\n                                                            <span className=\"fa-eye-pass\"> <i onClick={() => this.showPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                            :\r\n                                                            <span className=\"fa-eye-pass\"> <i onClick={() => this.showPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.errMsg.password}</span>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Confirm Password <strong className=\"text-danger\" >*</strong></label>\r\n                                                    <div className=\"position-relative\">\r\n                                                        <div className=\"input-with-icon\">\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                required=\"\"\r\n                                                                type={this.state.Cofirm_showPassword ? \"text\" : \"password\"}\r\n                                                                name=\"password_confirmation\"\r\n                                                                placeholder=\"Confirm Password\"\r\n                                                                value={this.state.password_confirmation}\r\n                                                                onChange={this.onChangehandler}\r\n                                                            />\r\n                                                            <i className=\"ti-unlock\"></i>\r\n                                                        </div>\r\n                                                        {this.state.Cofirm_showPassword ?\r\n                                                            <span className=\"fa-eye-pass\"> <i onClick={() => this.Cofirm_showPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                            :\r\n                                                            <span className=\"fa-eye-pass\"> <i onClick={() => this.Cofirm_showPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.errMsg.password_confirmation}</span>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <Button\r\n                                                        type=\"submit\"\r\n                                                        className=\"btn btn-md full-width btn-theme-light-2 rounded mt-4\"\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"modal-divider\"><span>Or </span></div>\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"mt-3 fw-bold\"><Link to=\"/signin\" className=\"link\" style={{ listStyleType: \"none\" }}>Go To Login</Link></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\contact\\Index.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\Slider.js",["622","623","624"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { APIURL } from '../../constants/common';\r\nimport { Carousel } from 'react-carousel-minimal';\r\n\r\n// const data = [\r\n//     {\r\n//         image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/GoldenGateBridge-001.jpg/1200px-GoldenGateBridge-001.jpg\",\r\n//         caption: `<div>\r\n//                   San Francisco\r\n//                   <br/>\r\n//                   Next line\r\n//                 </div>`\r\n//     },\r\n//     {\r\n//         image: \"https://cdn.britannica.com/s:800x450,c:crop/35/204435-138-2F2B745A/Time-lapse-hyper-lapse-Isle-Skye-Scotland.jpg\",\r\n//         caption: \"Scotland\"\r\n//     },\r\n//     {\r\n//         image: \"https://static2.tripoto.com/media/filter/tst/img/735873/TripDocument/1537686560_1537686557954.jpg\",\r\n//         caption: \"Darjeeling\"\r\n//     },\r\n//     {\r\n//         image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Palace_of_Fine_Arts_%2816794p%29.jpg/1200px-Palace_of_Fine_Arts_%2816794p%29.jpg\",\r\n//         caption: \"San Francisco\"\r\n//     },\r\n//     {\r\n//         image: \"https://i.natgeofe.com/n/f7732389-a045-402c-bf39-cb4eda39e786/scotland_travel_4x3.jpg\",\r\n//         caption: \"Scotland\"\r\n//     },\r\n//     {\r\n//         image: \"https://www.tusktravel.com/blog/wp-content/uploads/2020/07/Best-Time-to-Visit-Darjeeling-for-Honeymoon.jpg\",\r\n//         caption: \"Darjeeling\"\r\n//     },\r\n//     {\r\n//         image: \"https://www.omm.com/~/media/images/site/locations/san_francisco_780x520px.ashx\",\r\n//         caption: \"San Francisco\"\r\n//     },\r\n//     {\r\n//         image: \"https://images.ctfassets.net/bth3mlrehms2/6Ypj2Qd3m3jQk6ygmpsNAM/61d2f8cb9f939beed918971b9bc59bcd/Scotland.jpg?w=750&h=422&fl=progressive&q=50&fm=jpg\",\r\n//         caption: \"Scotland\"\r\n//     },\r\n//     {\r\n//         image: \"https://www.oyorooms.com/travel-guide/wp-content/uploads/2019/02/summer-7.jpg\",\r\n//         caption: \"Darjeeling\"\r\n//     }\r\n// ];\r\n\r\nexport default class Test extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            PropertyInfo: [],\r\n            Data: [\r\n                {\r\n                   image: \"\",\r\n                   caption: `<div>\r\n                                San Francisco\r\n                                      <br/>\r\n                                      Next line\r\n                                    </div>`\r\n               }\r\n            ],\r\n            \r\n        }\r\n    }\r\n\r\n    ViewpropertyDetails(e) {\r\n        const formData = new FormData();\r\n        formData.append('property_id', e);\r\n        // this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"view-property-detail\", formData, {\r\n\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    PropertyInfo: response.data.data,\r\n                })\r\n                let Images=[];\r\n\r\n               this.state.PropertyInfo.map((item ,idx) => {\r\n                item.property_media.map((result, index) => {\r\n                    Images.push({\r\n                        image: result.url_path,\r\n                        caption: \"Darjeeling\"\r\n                    },);\r\n                    this.setState({\r\n                        Data:Images\r\n                      })\r\n                  });\r\n                })\r\n                console.log(\"this.state \",this.state.Data)\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ViewpropertyDetails(this.props.id)\r\n    }\r\n    render() {\r\n        console.log(\"id\",this.props.id)\r\n        const {Data } = this.state\r\n        return (\r\n            <div className=\"App\">\r\n                           \r\n                        <div style={{ textAlign: \"center\" }}>\r\n                          {/* <h2>React Carousel Minimal {this.state.Data}</h2> */}\r\n                            <div style={{\r\n                                padding: \"0 20px\"\r\n                            }}>\r\n                                <Carousel\r\n                                    data={this.state.Data}\r\n                                    time={2000}\r\n                                    width=\"850px\"\r\n                                    height=\"400px\"\r\n                                    //   captionStyle={captionStyle}\r\n                                    radius=\"10px\"\r\n                                    slideNumber={true}\r\n                                    //   slideNumberStyle={slideNumberStyle}\r\n                                    captionPosition=\"bottom\"\r\n                                    automatic={true}\r\n                                    dots={true}\r\n                                    pauseIconColor=\"white\"\r\n                                    pauseIconSize=\"40px\"\r\n                                    slideBackgroundColor=\"darkgrey\"\r\n                                    slideImageFit=\"cover\"\r\n                                    thumbnails={true}\r\n                                    thumbnailWidth=\"100px\"\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        maxWidth: \"850px\",\r\n                                        maxHeight: \"500px\",\r\n                                        margin: \"40px auto\",\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\Index.js",["625","626","627","628","629","630"],"import React, { Component } from 'react'\r\nimport logo from '../../assets/img/logo.png'\r\nimport face1 from '../../assets/images/faces/dummy.png'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Footer from '../GlobalComponents/Footer'\r\nimport PropertyDetails from './details/Index'\r\nimport axios from 'axios';\r\nimport { APIURL } from '../constants/common';\r\n\r\n\r\nexport default class Index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            navigate: false,\r\n            PropertyDetails: [],\r\n            disableWishList: false,\r\n            profile_image: \"\",\r\n            name: \"\",\r\n            noRecords: false,\r\n        }\r\n    }\r\n\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"agent/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        profile_image: info.url_path,\r\n                        name: info.fullName,\r\n                        noRecords: true\r\n                    })\r\n                    this.handleCountryState(this.state.countryId)\r\n                    console.log(\"sssssssss\", this.state.profile_image)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 50) {\r\n            this.setState({\r\n                stickyheader: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                stickyheader: false\r\n            })\r\n        }\r\n    }\r\n\r\n    goToProfile() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        if (this.state.user) {\r\n            if (this.state.user_type === \"Agent\") {\r\n                window.location.href = \"/agent\";\r\n            }\r\n            else if (this.state.user_type === \"Seller\") {\r\n                window.location.href = \"/seller\";\r\n            }\r\n            else if (this.state.user_type === \"Admin\") {\r\n                window.location.href = \"/Admin\";\r\n            }\r\n            else if (this.state.user_type === \"Buyer\") {\r\n                window.location.href = \"/buyer\";\r\n            }\r\n            else {\r\n                window.location.href = \"/\";\r\n            }\r\n        }\r\n    }\r\n\r\n    onLogoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 500);\r\n    };\r\n    componentDidMount() {\r\n        this.getProfileInfo()\r\n        window.addEventListener('scroll', this.listenScrollEvent)\r\n        if (this.state.user) {\r\n            if (this.state.user.user_type !== \"Buyer\") {\r\n                this.setState({\r\n                    disableWishList: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    toggle(){\r\n\t\tthis.setState({\r\n\t\t\tportrait:!this.state.portrait\r\n\t\t})\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"resido-front\" >\r\n                <div className=\"blue-skin\">\r\n                    <div id=\"main-wrapper\">\r\n\r\n                        <div className={this.state.stickyheader ? \"header header-light head-shadow header-fixed\" : \"header header-light head-shadow\"}>\r\n                            <div className=\"container\">\r\n                            <nav id=\"navigation\" className={this.state.portrait ? \"navigation navigation-portrait\":\"navigation navigation-landscape\"}>\r\n\t\t\t\t\t\t\t<div className=\"nav-header\">\r\n\t\t\t\t\t\t\t\t{/* <Link className=\"nav-brand static-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link> */}\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand fixed-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<div onClick={() => this.toggle()} className=\"nav-toggle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={this.state.portrait ? \"nav-menus-wrapper-open nav-menus-wrapper\": \"nav-menus-wrapper\"} style={{ transitionProperty: this.state.portrait ? \"left\" : \"none\" }}>\r\n\t\t\t\t\t\t\t\t<span class=\"nav-menus-wrapper-close-button\" onClick={() => this.toggle()}>✕</span>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"active\"><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t{!this.state.disableWishList ? <li><Link to=\"/buyer/wishlist\">Wishlist</Link></li> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu nav-menu-social align-to-right\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"d-none\"><Link to=\"\"><i className=\"far fa-heart mr-2 text-success\"></i>Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"dropdown bg-transparent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-toggle text-success \" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n                                        this.state.noRecords &&\r\n                                        <img  className='mr-1 rounded-circle' width={30} height={30} src={this.state.profile_image !== \"\" ? this.state.profile_image : face1} alt=\"profile\" />\r\n                                    }\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-success' >{this.state.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.goToProfile()} ><i className=\"far fa-user mr-2 \"></i>Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.onLogoutHandler()} to=\"/\"><i className=\"fas fa-sign-out-alt mr-2\"></i>Logout</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li> :\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"\"> <Link to=\"/signin\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign In</Link> </li>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<li className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign Up</Link>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.portrait ? \r\n\t\t\t\t\t\t\t\t<div className='nav-overlay-panel'></div>\r\n\t\t\t\t\t\t\t\t:\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"clearfix\"></div>\r\n\r\n\r\n\r\n                        <PropertyDetails data={{ PropertyId: this.props.match.params.id, pageUrl: this.props.location.pathname }} />\r\n\r\n\r\n                        <Footer />\r\n\r\n                        <div className=\"modal fade\" id=\"login\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"registermodal\" aria-hidden=\"true\">\r\n                            <div className=\"modal-dialog modal-dialog-centered login-pop-form\" role=\"document\">\r\n                                <div className=\"modal-content\" id=\"registermodal\">\r\n                                    <span className=\"mod-close\" data-bs-dismiss=\"modal\" aria-hidden=\"true\"><i className=\"ti-close\"></i></span>\r\n                                    <div className=\"modal-body\">\r\n                                        <h4 className=\"modal-header-title\">Log In</h4>\r\n                                        <div className=\"login-form\">\r\n                                            <form>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>User Name</label>\r\n                                                    <div className=\"input-with-icon\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" />\r\n                                                        <i className=\"ti-user\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Password</label>\r\n                                                    <div className=\"input-with-icon\">\r\n                                                        <input type=\"password\" className=\"form-control\" placeholder=\"*******\" />\r\n                                                        <i className=\"ti-unlock\"></i>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"submit\" className=\"btn btn-md full-width btn-theme-light-2 rounded\">Login</button>\r\n                                                </div>\r\n\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"modal-divider\"><span>Or login via</span></div>\r\n                                        <div className=\"social-login mb-3\">\r\n                                            <ul>\r\n                                                <li><a href=\"#\" className=\"btn connect-fb\"><i className=\"ti-facebook\"></i>Facebook</a></li>\r\n                                                <li><a href=\"#\" className=\"btn connect-google\"><i className=\"ti-google\"></i>Google+</a></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"mt-5\"><a href=\"#\" className=\"link\">Forgot password?</a></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <a id=\"back2Top\" className=\"top-scroll\" title=\"Back to top\" href=\"#\"><i className=\"ti-arrow-up\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\ReceiveEnquiry.js",["631","632","633","634","635","636","637","638"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport dateFormat, { masks } from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class ReceivedEnquiry extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            propertyName: \"\",\r\n            enquiryInfoModal: false,\r\n            EnquiryList: [],\r\n            EnquiryInfo: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"under_review\", \"label\": \"Under Review\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"verify\", \"label\": \"Verified\" }, { 'value': \"unverify\", \"label\": \"Not Verified\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            errMsg: {},\r\n            EnqId:\"\",\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n  \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getEnquiryList()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getEnquiryList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getEnquiryList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getEnquiryList() {\r\n        this.setState({Loader:true})\r\n        const { user } = this.state\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"admin/get-contact-us-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    EnquiryList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n    getEnquiryinfo = (e) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', e);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"view-enquiry-detail\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n\r\n                this.setState({\r\n                    Loader: false,\r\n                    EnquiryInfo: response.data.data,\r\n                });\r\n                console.log(this.state.columnName)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    // errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    // redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    enquiryInfoModal(e) {\r\n        this.setState({\r\n            enquiryInfoModal: !this.state.enquiryInfoModal,\r\n            EnqId: e.id,\r\n        }, () => {\r\n            this.getEnquiryinfo(e.id,)\r\n        })\r\n    }\r\n    ModalClose() {\r\n        this.setState({\r\n            enquiryInfoModal: false\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = (enquiry_id, status) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', enquiry_id);\r\n        formData.append('status', status);\r\n        axios\r\n            .post(APIURL + \"update-enquiry-status\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    enquiryInfoModal: false\r\n                })\r\n                this.getEnquiryList()\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    Visible: false\r\n                })\r\n            });\r\n        this.getEnquiryList()\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getEnquiryList()\r\n\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar \r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                          activePage=\"received_enquiry\" \r\n                          activetabb={true}\r\n                           />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Contact Us Enquiry</h4>\r\n                               </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    {/* <div className=\"col-3\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Seller Name\" />\r\n                                    </div> */}\r\n                                    {/* <div className=\"col-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div> */}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name \")}>Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")}>Created Date </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"buyer_name\")} >Email Address</th>\r\n                                                                <th className=\"text-center\"> Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.EnquiryList.length > 0 ?\r\n                                                                this.state.EnquiryList.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td>\r\n                                                                            {item.name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {dateFormat(item.created_at, 'dd-mm-yyyy')}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {item.email}\r\n                                                                        </td>\r\n\r\n                                                                        <td className=\"text-center\">\r\n                                                                            <Button\r\n                                                                                className=\"btn btn-info btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                onClick={(e) => this.enquiryInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.enquiryInfoModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                    <ModalHeader toggle={() => this.ModalClose()}>Contact Us Enquiry</ModalHeader>\r\n                    <ModalBody>\r\n                        {this.state.EnquiryList.length > 0 &&\r\n                            this.state.EnquiryList.filter(item => item.id === this.state.EnqId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Name</label>\r\n                                        <p>{item.name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Email</label>\r\n                                        <p className='text-break'>{item.email}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Received Date</label>\r\n                                        <p> {dateFormat(item.created_at, 'dd-mm-yyyy')}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Phone Number</label>\r\n                                        <p>{item.contact}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Message</label>\r\n                                        <p>{item.message}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                    {/* <ModalFooter >\r\n                       {this.state.EnquiryInfo.status === null ?\r\n                            <div className=\"d-flex justify-content-between w-100\">\r\n                                <Button  color=\"success\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"accept\")} >Accept</Button>\r\n                                <Button  color=\"danger\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"reject\")}  >Reject</Button>\r\n                             </div>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </ModalFooter> */}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\ForgotPassword.js",["639","640"],"import React, { Component } from 'react'\r\nimport logo from '../assets/img/logo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport { Spinner ,    Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { APIURL } from '../components/constants/common';\r\n\r\nexport default class ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            scsMsg: \"\",\r\n            errMsg: \"\",\r\n            redirect: false\r\n        };\r\n    }\r\n    handleUserName = (e) => {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        axios\r\n            .post(APIURL + \"password/reset\", {\r\n                email: this.state.email,\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    isLoading:false,\r\n                    scsMsg: response.data.message\r\n                });\r\n                setTimeout(() => this.setState({ scsMsg: \"\" }), 3000);\r\n                setTimeout(() => this.setState({ redirect: true }), 4000);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                this.setState({\r\n                    isLoading: false,\r\n                    errMsg: error.response.data,\r\n                })\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 4000);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div className=\"resido-front\">\r\n                {/* {this.state.isLoading ? <div className=\"loader\"> <Spinner type=\"grow\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"} */}\r\n                <div id=\"main-wrapper\">\r\n                    <div className=\"header header-light head-shadow\">\r\n                        <div className=\"container\">\r\n                            <nav id=\"navigation\" className=\"navigation navigation-landscape\">\r\n                                <div className=\"nav-header\">\r\n                                    <a className=\"nav-brand\" href=\"#\">\r\n                                        <img src={logo} className=\"logo\" alt=\"\" />\r\n                                    </a>\r\n                                    <div className=\"nav-toggle\"></div>\r\n                                </div>\r\n                                <div className=\"nav-menus-wrapper\" style={{ transitionProperty: \"none\" }}>\r\n                                    <ul className=\"nav-menu\">\r\n                                    <li ><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/buyer/wishlist\">Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n                                    </ul>\r\n\r\n                                    <ul className=\"nav-menu nav-menu-social align-to-right\">\r\n                                        <li>\r\n                                            <Link to=\"/signup\" className=\"text-success\">\r\n                                                <i className=\"fas fa-user-circle mr-2\"></i>Sign Up</Link>\r\n                                        </li>\r\n                                       \r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"gray-simple\">\r\n                        <div className=\"login-pop-form col-12 col-lg-5 m-auto py-5\" role=\"document\">\r\n                            <div className=\"\" id=\"registermodal\">\r\n                                <div className=\"submit-page login-pop-form\">\r\n                                    <div className=\"card-body\">\r\n                                        <h2 className=\"mb-4\">Forgot Password</h2>\r\n                                        {this.state.scsMsg ? <div className=\"alert alert-success\" role=\"alert\">\r\n                                            {this.state.scsMsg}\r\n                                        </div> : \"\"}\r\n                                        <div className=\"login-form\">\r\n                                            <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email Address <sup className=\"text-danger fw-medium f-14\">*</sup></label>\r\n                                                    <div className=\"input-with-icon\">\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            required=\"\"\r\n                                                            type=\"email\"\r\n                                                            name=\"email\"\r\n                                                            id=\"email\"\r\n                                                            placeholder=\"Enter Address\"\r\n                                                            value={this.state.email}\r\n                                                            onChange={this.handleUserName}\r\n                                                        />\r\n\r\n                                                        <i className=\"ti-user\"></i>\r\n                                                    </div>\r\n                                                    <span className=\"text-danger\">{this.state.errMsg.errors}</span>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <Button\r\n                                                        type=\"submit\"\r\n                                                        className=\"mt-4 btn btn-md full-width btn-theme-light-2 rounded\"\r\n                                                    >\r\n                                                        Submit\r\n                                                        {this.state.isLoading ? (\r\n                                                            <span\r\n                                                                className=\"spinner-border spinner-border-sm ml-2\"\r\n                                                                role=\"status\"\r\n                                                                aria-hidden=\"true\"\r\n                                                            ></span>\r\n                                                        ) : (\r\n                                                            <span></span>\r\n                                                        )}\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        <div className=\"modal-divider\"><span>Or </span></div>\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"mt-3 fw-bold\"><Link to=\"/signin\" className=\"link\" style={{ listStyleType: \"none\" }}>Go To Login</Link></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\About\\Index.js",["641","642","643","644"],"import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Header from './Header'\r\nimport Footer from '../GlobalComponents/Footer'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../components/constants/common';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Spinner } from 'reactstrap'\r\n\r\nexport default class Index extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttoken: JSON.parse(localStorage.getItem(\"token\")),\r\n\t\t\tuser: JSON.parse(localStorage.getItem(\"userData\")),\r\n\t\t\tuser_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n\t\t\tuserInfo: {\r\n\t\t\t\tname: \"\",\r\n\t\t\t\temail: \"\",\r\n\t\t\t\tcontact: \"\",\r\n\t\t\t\tmessage: \"\"\r\n\t\t\t},\r\n\t\t\terrMsg: \"\",\r\n\t\t\tscsMsg: \"\",\r\n\t\t\tLoader: true,\r\n\t\t\tauth: false,\r\n\t\t\tslug: \"\",\r\n\t\t\tcmsData: [],\r\n\t\t\tLoader: true\r\n\t\t}\r\n\t}\r\n\r\n\tonChangehandler = (e, key) => {\r\n\t\tconst { userInfo } = this.state;\r\n\t\tuserInfo[e.target.name] = e.target.value;\r\n\t\tthis.setState({\r\n\t\t\tuserInfo,\r\n\t\t\terrMsg: \"\"\r\n\t\t});\r\n\t\tconsole.log(userInfo)\r\n\t}\r\n\r\n\tgetCms = () => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tthis.setState({\r\n\t\t\tslug: \"about-us\"\r\n\t\t})\r\n\t\tvar token = this.state.token\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('url_key', this.props.match.params.slug);\r\n\t\taxios\r\n\t\t\t.post(APIURL + \"cms/\" + this.props.match.params.slug, formData)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(\"response.data.data\", response.data.data)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcmsData: response.data.data\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\t// this.setState({\r\n\t\t\t\t// \terrMsg: error.response.data.error,\r\n\t\t\t\t// })\r\n\t\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getCms()\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader: false\r\n\t\t\t})\r\n\t\t}, 500);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { cmsData } = this.state\r\n\t\tconsole.log(\"slug\", this.props)\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"resido-front\">\r\n\t\t\t\t{this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\t\t\t\t<div className=\"blue-skin dashboard\">\r\n\t\t\t\t\t<div id=\"main-wrapper\">\r\n\t\t\t\t\t\t<Navbar slug={this.props.match.params.slug} />\r\n\t\t\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t\t\t<div className=\"page-title h-auto py-3\">\r\n\t\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12\">\r\n\t\t\t\t\t\t\t\t\t\t<h2 className=\"ipt-title\">{cmsData.page_title}</h2>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t\t<div className=\"row align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"story-wrap explore-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h2>{cmsData.page_title}</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<p style={{ whiteSpace: \"break-spaces\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: cmsData.content }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></span>\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t<Footer />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Enquiry.js",["645"],"import React, { Component } from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nexport default class Enquiry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            activeSide:false\r\n        }\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    render() {\r\n         if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container-scroller resido-admin\">\r\n                     <Navbar \r\n                      sideMenu={this.sideMenu.bind(this)}\r\n                      activeSide={this.state.activeSide}/>\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar\r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                        activePage=\"enquiry\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                            <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">PROPERTY ENQUIRY</h4>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                {/* <h4 className=\"card-title  justify-content-between d-flex \">Property Enquiry </h4> */}\r\n                                                <div className=\"table-responsive\">\r\n                                                <h4 className=\"card-title\"></h4>\r\n                                                <span>No Records</span>\r\n                                                    {/* <table className=\"table\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th> Assignee </th>\r\n                                                                <th> Subject </th>\r\n                                                                <th> Status </th>\r\n                                                                <th> Last Update </th>\r\n                                                                <th> Tracking ID </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <img src={face1} className=\"mr-2\" alt=\"image\" /> David Grey\r\n                                                                </td>\r\n                                                                <td> Fund is not recieved </td>\r\n                                                                <td>\r\n                                                                    <label className=\"badge badge-gradient-success\">DONE</label>\r\n                                                                </td>\r\n                                                                <td> Dec 5, 2017 </td>\r\n                                                                <td> WD-12345 </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <img src={face1} className=\"mr-2\" alt=\"image\" /> Stella Johnson\r\n                                                                </td>\r\n                                                                <td> High loading time </td>\r\n                                                                <td>\r\n                                                                    <label className=\"badge badge-gradient-warning\">PROGRESS</label>\r\n                                                                </td>\r\n                                                                <td> Dec 12, 2017 </td>\r\n                                                                <td> WD-12346 </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <img src={face1} className=\"mr-2\" alt=\"image\" /> Marina Michel\r\n                                                                </td>\r\n                                                                <td> Website down for one week </td>\r\n                                                                <td>\r\n                                                                    <label className=\"badge badge-gradient-info\">ON HOLD</label>\r\n                                                                </td>\r\n                                                                <td> Dec 16, 2017 </td>\r\n                                                                <td> WD-12347 </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <img src=\"assets/images/faces/face4.jpg\" className=\"mr-2\" alt=\"image\" /> John Doe\r\n                                                                </td>\r\n                                                                <td> Loosing control on server </td>\r\n                                                                <td>\r\n                                                                    <label className=\"badge badge-gradient-danger\">REJECTED</label>\r\n                                                                </td>\r\n                                                                <td> Dec 3, 2017 </td>\r\n                                                                <td> WD-12348 </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\AgentApproval.js",["646","647","648","649"],"import React, { Component } from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Button } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter, Input, Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport dateFormat, { masks } from \"dateformat\";\r\nimport { Redirect } from 'react-router';\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            agentReq: [],\r\n            AgentInfo: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"Approved\", \"label\": \"Approved\" },],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            AgentId: \"\",\r\n            ReqStatus: \"\",\r\n            agentInfoModal: false,\r\n            Loader: true,\r\n            languages: [],\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            LicenseDoc: false,\r\n            activeSide:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAgentRequests()\r\n    }\r\n    LicenseDoc = () => {\r\n        this.setState({\r\n            LicenseDoc: !this.state.LicenseDoc,\r\n            agentInfoModal: !this.state.agentInfoModal\r\n        })\r\n    }\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getAgentRequests()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getAgentRequests()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getAgentRequests()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getAgentRequests() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getAgentRequests()\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    getAgentRequests() {\r\n        this.setState({ Loader: true });\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"admin/get-agent-request-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"admin/get-agent-request-list\", response.data.data.data)\r\n                this.setState({\r\n                    agentReq: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                });\r\n            });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getAgentRequests()\r\n            }\r\n        );\r\n    }\r\n\r\n    AgentInfoModal(e, idx, status) {\r\n        this.setState({\r\n            agentInfoModal: !this.state.agentInfoModal,\r\n            languages: e.language_data,\r\n            ReqStatus: status\r\n        }, () => {\r\n            this.getAgentInfo(e.id,)\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            agentInfoModal: false\r\n        })\r\n    }\r\n\r\n    getAgentInfo = (e) => {\r\n\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('id', e);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"admin/agent-profile-view\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    Loader: false,\r\n                    AgentInfo: response.data.data,\r\n                    languageList: response.data.data.language_data\r\n                });\r\n                console.log(\"\", this.state.languageList)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    onSubmitHandler = (e, status) => {\r\n        this.setState({ isLoading: true })\r\n        var token = this.state.token\r\n\r\n        const formData = new FormData();\r\n        formData.append('id', e.id);\r\n        formData.append('status', status);\r\n\r\n        this.setState({ Loader: true, agentInfoModal: false });\r\n        axios\r\n            .post(APIURL + \"admin/update-agent-request-status\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false });\r\n                this.setState({\r\n                    errMsg: {},\r\n                    agentInfoModal: false,\r\n                    isLoading: false\r\n                }, () => {\r\n                    this.getAgentRequests()\r\n                    setTimeout(() => {\r\n                        window.location.reload();\r\n                    }, 100);\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    agentInfoModal: false,\r\n                    isLoading: false\r\n                })\r\n            });\r\n    };\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container-scroller resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}          \r\n                    <Navbar\r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                      />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                         activePage=\"agent_request\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">AGENT REQUEST</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Select Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-12 grid-margin\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                {/* <h4 className=\"card-title  justify-content-between d-flex \">Agent Requests</h4> */}\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table text-center\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by text-left\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}> Agent Name</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"created_at\")}> Request Date</th>\r\n                                                                <th> Status</th>\r\n                                                                <th> Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.agentReq.length > 0 ? this.state.agentReq.map((item, idx) => (\r\n                                                                <React.Fragment>\r\n                                                                    {item.is_approved === \"Reject\" ? \"\" :\r\n                                                                        <tr>\r\n                                                                            <td className=\"text-left\" >{item.fullName}</td>\r\n                                                                            <td > {dateFormat(item.created_at, 'dd-mm-yyyy')}</td>\r\n                                                                            <td>\r\n                                                                                {item.is_approved === \"Approved\" ? <span className=\"badge badge-success \">{item.is_approved}</span>\r\n                                                                                    :\r\n                                                                                    item.is_approved === \"Reject\" ? <span className=\"badge badge-danger \" >{item.is_approved}</span>\r\n                                                                                        :\r\n                                                                                        <label className=\"badge badge-warning \" style={{ color: \"#5B6868\" }}>Pending</label>}</td>\r\n                                                                            <td className=\"text-center\">\r\n                                                                                <div>\r\n                                                                                    <Button size=\"sm\" color=\"info\" className=\"btn-rounded\" onClick={(e) => this.AgentInfoModal(item)} >View</Button>\r\n\r\n                                                                                </div>\r\n                                                                            </td>\r\n                                                                        </tr>\r\n                                                                    }\r\n                                                                </React.Fragment>\r\n                                                            )) :\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"4\" className=\"text-center\">\r\n                                                                        No Request Available\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        {this.state.totalItemsCount > 0 &&\r\n                                            <div className=\"pagination-rounded\">\r\n                                                <Pagination\r\n                                                    activePage={this.state.activePage}\r\n                                                    itemsCountPerPage={this.state.limit}\r\n                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                    pageRangeDisplayed={5}\r\n                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                />\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.agentInfoModal} toggle={() => this.ModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>Agent Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {\r\n                            this.state.AgentInfo !== \"\" ?\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Name</label>\r\n                                        <p>{this.state.AgentInfo.fullName}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Email</label>\r\n                                        <p className='text-break'>{this.state.AgentInfo.email}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Country</label>\r\n                                        <p>{this.state.AgentInfo.country_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">State</label>\r\n                                        <p>{this.state.AgentInfo.state_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Phone Number</label>\r\n                                        <p>{this.state.AgentInfo.phone}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Languages</label>\r\n                                        <p>\r\n                                            {this.state.languages.map(item => (\r\n                                                <span className=\"mr-1\">{item.label}  </span>\r\n                                            ))}\r\n                                            {/* {\r\n                                            this.state.AgentInfo.map((item)=>(\r\n                                               <span>{item.label}</span>\r\n                                            ))\r\n                                            } */}\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">License Number</label>\r\n                                        <p>{this.state.AgentInfo.license_number}</p>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Introduction</label>\r\n                                        <p>{this.state.AgentInfo.introduction}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">License Document</label>\r\n                                        <div className=\"text-center\">\r\n                                            {this.state.AgentInfo.license_document ?\r\n                                                <div className=\"img-gallery\" style={{ paddingLeft: \"0px\" }}>\r\n                                                    <img width=\"188px\" className=\"\"\r\n                                                        onClick={() => this.LicenseDoc()}\r\n                                                        src={this.state.AgentInfo.license_document}\r\n                                                    />\r\n                                                </div> : \"No Document Available\"}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                : \"NO Data Available\"\r\n                        }\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        {this.state.AgentInfo.is_approved === null ?\r\n                            <div className=\"d-flex justify-content-between w-100\">\r\n                                <Button color=\"success\" onClick={(e) => this.onSubmitHandler(this.state.AgentInfo, \"Approved\")} >Approve</Button>\r\n                                <Button color=\"danger\" onClick={(e) => this.onSubmitHandler(this.state.AgentInfo, \"Reject\")}  >Reject</Button>\r\n                                {/* <Button type=\"button\" onClick={() => this.taketourClose()} className=\"btn btn-secondary\" >Close</Button> */}\r\n                            </div>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.LicenseDoc} toggle={() => this.LicenseDoc()} autoFocus={false}>\r\n                    <ModalHeader toggle={() => this.LicenseDoc()}>License Document</ModalHeader>\r\n                    <ModalBody>\r\n                        <img className=\"w-100 \"\r\n                            src={this.state.AgentInfo.license_document}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter></ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\ChangePassword.js",["650"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from './Sidebar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport Navbar from './Navbar'\r\nimport Button from '@restart/ui/esm/Button';\r\nimport { Spinner } from 'reactstrap'\r\n\r\nexport default class ChangePassword extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: localStorage.getItem(\"user_type\"),\r\n            navigate: false,\r\n            userInfo: {\r\n                current_password: \"\",\r\n                password: \"\",\r\n                confirm_password: \"\",\r\n            },\r\n            errMsg: \"\",\r\n            scsMsg: \"\",\r\n            profile_image: \"\",\r\n            currShowPassword: false,\r\n            newShowPassword: false,\r\n            confirmShowPassword: false,\r\n            fullscrLoader: false,\r\n            Loader:true,\r\n            activeSide:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getProfileInfo()\r\n        console.log(this.state.user.user_type)\r\n        setTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n\r\n    currShowPassword() {\r\n        this.setState({\r\n            currShowPassword: !this.state.currShowPassword\r\n        })\r\n    }\r\n    newShowPassword() {\r\n        this.setState({\r\n            newShowPassword: !this.state.newShowPassword\r\n        })\r\n    }\r\n    confirmShowPassword() {\r\n        this.setState({\r\n            confirmShowPassword: !this.state.confirmShowPassword\r\n        })\r\n    }\r\n\r\n    //form handler\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({ userInfo });\r\n        console.log(userInfo)\r\n    };\r\n\r\n\r\n    onLogoutHandler = () => {\r\n\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n    };\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL+\"admin/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        profile_image: response.data.data.profile_image,\r\n                    })\r\n\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        userInfo['email'] = user.email;\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"change-password/update\", this.state.userInfo, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false });\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                });\r\n                setTimeout(() => this.setState({\r\n                    scsMsg: \"\",\r\n                    current_password: \"\",\r\n                    password: \"\",\r\n                    confirm_password: \"\",\r\n                }), 3000);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response.data.error)\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n                setTimeout(() => this.setState({\r\n                    errMsg: \"\",\r\n                    current_password: \"\",\r\n                    password: \"\",\r\n                    confirm_password: \"\",\r\n                }), 3000);\r\n            });\r\n    };\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    render() {\r\n         if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <>\r\n               <div className=\"container-scroller resido-admin\">\r\n               {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n              \r\n                    <Navbar \r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                         activePage=\"password\" \r\n                         />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Change Password</h4>\r\n\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                {/* scsMsg  */}\r\n                                                {this.state.scsMsg ? <div className=\"alert alert-success\" role=\"alert\"> {this.state.scsMsg} </div> : \"\"}\r\n                                                {/* messgae err */}\r\n                                                {this.state.errMsg.message ? <div className=\"alert alert-danger\" role=\"alert\">  {this.state.errMsg.message}   </div> : \"\"}\r\n                                                <div className=\"col-lg-6 col-md-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"exampleInputName1\">Current Password</label>\r\n                                                        <div className=\"position-relative\">\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                required=\"\"\r\n                                                                type={this.state.currShowPassword ? \"text\" : \"password\"}\r\n                                                                name=\"current_password\"\r\n                                                                placeholder=\"Current Password\"\r\n                                                                value={this.state.current_password}\r\n                                                                onChange={this.onChangehandler}\r\n                                                            />\r\n                                                            {this.state.currShowPassword ?\r\n                                                                <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.currShowPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                :\r\n                                                                <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.currShowPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                            }\r\n                                                        </div>\r\n                                                        <span className=\"text-danger\">{this.state.errMsg.current_password}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"exampleInputName1\">New Password</label>\r\n                                                        <div className=\"position-relative\">\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                required=\"\"\r\n                                                                type={this.state.newShowPassword ? \"text\" : \"password\"}\r\n                                                                name=\"password\"\r\n                                                                placeholder=\"New Password\"\r\n                                                                value={this.state.password}\r\n                                                                onChange={this.onChangehandler}\r\n                                                            />\r\n                                                            {this.state.newShowPassword ?\r\n                                                                <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.newShowPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                :\r\n                                                                <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.newShowPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                            }\r\n                                                        </div>\r\n                                                        <span className=\"text-danger\">{this.state.errMsg.password}</span>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"exampleInputName1\">Confirm Password</label>\r\n                                                        <div className=\"position-relative\">\r\n                                                            <input\r\n                                                                className=\"form-control\"\r\n                                                                required=\"\"\r\n                                                                type={this.state.confirmShowPassword ? \"text\" : \"password\"}\r\n                                                                name=\"confirm_password\"\r\n                                                                placeholder=\"Confirm Password\"\r\n                                                                value={this.state.confirm_password}\r\n                                                                onChange={this.onChangehandler}\r\n                                                            />\r\n                                                            {this.state.confirmShowPassword ?\r\n                                                                <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.confirmShowPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                :\r\n                                                                <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.confirmShowPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                            }\r\n                                                        </div>\r\n\r\n                                                        <span className=\"text-danger\">{this.state.errMsg.confirm_password}</span>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <Button onClick={() => this.onSubmitHandler()} className=\"btn btn-info \">Submit</Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Index.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ChangePassword.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\TakeTourEnq.js",["651","652","653","654"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport dateFormat, { masks } from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            propertyName: \"\",\r\n            enquiryInfoModal: false,\r\n            EnquiryList: [],\r\n            EnquiryInfo: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"reject\", \"label\": \"Rejected\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            errMsg: {},\r\n            enquiryId: \"\",\r\n            enquiryComment: \"\",\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n  \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getEnquiryList()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getEnquiryList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getEnquiryList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getEnquiryList() {\r\n        this.setState({ Loader: true });\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n        axios\r\n            .post(APIURL + \"agent/get-tour-enquiry-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"agent/get-tour-enquiry-list\", response.data.data.data)\r\n                this.setState({\r\n                    EnquiryList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n    getEnquiryinfo = (e) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', this.state.enquiryId);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"view-enquiry-detail\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                    EnquiryInfo: response.data.data,\r\n\r\n                });\r\n                console.log(this.state.columnName)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    // errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    SubmitProperty = (e, status) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id ', this.state.enquiryId);\r\n        formData.append('status', status);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"agent/update-enquiry-status\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    // redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    enquiryInfoModal(e) {\r\n        this.setState({\r\n            enquiryInfoModal: !this.state.enquiryInfoModal,\r\n            enquiryId: e.id\r\n        }, () => {\r\n            this.getEnquiryinfo(this.state.enquiryId)\r\n        })\r\n    }\r\n    ModalClose() {\r\n        this.setState({\r\n            enquiryInfoModal: false\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = (enquiry_id, status) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', enquiry_id);\r\n        formData.append('status', status);\r\n        formData.append('enquiry_comment', this.state.enquiryComment);\r\n\r\n        axios\r\n            .post(APIURL + \"update-enquiry-status\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    enquiryInfoModal: false\r\n                })\r\n                this.getEnquiryList()\r\n            })\r\n            .catch((error) => {\r\n                // this.setState({\r\n                //     errMsg: error.response.data.error,\r\n                //     Loader: false,\r\n                //     Visible: false\r\n                // })\r\n            });\r\n        this.getEnquiryList()\r\n    };\r\n\r\n    handlEnquiryComment = (e) => {\r\n        this.setState({\r\n            enquiryComment: e\r\n        })\r\n    }\r\n\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEnquiryList()\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                    />\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                        activePage=\"take_tour\" activetabb={true} />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Take A Tour</h4>\r\n                                    {/* <Button onClick={() => this.AddpropertyModal()} color=\"info\" className=\"px-3 btn-sm\">Add Property</Button> */}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name \")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"buyer_name\")} >Buyer Name  </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")}>Created Date </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"enquiry_date\")}>Enquiry Date </th>\r\n                                                                <th className=\"text-center\"> Status </th>\r\n                                                                <th className=\"text-center\"> Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n\r\n                                                            {this.state.EnquiryList.length > 0 ?\r\n                                                                this.state.EnquiryList.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td>\r\n                                                                            {item.property.name}\r\n                                                                        </td>\r\n\r\n                                                                        <td>\r\n                                                                            {item.name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {dateFormat(item.created_at, 'dd-mm-yyyy')}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {dateFormat(item.date_of_enquiry, 'dd-mm-yyyy')}\r\n\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            {item.status === \"accept\" ?\r\n                                                                                <label className=\"badge badge-success\"> Accepted</label>\r\n                                                                                :\r\n                                                                                item.status === \"reject\" ?\r\n                                                                                    <label className=\"badge badge-danger \">Rejected</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-warning \">Pending</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            {/* <Button className=\"btn btn-dark btn-rounded px-3 btn-sm\">Confirm</Button> */}\r\n                                                                            <Button\r\n                                                                                className=\"btn btn-info btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                onClick={(e) => this.enquiryInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"6\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.enquiryInfoModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                    <ModalHeader toggle={() => this.ModalClose()}>Enquiry Details</ModalHeader>\r\n                    <ModalBody>\r\n                        {\r\n                            this.state.EnquiryInfo !== \"\" ?\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">First Name</label>\r\n                                        <p>{this.state.EnquiryInfo.name}</p>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Enquiry Date</label>\r\n                                        <p>{dateFormat(this.state.EnquiryInfo.date_of_enquiry, 'dd-mm-yyyy')}</p>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Email </label>\r\n                                        <p className='text-break'>{this.state.EnquiryInfo.email}</p>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Enquiry Time</label>\r\n                                        <p>{this.state.EnquiryInfo.time_of_enquiry}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Phone Number</label>\r\n                                        <p>{this.state.EnquiryInfo.contact}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{this.state.EnquiryInfo.status === \"accept\" ? \"Accepted\" : this.state.EnquiryInfo.status === \"reject\" ? \"Rejected\" : \"Pending\"}</p>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Message</label>\r\n                                        <p>{this.state.EnquiryInfo.message}</p>\r\n                                    </div>\r\n                                    {this.state.EnquiryInfo.enquiry_comment ?\r\n                                        <div className=\"col-12\">\r\n                                            <label className=\"fw-bold\">Comment</label>\r\n                                            <p>{this.state.EnquiryInfo.enquiry_comment}</p>\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    {this.state.EnquiryInfo.status === null ?\r\n                                        <div className=\"col-12\">\r\n                                            <label className=\"fw-bold\">Comment</label>\r\n                                            <p>\r\n                                                <textarea\r\n                                                    rows=\"4\"\r\n                                                    className=\"form-control\"\r\n                                                    required=\"\"\r\n                                                    type=\"number\"\r\n                                                    name=\"streetNumber\"\r\n                                                    placeholder=\"Comment\"\r\n                                                    value={this.state.enquiryComment}\r\n                                                    onChange={(e) => this.handlEnquiryComment(e.target.value)}\r\n                                                />\r\n                                            </p>\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div>\r\n                                : \"NO Data Available\"\r\n                        }\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        {this.state.EnquiryInfo.status === null ?\r\n                            <div className=\"d-flex justify-content-between w-100\">\r\n                                <Button color=\"success\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"accept\")} >Accept</Button>\r\n                                <Button color=\"danger\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"reject\")}  >Reject</Button>\r\n                              </div>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContectAgent.js",["655","656","657","658"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport dateFormat, { masks } from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            propertyName: \"\",\r\n            enquiryInfoModal: false,\r\n            EnquiryList: [],\r\n            EnquiryInfo: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"reject\", \"label\": \"Rejected\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            errMsg: {},\r\n            enquiryComment: \"\",\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n     \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getEnquiryList()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage:1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => {\r\n                this.getEnquiryList()\r\n            });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getEnquiryList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getEnquiryList() {\r\n        this.setState({ Loader: true });\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search',this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n        axios\r\n            .post(APIURL + \"agent/get-contact-enquiry-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"hgggggh\", response.data.data.data)\r\n                this.setState({\r\n                    EnquiryList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    }\r\n    getEnquiryinfo = (e) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', e);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"view-enquiry-detail\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n\r\n                this.setState({\r\n                    Loader: false,\r\n                    EnquiryInfo: response.data.data,\r\n                });\r\n                console.log(this.state.columnName)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    // errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    // redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    enquiryInfoModal(e) {\r\n        this.setState({\r\n            enquiryInfoModal: !this.state.enquiryInfoModal\r\n        }, () => {\r\n            this.getEnquiryinfo(e.id,)\r\n        })\r\n    }\r\n    ModalClose() {\r\n        this.setState({\r\n            enquiryInfoModal: false\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = (enquiry_id, status) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', enquiry_id);\r\n        formData.append('status', status);\r\n        formData.append('enquiry_comment', this.state.enquiryComment);\r\n        axios\r\n            .post(APIURL + \"update-enquiry-status\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    enquiryInfoModal: false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    Visible: false\r\n                })\r\n            });\r\n        this.getEnquiryList()\r\n    };\r\n\r\n    handlEnquiryComment = (e) => {\r\n        this.setState({\r\n            enquiryComment: e\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getEnquiryList()\r\n    }\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar \r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                          activePage=\"contact_enquiry\" \r\n                          activetabb={true} />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Buyer Enquiry</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg sexample\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name \")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"buyer_name\")} >Buyer Name  </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")}>Created Date </th>\r\n                                                                <th className=\"text-center\"> Status </th>\r\n                                                                <th className=\"text-center\"> Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.EnquiryList.length > 0 ?\r\n                                                                this.state.EnquiryList.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td>\r\n                                                                            {item.property.name}\r\n                                                                        </td>\r\n\r\n                                                                        <td>\r\n                                                                            {item.name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {dateFormat(item.created_at, 'dd-mm-yyyy')}\r\n\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            {item.status === \"accept\" ?\r\n                                                                                <label className=\"badge badge-success\"> Accepted</label>\r\n                                                                                :\r\n                                                                                item.status === \"reject\" ?\r\n                                                                                    <label className=\"badge badge-danger\">Rejected</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-warning \">Pending</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            {/* <Button className=\"btn btn-dark btn-rounded px-3 btn-sm\">Confirm</Button> */}\r\n                                                                            <Button\r\n                                                                                className=\"btn btn-info btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                onClick={(e) => this.enquiryInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.enquiryInfoModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                    <ModalHeader toggle={() => this.ModalClose()}>Enquiry Details</ModalHeader>\r\n                    <ModalBody>\r\n                        {\r\n                            this.state.EnquiryInfo !== \"\" ?\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">First Name</label>\r\n                                        <p>{this.state.EnquiryInfo.name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Email</label>\r\n                                        <p className='text-break'>{this.state.EnquiryInfo.email}</p>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-6\">\r\n                                        <label className=\"fw-bold\">Enquiry Date</label>\r\n                                        <p>{this.state.EnquiryInfo.date_of_enquiry}</p>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <label className=\"fw-bold\">Time</label>\r\n                                        <p>{this.state.EnquiryInfo.time_of_enquiry}</p>\r\n                                    </div> */}\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Phone Number </label>\r\n                                        <p>{this.state.EnquiryInfo.contact}</p>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{this.state.EnquiryInfo.status === \"accept\" ? \"Accepted\" : this.state.EnquiryInfo.status === \"reject\" ? \"Rejected\" : \"Pending\"}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Message</label>\r\n                                        <p>{this.state.EnquiryInfo.message}</p>\r\n                                    </div>\r\n                                    {this.state.EnquiryInfo.enquiry_comment ?\r\n                                        <div className=\"col-12\">\r\n                                            <label className=\"fw-bold\">Comment</label>\r\n                                            <p>{this.state.EnquiryInfo.enquiry_comment}</p>\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n\r\n                                    {this.state.EnquiryInfo.status === null ?\r\n                                        <div className=\"col-12\">\r\n                                            <label className=\"fw-bold\">Comment</label>\r\n                                            <p>\r\n                                                <textarea\r\n                                                    rows=\"4\"\r\n                                                    className=\"form-control\"\r\n                                                    required=\"\"\r\n                                                    type=\"number\"\r\n                                                    name=\"streetNumber\"\r\n                                                    placeholder=\"Comment\"\r\n                                                    value={this.state.enquiryComment}\r\n                                                    onChange={(e) => this.handlEnquiryComment(e.target.value)}\r\n                                                />\r\n                                            </p>\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div>\r\n                                : \"NO Data Available\"\r\n                        }\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        {this.state.EnquiryInfo.status === null ?\r\n                            <div className=\"d-flex justify-content-between w-100\">\r\n                                <Button color=\"success\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"accept\")} >Accept</Button>\r\n                                <Button color=\"danger\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"reject\")}  >Reject</Button>\r\n                                {/* <Button type=\"button\" onClick={() => this.taketourClose()} className=\"btn btn-secondary\" >Close</Button> */}\r\n                            </div>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\DashBoard.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Property.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ViewPropertyDetails.js",["659","660","661","662","663","664","665"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Profile.js",["666","667","668","669","670","671"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Profile.js",["672","673"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport { Button, Spinner, Input } from 'reactstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            userInfo: {\r\n                name: \"\",\r\n                email: \"\",\r\n                state: \"\",\r\n                language: \"\",\r\n                stateId: \"\",\r\n                image: \"\",\r\n                address: \"\"\r\n            },\r\n            phone: \"\",\r\n            countryId: \"\",\r\n            countries_name: [],\r\n            countrySelected: {},\r\n            Languages: [],\r\n            Countries: [],\r\n            States: [],\r\n            state_name: [],\r\n            state: \"\",\r\n            name: \"\",\r\n            image: \"\",\r\n            selectType: \"\",\r\n            msg: \"\",\r\n            errMsg: {},\r\n            scsMsg: \"\",\r\n            country_id: \"\",\r\n            profile_image: \"\",\r\n            Loader:true,\r\n            activeSide:false\r\n        }\r\n\r\n        this.handlephone = this.handlephone.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getProfileInfo()\r\n        this.getCountries()\r\n        setTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n\r\n    //form handler\r\n\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({\r\n            userInfo,\r\n            errMsg: \"\"\r\n        });\r\n        console.log(userInfo)\r\n    };\r\n\r\n\r\n    //profile information\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"admin/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        name: response.data.data.name,\r\n                        userInfo: {\r\n                            name: info.name,\r\n                            lastName: info.last_name,\r\n                            email: info.email,\r\n                            address: info.address,\r\n                            introduction: info.introduction,\r\n                            license_number: info.license_number,\r\n                        },\r\n                        phone: info.phone,\r\n                        profile_image: response.data.data.url_path,\r\n                        countryId: response.data.data.country,\r\n                        language: response.data.data.language,\r\n                        state: response.data.data.state\r\n                    })\r\n                    this.handleCountryState(this.state.countryId)\r\n                    console.log(\"sssssssss\", this.state.language)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    //    get Country\r\n\r\n    getCountries() {\r\n        axios\r\n            .get(APIURL + \"countries\")\r\n            .then((response) => {\r\n                let countries_name = response.data.countries;\r\n                const CountryNames = [];\r\n                for (var c = 1; c < countries_name.length; c++) {\r\n                    CountryNames.push({ value: countries_name[c].id, label: countries_name[c].name })\r\n                }\r\n                this.setState({\r\n                    Countries: CountryNames,\r\n                })\r\n                console.log(this.state.Countries)\r\n            })\r\n    }\r\n\r\n    //handle Country\r\n\r\n    handleCountry(e) {\r\n        this.setState({\r\n            countryId: e\r\n        }, () => {\r\n            console.log(this.state.countryId)\r\n            this.handleCountryState(e)\r\n        })\r\n    };\r\n\r\n    // get states\r\n    handleCountryState = (id) => {\r\n        axios\r\n            .post(APIURL + \"states\", {\r\n                country_id: id,\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                let state_name = response.data.states;\r\n                const stateNames = [];\r\n                for (var c = 0; c < state_name.length; c++) {\r\n                    stateNames.push({ value: state_name[c].id, label: state_name[c].name })\r\n                }\r\n                this.setState({\r\n                    States: stateNames,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n\r\n                })\r\n            });\r\n    };\r\n\r\n    // handle states\r\n    handleState(e) {\r\n        this.setState({\r\n            state: e\r\n        })\r\n    }\r\n    //profile image change handler\r\n    handleChangeLogo = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n        console.log(this.state.image)\r\n    }\r\n\r\n    //handle phone \r\n    handlephone(e) {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.setState({ phone: e.target.value })\r\n        }\r\n    }\r\n\r\n    //    update  profile submit handler\r\n\r\n\r\n    onSubmitHandler = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.userInfo.name);\r\n        formData.append('last_name', this.state.userInfo.lastName);\r\n        formData.append('phone', this.state.phone);\r\n        formData.append('email', this.state.userInfo.email);\r\n        formData.append('state', this.state.state);\r\n        formData.append('country', this.state.countryId);\r\n        formData.append('profile_image', this.state.image);\r\n        formData.append('address', this.state.userInfo.address);\r\n        formData.append('license_number', this.state.userInfo.license_number);\r\n        formData.append('introduction', this.state.userInfo.introduction);\r\n        formData.append('id', user.id);\r\n        formData.append('user_type', user.user_type);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"admin/update-profile\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false });\r\n                this.setState({\r\n                    errMsg: {},\r\n                    scsMsg: response.data.message\r\n                }, () => {\r\n                    this.UpdateSuccessfully(this.state.scsMsg)\r\n                    this.getProfileInfo();\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            scsMsg: \"\"\r\n                        })\r\n                        window.location.reload();\r\n                    }, 3000);\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\"\r\n    })\r\n\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"container-scroller\" className=\"resido-admin\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\r\n                    <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={3000}\r\n                        hideProgressBar={true}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                    <Navbar \r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                     data={{ profile_image: this.state.profile_image }} />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                        activePage=\"profile\" \r\n                        profile_image={this.state.profile_image}\r\n                         />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">MY PROFILE</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    {/* <h4 className=\"card-title\">Admin Profile</h4> */}\r\n                                                    {/* <p className=\"card-description\"> Seller</p> */}\r\n                                                    <form className=\"forms-sample\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                <label htmlFor=\"exampleInputName1\">First Name<strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"First Name\"\r\n                                                                    value={this.state.userInfo.name}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.name}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Surname<strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"lastName\"\r\n                                                                    placeholder=\"Surname\"\r\n                                                                    value={this.state.userInfo.lastName}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.last_name}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                <label htmlFor=\"exampleInputEmail3\">Email Address <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    disabled\r\n                                                                    type=\"email\"\r\n                                                                    name=\"email\"\r\n                                                                    placeholder=\"Email Address\"\r\n                                                                    value={this.state.userInfo.email}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.email}</span>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                <label htmlFor=\"exampleSelectGender\">Phone Number<strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"phone\"\r\n                                                                    placeholder=\"Phone Number\"\r\n                                                                    value={this.state.phone}\r\n                                                                    // onChange={this.handlephone()}\r\n                                                                    onChange={this.handlephone}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.phone}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-6 col-12 col-sm-12\">\r\n                                                                <label>Profile Image</label>\r\n                                                                <div className=\"mb-0\">\r\n                                                                    <Input\r\n                                                                        type=\"file\"\r\n                                                                        onChange={this.handleChangeLogo}\r\n                                                                        className=\"form-control\"\r\n                                                                        id=\"fileinput\"\r\n                                                                        style={{ height: \"100%\" }}\r\n\r\n                                                                    />\r\n                                                                    <span style={{ color: \"#485d94\" }}> (Only png, jpg, jpeg format and size upto 2 MB is allowed)</span><br />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.profile_image}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* <div className='text-danger mb-2'>{this.state.scsMsg}</div> */}\r\n                                                        <Button\r\n                                                            color=\"info\"\r\n                                                            className=\"btn  mr-2\"\r\n                                                            onClick={() => this.onSubmitHandler()}\r\n                                                        >Update</Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\AssignedProperty.js",["674","675","676","677","678"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\AssignProperty.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\VerifiedProperties.js",["679","680","681"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Index.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\RequestedPropertyView.js",["682","683","684","685","686","687","688","689","690","691","692","693","694"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\verifiedProperty.js",["695","696"],"import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../.././constants/common';\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Button } from \"reactstrap\"\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter, Input, Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class AssignProperty extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            PropertyList: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"verify\", \"label\": \"Verified\" }, { 'value': \"unverify\", \"label\": \"Not Verified\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            AgentList: [],\r\n            agentId: \"\",\r\n            agentReq: [],\r\n            Visible: false,\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            AssignModal: false,\r\n            agent_id: \"\",\r\n            sortby: \"DESC\",\r\n            sort: false,\r\n            Loader:false\r\n\r\n        }\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getPropertyList()\r\n                }, 300);\r\n            });\r\n    }\r\n    \r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPropertyList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPropertyList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage:1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getPropertyList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getPropertyList()\r\n                this.getApprovedAgentList()\r\n            }\r\n        );\r\n    }\r\n\r\n    getPropertyList() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('sorttype', this.state.columnName ? this.state.columnName : \"\");\r\n\r\n        axios\r\n            .post(APIURL + \"admin/get-all-verified-property-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"admin/get-all-verified-property-list\", response.data.data.data)\r\n                this.setState({\r\n                    PropertyList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    getApprovedAgentList() {\r\n        const token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('status', this.state.status);\r\n        formData.append('limit', this.state.limit);\r\n        axios\r\n            .post(APIURL + \"admin/get-approved-agent-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"agent/get-assign-properties\", response.data)\r\n                if (response.data.data && response.data.data.length > 0) {\r\n                    this.setState({\r\n                        AgentList: response.data.data\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    handleAgentName(e) {\r\n        console.log(e)\r\n        this.setState({\r\n            agent_id: e,\r\n\r\n        })\r\n    };\r\n\r\n\r\n    ActiveDrop = (e) => {\r\n        console.log(e)\r\n        this.setState({\r\n            propertyId: e,\r\n            AssignModal: true,\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            AssignModal: false\r\n        })\r\n    }\r\n\r\n    SubmitProperty = () => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('property_id', this.state.propertyId);\r\n        formData.append('user_id', this.state.agent_id);\r\n        formData.append('status', \"accept\");\r\n\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"admin/property-assign-by-admin\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    Loader: false,\r\n                    AgentInfo: response.data.data,\r\n                    Visible: false,\r\n                    AssignModal: false\r\n                });\r\n                console.log(this.state.AgentInfo)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    Visible: false\r\n                })\r\n            });\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getApprovedAgentList();\r\n        this.getPropertyList()\r\n    }\r\n\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container-scroller resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <Navbar \r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                         activePage=\"Verified\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Verified Property</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-3 ml-auto\">\r\n                                    <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Select Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div> */}\r\n                                </div>\r\n\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-12 grid-margin\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                {/* <h4 className=\"card-title  justify-content-between d-flex \">Property Enquiry </h4> */}\r\n                                                {/* No Records */}\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\" table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by text-left\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}> Property Name</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"seller_name\")}> Seller Name</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"assigned_to\")}> Assigned To</th>\r\n                                                                <th> Status</th>\r\n                                                                <th className=\"text-center\">Action</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.PropertyList.length > 0 ? this.state.PropertyList.map((item, idx) => (\r\n                                                                <React.Fragment>\r\n                                                                    <tr key={idx} >\r\n                                                                        <td className=\"text-left\" >{item.name}</td>\r\n\r\n                                                                        <td>  {item.seller_detail.fullName ? item.seller_detail.fullName : \"Not Assigned\"} </td>\r\n                                                                        <td>  {item.agent_detail.fullName ? item.agent_detail.fullName : \"Not Assigned\"} </td>\r\n                                                                        <td >\r\n                                                                            <label className=\"badge badge-success\">Verified</label>\r\n                                                                        </td>\r\n                                                                        {/* <td>\r\n                                                                                <Button className=\"btn btn-info btn-rounded px-3 btn-sm\" onClick={() => this.ActiveDrop(item.id)}>Assign</Button>\r\n                                                                            </td>  */}\r\n                                                                        <td className=\"text-center\">\r\n                                                                            <Link to={\"/admin/verified/property/View/\" + item.id} className=\"btn btn-info btn-rounded px-3 btn-sm ml-2\">View</Link>\r\n                                                                        </td>\r\n                                                                        <Modal size=\"md\" isOpen={this.state.AssignModal} toggle={() => this.ModalClose()}>\r\n                                                                            <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>Assign Property</ModalHeader>\r\n                                                                            <ModalBody className=\"border-0\">\r\n                                                                                <select className=\"form-control\" onChange={(e) => this.handleAgentName(e.target.value)} >\r\n                                                                                    <option value=\"\">Select</option>\r\n                                                                                    {this.state.AgentList.map((option) => (\r\n                                                                                        <option value={option.id}>{option.name}</option>\r\n                                                                                    ))}\r\n                                                                                </select>\r\n                                                                            </ModalBody>\r\n                                                                            <ModalFooter>\r\n                                                                                <div className=\"d-flex justify-content-between w-100\">\r\n                                                                                    <Button color=\"info\" className=\"btn btn-primary\" onClick={() => this.SubmitProperty()}> <i className=\"fas fa-save mr-1\"> </i>Submit</Button>\r\n                                                                                    <Button className=\"btn btn-danger\" onClick={() => this.ModalClose()}> <i className=\"fas fa-window-close mr-1\"></i>Cancel </Button>\r\n                                                                                </div>\r\n                                                                            </ModalFooter>\r\n                                                                        </Modal>\r\n                                                                    </tr>\r\n                                                                </React.Fragment>\r\n                                                            )) :\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"5\" className=\"text-center\">\r\n                                                                        No Request Available\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n\r\n                                        {this.state.totalItemsCount > 0 &&\r\n                                            <div className=\"pagination-rounded\">\r\n                                                <Pagination\r\n                                                    activePage={this.state.activePage}\r\n                                                    itemsCountPerPage={this.state.limit}\r\n                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                    pageRangeDisplayed={5}\r\n                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                />\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\VerifiedPropertyView.js",["697","698","699","700","701","702","703","704","705","706","707","708","709"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\AssignedPropertyView.js",["710","711","712","713","714","715","716","717","718","719","720","721","722"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Profile.js",["723"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport { Button, Input ,Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            userInfo: {\r\n                name: \"\",\r\n                lastName:\"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                state: \"\",\r\n                language: \"\",\r\n                stateId: \"\",\r\n                image: \"\",\r\n                address: \"\",\r\n                streetName:\"\",\r\n                streetNumber:\"\",\r\n                City:\"\",\r\n                Zip:\"\",\r\n            },\r\n            countryId: \"\",\r\n            countries_name: [],\r\n            countrySelected: {},\r\n            languages:[],\r\n            Countries: [],\r\n            States: [],\r\n            state_name: [],\r\n            state: \"\",\r\n            name: \"\",\r\n            image: \"\",\r\n            selectType: \"\",\r\n            msg: \"\",\r\n            errMsg: {},\r\n            scsMsg: \"\",\r\n            country_id: \"\",\r\n            profile_image: \"\",\r\n            selectedLanguages:[],\r\n            Loader:true,\r\n            activeSide:false\r\n        }\r\n        \r\n        this.handlephone = this.handlephone.bind(this)\r\n    }\r\n\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    //form handler\r\n\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({\r\n            userInfo,\r\n            errMsg: \"\"\r\n        });\r\n        console.log(userInfo)\r\n    };\r\n\r\n\r\n    //profile information\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL+\"seller/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    let list = response.data.data.language_data;\r\n                    let selectedLanguages = []\r\n                    for (var c = 0; c < list.length; c++) {\r\n                        selectedLanguages.push({ \"value\": list[c].value, \"label\": list[c].label })\r\n                    }\r\n                    this.setState({\r\n                        selectedLanguages: selectedLanguages\r\n                    })\r\n\r\n                    this.setState({\r\n                        name: response.data.data.name,\r\n                        userInfo: {\r\n                            name: info.name,\r\n                            lastName: info.last_name,\r\n                            email: info.email,\r\n                            phone: info.phone,\r\n                            streetNumber: info.street_number === \"null\" ? \"\" :info.street_number,\r\n                            streetName: info.street_name === \"null\" ? \"\" :info.street_name,\r\n                            City: info.city  === \"null\" ? \"\" : info.city,\r\n                            Zip: info.zip_code === \"null\" ? \"\" :info.zip_code,\r\n                            // address: info.address,\r\n                            // introduction: info.introduction,\r\n                            // license_number: info.license_number\r\n                        },\r\n                        phone: info.phone,\r\n                        profile_image: response.data.data.profile_image,\r\n                        // email: response.data.data.email,\r\n                        selectedOptions: JSON.stringify(response.data.data.language),\r\n                        countryId: response.data.data.country,\r\n                        language: response.data.data.language,\r\n                        state: response.data.data.state\r\n                    })\r\n                    this.handleCountryState(this.state.countryId)\r\n                    console.log(\"sssssssss\", this.state.userInfo.City)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    //    get languages\r\n\r\n    getLanguages() {\r\n        axios\r\n            .get(APIURL + \"languages\")\r\n            .then((response) => {\r\n                let languages = response.data.languages;\r\n                for (var c = 0; c < languages.length; c++) {\r\n                    this.state.languages.push({ value: languages[c].id, label: languages[c].name })\r\n                }\r\n                console.log(this.state.languages)\r\n            })\r\n    }\r\n\r\n    handleLanguages = (selectedLanguages) => {\r\n        this.setState({ selectedLanguages });\r\n    }\r\n  \r\nhandlephone(e){\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === '' || re.test(e.target.value)) {\r\n       this.setState({phone: e.target.value})\r\n    }\r\n}\r\n\r\n    getCountries() {\r\n        axios\r\n            .get(APIURL + \"countries\")\r\n            .then((response) => {\r\n                let countries_name = response.data.countries;\r\n                const CountryNames = [];\r\n                for (var c = 1; c < countries_name.length; c++) {\r\n                    CountryNames.push({ value: countries_name[c].id, label: countries_name[c].name })\r\n                }\r\n                this.setState({\r\n                    Countries: CountryNames,\r\n                })\r\n                console.log(this.state.Countries)\r\n            })\r\n    }\r\n\r\n    handleCountry(e) {\r\n        this.setState({\r\n            countryId: e\r\n        }, () => {\r\n            console.log(this.state.countryId)\r\n            this.handleCountryState(e)\r\n        })\r\n    };\r\n\r\n    // get states\r\n    handleCountryState = (id) => {\r\n        axios\r\n            .post(APIURL + \"states\", {\r\n                country_id: id,\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                let state_name = response.data.states;\r\n                const stateNames = [];\r\n                for (var c = 0; c < state_name.length; c++) {\r\n                    stateNames.push({ value: state_name[c].id, label: state_name[c].name })\r\n                }\r\n                this.setState({\r\n                    States: stateNames,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n\r\n                })\r\n            });\r\n    };\r\n\r\n    // handle states\r\n    handleState(e) {\r\n        this.setState({\r\n            state: e\r\n        })\r\n    }\r\n    //profile image change handler\r\n    handleChangeLogo = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n        console.log(this.state.image)\r\n    }\r\n\r\n    //    update  profile submit handler\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.userInfo.name);\r\n        formData.append('last_name', this.state.userInfo.lastName);\r\n        formData.append('phone', this.state.phone);\r\n        formData.append('email', this.state.userInfo.email);\r\n        formData.append('state', this.state.state);\r\n        formData.append('country', this.state.countryId);\r\n        formData.append('profile_image', this.state.image);\r\n        formData.append('street_number', this.state.userInfo.streetNumber);\r\n        formData.append('street_name', this.state.userInfo.streetName);\r\n        formData.append('city', this.state.userInfo.City);\r\n        formData.append('zip_code', this.state.userInfo.Zip);\r\n        formData.append('language', JSON.stringify(this.state.selectedLanguages));\r\n        formData.append('address', this.state.userInfo.address);\r\n        formData.append('id', user.id);\r\n        formData.append('user_type', user.user_type);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/update-profile\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false });\r\n                this.setState({\r\n                    errMsg: {},\r\n                    scsMsg:response.data.message\r\n                }, () => {\r\n                    this.UpdateSuccessfully(this.state.scsMsg)\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            scsMsg:\"\"\r\n                        })\r\n                        window.location.reload();\r\n                    }, 3000);\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\"\r\n        })\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        this.getProfileInfo()\r\n        this.getCountries()\r\n        this.getLanguages()\r\n        setTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n   \r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if(this.state.user_type !== \"Seller\"){\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        return (\r\n            <>\r\n               <div className=\"container-scroller  resido-admin\">\r\n               {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}             \r\n               <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                <Navbar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}\r\n                data={{ profile_image: this.state.profile_image }} \r\n        \r\n                 />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar ideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}\r\n                        data={{ profile_image: this.state.profile_image }} \r\n                        activePage=\"profile\"\r\n                        toggle={this.state.toggle}\r\n                         />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                 <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">MY PROFILE</h4>   \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    {/* <h4 className=\"card-title\">Seller Profile </h4> */}\r\n                                                    {/* <p className=\"card-description\"> Seller</p> */}\r\n                                                    <form className=\"forms-sample\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleInputName1\">First Name <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"name\"\r\n                                                                        placeholder=\"First Name\"\r\n                                                                        value={this.state.userInfo.name}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.name}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleInputName1\">Surname <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"lastName\"\r\n                                                                        placeholder=\"Surname\"\r\n                                                                        value={this.state.userInfo.lastName}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.last_name}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleInputEmail3\">Email Address <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        disabled\r\n                                                                        type=\"email\"\r\n                                                                        name=\"email\"\r\n                                                                        placeholder=\"Email Address\"\r\n                                                                        value={this.state.userInfo.email}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.email}</span>\r\n                                                                </div>\r\n\r\n                                                            \r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label>Profile Image</label>\r\n                                                                    <div className=\"\">\r\n                                                                        <Input\r\n                                                                            type=\"file\"\r\n                                                                            onChange={this.handleChangeLogo}\r\n                                                                            className=\"form-control\"\r\n                                                                            id=\"fileinput\"\r\n                                                                            style={{ height: \"100%\" }}\r\n                                                                        />\r\n                                                                    <span style={{color:\"#485d94\"}}> (Only png, jpg, jpeg format and size upto 2 MB is allowed)</span><br />\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.profile_image}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label>Language</label>\r\n                                                                    <div className=\"\">\r\n                                                                    <Select\r\n                                                                        isMulti\r\n                                                                        placeholder=\"Select Language\"\r\n                                                                        value={this.state.selectedLanguages}\r\n                                                                        onChange={this.handleLanguages}\r\n                                                                        options={this.state.languages}\r\n                                                                    />\r\n                                                                        {/* <select className=\"form-control\" value={this.state.Lang_id} onChange={(e) => this.handleLanguages(e.target.value)} >\r\n                                                                            <option value=\"\">Select</option>\r\n                                                                            {this.state.Languages.map((option) => (\r\n                                                                                <option value={option.value}>{option.label}</option>\r\n                                                                            ))}\r\n                                                                        </select> */}\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.language}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleInputCity1\">Country </label>\r\n                                                                    <select className=\"form-control\" value={this.state.countryId} onChange={(e) => this.handleCountry(e.target.value)} >\r\n                                                                        <option value=\"\">Country</option>\r\n                                                                        {this.state.Countries.map((option) => (\r\n                                                                            <option value={option.value}>{option.label}</option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n\r\n\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.country}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleInputCity1\">State</label>\r\n                                                                    <select className=\"form-control\" value={this.state.state} onChange={(e) => this.handleState(e.target.value)} >\r\n                                                                        <option value=\"\" >State</option>\r\n                                                                        {this.state.States.map((option) => (\r\n                                                                            <option value={option.value}>{option.label}</option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.state}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleTextarea1\">City</label>\r\n                                                                    <input\r\n                                                                        rows=\"1\"\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"City\"\r\n                                                                        placeholder=\"City\"\r\n                                                                        value={this.state.userInfo.City}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    \r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.city}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleTextarea1\">Street Number</label>\r\n                                                                    <textarea\r\n                                                                        rows=\"4\"\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"number\"\r\n                                                                        name=\"streetNumber\"\r\n                                                                        placeholder=\"Street Number\"\r\n                                                                        value={this.state.userInfo.streetNumber}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    \r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.street_number}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleTextarea1\">Street Name</label>\r\n                                                                    <input\r\n                                                                        rows=\"4\"\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"streetName\"\r\n                                                                        placeholder=\"Street Name\"\r\n                                                                        value={this.state.userInfo.streetName}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.street_name}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleTextarea1\">Zip code</label>\r\n                                                                    <input\r\n                                                                        rows=\"4\"\r\n                                                                        className=\"form-control\"\r\n                                                                        required=\"\"\r\n                                                                        type=\"text\"\r\n                                                                        name=\"Zip\"\r\n                                                                        placeholder=\"Zip code\"\r\n                                                                        value={this.state.userInfo.Zip}\r\n                                                                        onChange={this.onChangehandler}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.zip_code}</span>\r\n                                                                </div>\r\n                                                                <div className=\"form-group col-lg-6 col-12 col-sm-6\">\r\n                                                                    <label htmlFor=\"exampleSelectGender\">Phone Number<strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <input\r\n                                                                        className=\"form-control\"\r\n                                                                        name=\"phone\"\r\n                                                                        placeholder=\"Phone Number\"\r\n                                                                        value={this.state.phone}\r\n                                                                        onChange={this.handlephone}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.phone}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* <div className='text-danger mb-2'>{this.state.scsMsg}</div> */}\r\n                                                        <Button\r\n                                                            color=\"info\"\r\n                                                            className=\"mr-2\"\r\n                                                            onClick={() => this.onSubmitHandler()}\r\n                                                        >Update</Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\VerifiedPropertyView.js",["724","725","726","727","728","729","730","731","732"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ViewVerifiedProperty.js",["733","734","735","736","737","738","739","740","741","742"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Property\\RequestedAssignPropery.js",["743","744"],"import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../.././constants/common';\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Button } from \"reactstrap\"\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter, Input, Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class RequestedAssignPropery extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            PropertyList: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"under_review\", \"label\": \"Under Review\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"unverify\", \"label\": \"Not Verified\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            AgentList: [],\r\n            agentId: \"\",\r\n            agentReq: [],\r\n            Visible: false,\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            AssignModal: false,\r\n            agent_id: \"\",\r\n            sortby: \"DESC\",\r\n            sort: false,\r\n            Loader:false\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getPropertyList()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPropertyList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPropertyList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage:1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getPropertyList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getPropertyList()\r\n                this.getApprovedAgentList()\r\n            }\r\n        );\r\n    }\r\n\r\n    getPropertyList() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('sorttype', this.state.columnName ? this.state.columnName : \"\");\r\n\r\n        axios\r\n            .post(APIURL + \"admin/get-not-assigned-property-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"admin/get-not-assigned-property-list\", response.data.data)\r\n                this.setState({\r\n                    PropertyList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    getApprovedAgentList() {\r\n        const token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('status', this.state.status);\r\n        formData.append('limit', this.state.limit);\r\n        axios\r\n            .post(APIURL + \"admin/get-approved-agent-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"agent/get-assign-properties\", response.data)\r\n                if (response.data.data && response.data.data.length > 0) {\r\n                    this.setState({\r\n                        AgentList: response.data.data\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    handleAgentName(e) {\r\n        console.log(e)\r\n        this.setState({\r\n            agent_id: e,\r\n\r\n        })\r\n    };\r\n\r\n\r\n    ActiveDrop = (e) => {\r\n        console.log(e)\r\n        this.setState({\r\n            propertyId: e,\r\n            AssignModal: true,\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            AssignModal: false\r\n        })\r\n    }\r\n\r\n    SubmitProperty = () => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('property_id', this.state.propertyId);\r\n        formData.append('user_id', this.state.agent_id);\r\n        formData.append('status', \"accept\");\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"admin/property-assign-by-admin\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    Loader: false,\r\n                    AgentInfo: response.data.data,\r\n                    Visible: false,\r\n                    AssignModal: false\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 100);\r\n                console.log(this.state.AgentInfo)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    Visible: false\r\n                })\r\n            });\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getApprovedAgentList();\r\n        this.getPropertyList()\r\n    }\r\n\r\n\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container-scroller resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                   <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                    />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                        activePage=\"RequestedAssignPropery\" \r\n                        />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Requested Propery</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    {/* <div className=\"col-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Select Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div> */}\r\n                                </div>\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-12 grid-margin\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                {/* <h4 className=\"card-title  justify-content-between d-flex \">Property Enquiry </h4> */}\r\n                                                {/* No Records */}\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table \">\r\n                                                        <thead>\r\n                                                            <tr >\r\n                                                                <th className=\"sort-by text-left\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}> Property Name</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"seller_name\")}> Assigned To</th>\r\n                                                                <th> Status</th>\r\n                                                                <th className=\"text-center\"> Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.PropertyList.length > 0 ? this.state.PropertyList.map((item, idx) => (\r\n                                                                <React.Fragment>\r\n                                                                    <tr >\r\n                                                                        <td className=\"text-left\" >{item.name}</td>\r\n\r\n                                                                        <td>  {item.assigned_to ? item.assigned_to : \"Not Assigned\"} </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.propertyAssignedStatus === \"accept\" && item.propertyVerifiedStatus === \"verify\" ?\r\n                                                                                    <label className=\"badge badge-success\">Verified</label>\r\n                                                                                    :\r\n                                                                                    item.propertyAssignedStatus === \"accept\" && item.propertyVerifiedStatus === \"unverify\" ?\r\n                                                                                        <label className=\"badge badge-danger\">Not verified</label>\r\n                                                                                        :\r\n                                                                                        item.propertyAssignedStatus === \"accept\" ?\r\n\r\n                                                                                            <label className=\"badge badge-success\">Accepted</label>\r\n                                                                                            :\r\n                                                                                            item.propertyAssigned ?\r\n                                                                                                <label className=\"badge badge-primary\">Under Review</label> :\r\n                                                                                                <div>\r\n                                                                                                    <label className=\"badge badge-warning\">Pending</label>\r\n                                                                                                </div>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            <Button color='info' className=\"btn-rounded px-3 btn-sm\" onClick={() => this.ActiveDrop(item.id)}>Assign</Button>\r\n                                                                            <Link to={\"/admin/requested/property/View/\" + item.id} className=\"btn btn-info btn-rounded px-3 btn-sm ml-2\">View</Link>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </React.Fragment>\r\n                                                            )) :\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"4\" className=\"text-center\">\r\n                                                                        No Request Available\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n\r\n                                        {this.state.totalItemsCount > 0 &&\r\n                                            <div className=\"pagination-rounded\">\r\n                                                <Pagination\r\n                                                    activePage={this.state.activePage}\r\n                                                    itemsCountPerPage={this.state.limit}\r\n                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                    pageRangeDisplayed={5}\r\n                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                />\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.AssignModal} toggle={() => this.ModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>Assign Property</ModalHeader>\r\n                    <ModalBody className=\"border-0 h-auto\">\r\n                        <select className=\"form-control\" onChange={(e) => this.handleAgentName(e.target.value)} >\r\n                            <option value=\"\">Select</option>\r\n                            {this.state.AgentList.map((option) => (\r\n                                <option value={option.id}>{option.fullName}</option>\r\n                            ))}\r\n                        </select>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"d-flex justify-content-between w-100\">\r\n                            <Button color=\"success\" onClick={() => this.SubmitProperty()}> <i className=\"fas fa-save mr-1\"> </i>Submit</Button>\r\n                            <Button color='danger' onClick={() => this.ModalClose()}> <i className=\"fas fa-window-close mr-1\"></i>Cancel </Button>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\VerifiedProperty.js",["745","746","747"],"import React, { Component } from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Button } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { APIURL } from '../../constants/common';\r\nimport { Spinner, Input } from 'reactstrap'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport dateFormat, { masks } from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\nexport default class VerifiedProperty extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            propertyRequest: [],\r\n            CommetModal: false,\r\n            isLoading: false,\r\n            rejectComment: \"\",\r\n            errMsg: \"\",\r\n            scsMsg: \"\",\r\n            Loader: false,\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            activeSide:false\r\n        }\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getVerifiedProperty()\r\n\r\n    }\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getVerifiedProperty()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getVerifiedProperty()\r\n                })\r\n            }\r\n        })\r\n    }\r\n     \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getVerifiedProperty()\r\n                }, 300);\r\n            });\r\n    }\r\n    \r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getVerifiedProperty() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getVerifiedProperty()\r\n            }\r\n        );\r\n    }\r\n    getVerifiedProperty() {\r\n        this.setState({Loader:true})\r\n        const token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n        axios\r\n            .post(APIURL + \"seller/get-verified-properties\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"seller/get-verified-properties\", response.data.data.data)\r\n                   this.setState({\r\n                        propertyRequest: response.data.data.data,\r\n                        activePage: response.data.data.current_page,\r\n                        totalItemsCount: response.data.data.total,\r\n                        limit: response.data.data.per_page,\r\n                        Loader:false\r\n                    });\r\n                \r\n            });\r\n    }\r\n\r\n    CommetModal(e) {\r\n        this.setState({\r\n            CommetModal: !this.state.CommetModal,\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            CommetModal: false\r\n        })\r\n    }\r\n    rejectComment(e) {\r\n        this.setState({\r\n            rejectComment: e\r\n        })\r\n    }\r\n    ViewDetailsPreview(e) {\r\n        this.setState({\r\n            ViewPropertyId: e.id,\r\n            goToPreviewVeri: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.goToPreviewVeri) {\r\n            return <Redirect to={\"/seller/verified/property/details/\" + this.state.ViewPropertyId} push={true} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\r\n                <div className=\"container-scroller\">\r\n                    <Navbar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide} />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}\r\n                        activePage=\"verified_property\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Verified Property</h4>\r\n                                </div>\r\n                                {this.state.scsMsg || this.state.errMsg ?\r\n                                    <div className={this.state.scsMsg ? \"alert alert-success mb-4\" : \"alert alert-danger mb-4\"} role=\"alert\">\r\n                                        {this.state.scsMsg} {this.state.errMsg.message}\r\n                                    </div>\r\n                                    : \"\"}\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-12 grid-margin\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table \">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}>Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"agent_name\")}> Agent Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"created_at\")}> Created Date </th>\r\n                                                                <th >Status</th>\r\n                                                                <th className=\"text-center\"> Action</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.propertyRequest.length > 0 ? this.state.propertyRequest.map((item, idx) => (\r\n                                                                <React.Fragment>\r\n                                                                    <tr style={{ fontWeight: \"700\" }}>\r\n                                                                        <td >{item.name}</td>\r\n                                                                        <td >{item.agent_detail.fullName}\r\n                                                                        </td>\r\n                                                                        <td > {dateFormat(item.created_at, 'dd-mm-yyyy')}</td>\r\n                                                                        <td>\r\n                                                                            <label className=\"badge badge-success\">Verified</label>\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            <div>\r\n                                                                                <Button size=\"sm\" type=\"button\" color=\"info\" className=\"btn-rounded\" onClick={(e) => this.ViewDetailsPreview(item)} >View</Button>\r\n                                                                                </div>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </React.Fragment>\r\n\r\n                                                            )) :\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"3\" className=\"text-center\">\r\n                                                                        No Property Available\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {/* <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ContractForms\\sellerPurchaseList.js",["748","749","750","751","752"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class ContractList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            purchase: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" },{ 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            goToNewContract: false, \r\n            contractId:\"\",\r\n            contractInfoModal: false,\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getpurchase()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getpurchase()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getpurchase()\r\n                }, 300);\r\n            });\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getpurchase() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getpurchase()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n    getpurchase() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"get-purchase-contract-list-for-user\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"get-contract-list-for-agent\", response.data.data.data)\r\n                this.setState({\r\n                    purchase: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    AddpropertyModal() {\r\n        this.setState({\r\n            AddpropertyModal: !this.state.AddpropertyModal\r\n        })\r\n    }\r\n    // AddpropertyModal close\r\n    ModalClose() {\r\n        this.setState({\r\n            AddpropertyModal: false\r\n        })\r\n    }\r\n\r\n    AddNewContract() {\r\n        this.setState({\r\n            goToNewContract: true\r\n        })\r\n    }\r\n    contractInfoModal(e) {\r\n        this.setState({\r\n            contractInfoModal: true,\r\n            contractId:e.id\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            contractInfoModal: false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getpurchase()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Seller\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirect) {\r\n            return <Redirect to={\"/seller/edit-property/\" + this.state.property_id} />;\r\n        }\r\n        if (this.state.goToNewContract) {\r\n            return <Redirect to={\"/agent/seller/purchase/contract\"} />;\r\n        }\r\n        if (this.state.goToNewContract) {\r\n            return <Redirect to={\"/agent/seller/purchase/contract\"} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}/>\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                        activePage=\"SellerPurchase\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Seller Purchase List</h4>\r\n                                    {/* <Button onClick={() => this.AddNewContract()} color=\"info\" className=\"px-3 btn-sm\">Purchase New Contract</Button> */}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"contract_title\")}> Contract Title</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                <th > Document </th>\r\n                                                                <th onClick={() => this.SortBy(\"created_at\")} > Status </th>\r\n                                                                <th className=\"text-center\"> Action</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.purchase.length > 0 ?\r\n                                                                this.state.purchase.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.contract_title}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {item.property_name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                                               <a href={item.document_url}>{item.file_name}</a>\r\n                                                                                            </td>\r\n                                                                        \r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === null ?\r\n                                                                                    <label color='danger' className=\"badge btn-danger\"> Not Signed</label>\r\n                                                                                    :\r\n                                                                                    <label color='success' className=\"badge btn-danger\"> Signed</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            <Button  className=\"btn btn-info btn-rounded px-3 btn-sm ml-2\" onClick={(e) => this.contractInfoModal(item)} >View</Button>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr>\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.contractInfoModal} toggle={() => this.ModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.purchase.length > 0 &&\r\n                            this.state.purchase.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p> {\r\n                                            item.status === null ?\r\n                                                \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\WishList.js",["753","754","755","756"],"import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Sidebar from './Sidebar'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { Button } from 'reactstrap'\r\nimport NumberFormat from 'react-number-format';\r\nimport bad from '../../../assets/img/bed.svg'\r\nimport bath from '../../../assets/img/bathtub.svg'\r\nimport move from '../../../assets/img/move.svg'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Spinner } from \"reactstrap\"\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            WishList: [],\r\n            Loader: true\r\n        }\r\n    }\r\n    getWishListData() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            formData.append('id', this.state.user.id)\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"buyer/get-property-wishlist\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        WishList: response.data.data\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    removeToWishlist = (wishlist_id) => {\r\n        if (!this.state.user) {\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n            return false\r\n        }\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('property_id', wishlist_id);\r\n        axios\r\n            .post(APIURL + \"buyer/property-wishlist-remove\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.getWishListData()\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n        this.getWishListData()\r\n    };\r\n    toggle(){\r\n        this.setState({\r\n            toggle:!this.state.toggle\r\n        })\r\n    }\r\n\r\n    toggleFunChild(value){\r\n        this.setState({\r\n            toggle:value\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        setTimeout(() => {\r\n            this.setState({\r\n                Loader: false\r\n            })\r\n        }, 500);\r\n        this.getWishListData()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Buyer\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"resido-front\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar activePage=\"wishlist\" />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar \r\n                                            activePage=\"wishlist\"\r\n                                            toggleFunChild={this.toggleFunChild.bind(this)}\r\n                                            toggle={this.state.toggle}\r\n                                             />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n                                                {/* <!-- Bookmark Property --> */}\r\n                                                <div className=\"form-submit mb-4\">\r\n                                                    <h4>Wishlist</h4>\r\n                                                </div>\r\n                                                {this.state.WishList.length > 0 ? this.state.WishList.map((item, idx) => (\r\n                                                    <div className=\"row list-layout\">\r\n                                                        {/* {this.state.PropertyList.length > 0 ? this.state.PropertyList.slice(0, this.state.limit).map((item, idx) => ( */}\r\n                                                        <div className=\"col-lg-12 col-md-6 col-sm-6 col-12\">\r\n                                                            {item.property.property_detail.length > 0 && item.property.property_detail.map((sItem, idx) => (\r\n                                                                <div className=\"property-listing property-1\">\r\n                                                                    <div className=\"listing-img-wrapper\">\r\n                                                                        {item.property.property_media.length > 0 && item.property.property_media.slice(0, 1).map((Img, idx) => (\r\n                                                                            <Link to={\"/viewproperty/details/\" + sItem.id}>\r\n                                                                                <img src={Img.url_path} className=\"img-fluid mx-auto\" alt=\"\" />\r\n                                                                            </Link>\r\n                                                                        ))}\r\n                                                                    </div>\r\n                                                                    {/* {item.property_detail.length > 0 && item.property_detail.map((sItem, idx) => ( */}\r\n                                                                    <div className=\"listing-content\">\r\n                                                                        <div>\r\n                                                                            <Link to={\"/viewproperty/details/\" + sItem.id}>\r\n                                                                                <div className=\"listing-detail-wrapper-box\">\r\n                                                                                    <div className=\"listing-detail-wrapper\">\r\n                                                                                        <div className=\"listing-short-detail\">\r\n                                                                                            <h4 className=\"listing-name ms-1\">\r\n                                                                                                {item.property.name}\r\n                                                                                            </h4>\r\n                                                                                            <div className=\"listing-locate\">\r\n                                                                                                <span className=\"listing-location\"><i className=\"ti-location-pin\"></i>{sItem.street_number}, {sItem.street_name}, {sItem.city === \"null\" ? \"NA\" : sItem.city}</span>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Link>\r\n                                                                            <Link to={\"/viewproperty/details/\" + sItem.id}>\r\n                                                                                <div className=\"price-features-wrapper\">\r\n                                                                                    <div className=\"list-fx-features\">\r\n                                                                                        <div className=\"listing-card-info-icon\">\r\n                                                                                            <div className=\"inc-fleat-icon\"><img src={bad} width=\"13\" alt=\"\" /></div> {sItem.number_of_bedrooms} Beds\r\n                                                                                        </div>\r\n                                                                                        <div className=\"listing-card-info-icon\">\r\n                                                                                            <div className=\"inc-fleat-icon\"><img src={bath} width=\"13\" alt=\"\" /></div> {sItem.number_of_bathrooms} Bath\r\n                                                                                        </div>\r\n                                                                                        <div className=\"listing-card-info-icon\">\r\n                                                                                            <div className=\"inc-fleat-icon\"><img src={move} width=\"13\" alt=\"\" /></div> {sItem.lot_size} sqft\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Link>\r\n\r\n                                                                            <div className=\"listing-footer-wrapper justify-content-between\">\r\n                                                                                <Link to={\"/viewproperty/details/\" + sItem.id}>\r\n\r\n                                                                                    <div className=\"list-price\">\r\n                                                                                        <h6 className=\"listing-card-info-price\">\r\n                                                                                            <NumberFormat\r\n                                                                                                value={sItem.listing_price}\r\n                                                                                                className=\"foo\"\r\n                                                                                                displayType={'text'}\r\n                                                                                                thousandSeparator={true}\r\n                                                                                                prefix={'$'}\r\n                                                                                                renderText={(value, props) => <div {...props}>{value}</div>}\r\n                                                                                            />\r\n                                                                                        </h6>\r\n                                                                                    </div>\r\n                                                                                </Link>\r\n                                                                                <div className=\"listing-detail-btn\">\r\n                                                                                    <Button size='sm' color='theme' onClick={() => this.removeToWishlist(item.property_id)} >\r\n                                                                                        <i className=\"far fa-trash-alt\"> </i>\r\n                                                                                    </Button>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"d-flex justify-content-center\">\r\n                                                            {this.state.totalItemsCount > 0 &&\r\n                                                                <div className=\"pagination-rounded\">\r\n                                                                    <Pagination\r\n                                                                        activePage={this.state.activePage}\r\n                                                                        itemsCountPerPage={this.state.limit}\r\n                                                                        totalItemsCount={this.state.totalItemsCount}\r\n                                                                        pageRangeDisplayed={5}\r\n                                                                        onChange={this.handlePageChange.bind(this)}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )) :\r\n                                                    <table>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td colSpan=\"3\" className=\"text-center\">\r\n                                                                    No Item Available\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ChangePassword.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Cms\\PageList.js",["757","758","759"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            cmsDataList: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"active\", \"label\": \"Active\" }, { 'value': \"deactive\", \"label\": \"Deactive\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white'\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getCmsList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getCmsList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getCmsList()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getCmsList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getCmsList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getCmsList() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"admin/get-cms-page-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"admin/get-cms-page-list\", response.data.data.data)\r\n                this.setState({\r\n                    cmsDataList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    AddpropertyModal:false\r\n                }, () => {\r\n                    this.notify(this.state.scsMsg)\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            redirect:true,\r\n                            \r\n                        })\r\n                    }, 5000);\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    AddpropertyModal() {\r\n        this.setState({\r\n            AddpropertyModal: !this.state.AddpropertyModal,\r\n            errMsg: \"\"\r\n        })\r\n    }\r\n    // AddpropertyModal close\r\n    ModalClose() {\r\n        this.setState({\r\n            AddpropertyModal: false\r\n        })\r\n    }\r\n\r\n    notify = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\"\r\n        })\r\n        sideMenu = (value) => {\r\n            this.setState({\r\n                activeSide:value\r\n            })\r\n        }\r\n    componentDidMount() {\r\n        this.getCmsList()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar \r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                        activePage=\"CMS\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">CMS</h4>\r\n                                    {/* <Button onClick={() => this.AddpropertyModal()} color=\"info\" className=\"px-3 btn-sm\">Add Property</Button> */}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"page_title\")}> Page Title </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"url_key\")}> URl key</th>\r\n                                                                <th> Status </th>\r\n                                                                <th > Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.cmsDataList.length > 0 ?\r\n                                                                this.state.cmsDataList.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.page_title}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {item.url_key}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {\r\n                                                                                item.status === \"active\"  ?\r\n                                                                                    <label className=\"badge badge-success \">Active</label>\r\n                                                                                    :\r\n                                                                                   <label className=\"badge badge-primary\">Deactive</label> \r\n                                                                                                    \r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td>               \r\n                                                                            <Link to={\"/edit/cms/\" + item.id} className=\"btn btn-info px-3 btn-rounded btn-sm\"> Edit </Link>\r\n                                                                              \r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.AddpropertyModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                    <ModalHeader toggle={() => this.ModalClose()}>Add Property</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control \"\r\n                                        placeholder=\"Property Name\"\r\n                                        value={this.state.propertyName}\r\n                                        onChange={(e) => this.handlechange(e.target.value)}\r\n                                        autoFocus={true}\r\n                                    />\r\n                                    {this.state.errMsg ? <span className=\"text-danger\">{this.state.errMsg.name}</span> : \"\"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* {this.state.scsMsg ?\r\n                            <span className=\"text-success\">\r\n                                {this.state.scsMsg}<br />\r\n                            </span>\r\n                            : \"\"} */}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"d-flex justify-content-between w-100\">\r\n                            <Button color=\"success\" onClick={() => this.SubmitProperty()}> <i className=\"fas fa-save mr-1\"> </i>Submit</Button>\r\n                            <Button color=\"danger\" onClick={() => this.ModalClose()}> <i className=\"fas fa-window-close mr-1\"></i>Cancel </Button>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Cms\\EditPage.js",["760","761","762","763","764"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../constants/common';\r\nimport { Button, Input, Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Global, css } from \"@emotion/core\";\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    }\r\n};\r\nconst editorConfiguration = {\r\n    toolbar: [ \r\n        'heading',\r\n      '|',\r\n      'bold',\r\n      'italic',\r\n      'bulletedList',\r\n      'numberedList',\r\n      '|',\r\n      'undo',\r\n      'redo',\r\n    //   '|',\r\n    //   'imageStyle:alignLeft',\r\n    //   'imageStyle:alignCenter',\r\n    //    'imageStyle:alignRight',\r\n       ] ,\r\n    ckfinder: {\r\n      // Upload the images to the server using the CKFinder QuickUpload command\r\n      // You have to change this address to your server that has the ckfinder php connector\r\n      uploadUrl: 'https://ckeditor.com/apps/ckfinder/3.5.0/core/connector/php/connector.php?command=QuickUpload&type=Files&responseType=json'\r\n  }\r\n};\r\n\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            pageTitle: \"\",\r\n            content: \"\",\r\n            errMsg: \"\",\r\n            scsMsg: \"\",\r\n            Loader: true,\r\n            redirectback: false,\r\n            activeSide:false\r\n        }\r\n    }\r\n    ckWrapperStyle = css`\r\n    position: relative;\r\n    z-index: 1;\r\n    &::before {\r\n      color: rgba(251, 50, 8, 1.0);\r\n      content: attr(data-placeholder);\r\n      position: absolute;\r\n      margin: var(--ck-spacing-large) 0;\r\n      top: 0;\r\n      z-index: -1;\r\n    }\r\n  `;\r\n\r\n    componentDidMount() {\r\n        this.getProperties()\r\n        window.scrollTo(0, 0);\r\n        setTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n\r\n\r\n\r\n    handleTitle = (e) => {\r\n        this.setState({\r\n            pageTitle: e\r\n        });\r\n    };\r\n   \r\n    handleChangeText(event) {\r\n        this.setState({\r\n            content: event\r\n        })\r\n        console.log(this.state.text)\r\n    }\r\n\r\n    getProperties = () => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('cms_id', this.props.match.params.id);\r\n        axios\r\n            .post(APIURL + \"admin/edit-cms-page\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"cms\", response.data.data)\r\n                const info = response.data.data\r\n                this.setState({\r\n                    pageTitle: info.page_title,\r\n                    content: info.content\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                // setTimeout(() => this.setState({ errMsg: \"\" }), 3000);\r\n            });\r\n    };\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('id', this.props.match.params.id);\r\n        formData.append('page_title', this.state.pageTitle);\r\n        formData.append('content', this.state.content);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"admin/update-cms-page\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    Loader: false,\r\n                    // redirectback: true\r\n                })\r\n                this.UpdateSuccessfully(this.state.scsMsg)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\",\r\n        onClose: () =>\r\n            this.setState({\r\n                redirectback: true\r\n            })\r\n    })\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.redirectback) {\r\n            return <Redirect to=\"/cms\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"container-scroller resido-admin\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={3000}\r\n                        hideProgressBar={true}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                    <Navbar\r\n                     sideMenu={this.sideMenu.bind(this)}\r\n                     activeSide={this.state.activeSide}\r\n                      />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                         activePage=\"contractToBuyer\" \r\n                         />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">{this.state.pageTitle}</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <form className=\"forms-sample\">\r\n                                                        {/* <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Contract Title</label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    type=\"text\"\r\n                                                                    placeholder=\"Contract Title\"\r\n                                                                    value={this.state.pageTitle}\r\n                                                                    onChange={(e) => this.handleTitle(e.target.value)}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.contract_title}</span>\r\n                                                            </div>\r\n                                                        </div> */}\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Page Content</label>\r\n                                                                <Global\r\n                                                    styles={css`\r\n                                            :root {\r\n                                                \r\n                                            --ck-border-radius: 4px;\r\n                                            --ck-color-focus-border: rgba(142, 140, 140, 0.25);\r\n                                            --ck-color-shadow-inner: rgba(142, 140, 140, 1);\r\n                                            --ck-inner-shadow: 0 0 0 2px var(--ck-color-shadow-inner);\r\n                                            --ck-spacing-large: var(--ck-spacing-standard);\r\n                                            height: 200px;\r\n                                            }\r\n                                            .ck.ck-editor__editable_inline {\r\n                                            border: 1px solid rgba(142, 140, 140, 0.25);\r\n                                            transition: all 0.3s;\r\n                                            color: rgba(19, 19, 18, 1);\r\n                                            height: 200px;\r\n                                            &:hover {\r\n                                                border-color: rgba(19, 19, 18, 0.25);\r\n                                                border-right-width: 1px !important;\r\n                                              color: rgba(19, 19, 18, 1); !important;\r\n\r\n                                            }\r\n                                            }\r\n                                            .ck-editor__editable.ck-read-only {\r\n                                              color: rgba(19, 19, 18, 1);;\r\n                                            opacity: 1;\r\n                                            cursor: not-allowed;\r\n                                             color: rgba(19, 19, 18, 1);\r\n                                             height: 200px;\r\n                                            &:hover {\r\n                                                border-color: rgba(142, 140, 140, 0.25);\r\n                                            }\r\n                                            }\r\n                                        `}\r\n                                                />\r\n                                                <CKEditor\r\n\t\t\t\t\t\t\t\t                    editor={ Editor }\r\n\t\t\t\t\t\t\t\t                    config={ editorConfiguration }\r\n\t\t\t\t\t\t\t\t                    data={this.state.content}\r\n\t\t\t\t\t\t\t\t                    onReady={ editor => {\r\n\t\t\t\t\t\t\t\t                        // You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t                        console.log( 'Editor is ready to use!', editor );\r\n\t\t\t\t\t\t\t\t                    } }\r\n\t\t\t\t\t\t\t\t                    onChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t                        const data = editor.getData();\r\n\t\t\t\t\t\t\t\t                        this.handleChangeText(data)\r\n\t\t\t\t\t\t\t\t                        console.log({ event, editor, data });\r\n\t\t\t\t\t\t\t\t                    }}\r\n\r\n\t\t\t\t\t\t\t\t                    onBlur={ ( event, editor ) => {\r\n\t\t\t\t\t\t\t\t                        console.log( 'Blur.', editor );\r\n\t\t\t\t\t\t\t\t                    } }\r\n\t\t\t\t\t\t\t\t                    onFocus={ ( event, editor ) => {\r\n\t\t\t\t\t\t\t\t                        console.log( 'Focus.', editor );\r\n\t\t\t\t\t\t\t\t                    } }\r\n\t\t\t\t\t\t\t\t                />\r\n                                                                {/* <textarea\r\n                                                                    className=\"form-control\"\r\n                                                                    type=\"textarea\"\r\n                                                                    rows={10}\r\n                                                                    placeholder=\"Page Content\"\r\n                                                                    value={this.state.content}\r\n                                                                    onChange={(e) => this.handleContent(e.target.value)}\r\n                                                                /> */}\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.contract_title}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Button\r\n                                                            color=\"info\"\r\n                                                            className=\"btn btn-info mr-2\"\r\n                                                            onClick={() => this.onSubmitHandler()}\r\n                                                        >Update</Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\AddProperty.js",["765","766","767","768","769","770","771","772","773","774"],"import React, { Component } from 'react'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../components/constants/common';\r\nimport { Spinner, TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Alert } from 'reactstrap'\r\nimport classnames from 'classnames';\r\nimport PropertyInfo from './PropertyInfo';\r\nimport Address from './Address'\r\nimport Features from './Features'\r\nimport Gallery from './Gallery';\r\nimport { Redirect } from 'react-router-dom'\r\nimport PropertyMap from './Map'\r\n// import { Helmet } from \"react-helmet\";\r\nexport default class AddProperty extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            local_p_id: \"\",\r\n            isLoading: false,\r\n            activeTab: '1',\r\n            p_id: \"\",\r\n            scsMsg: \"\",\r\n            errMsg: \"\",\r\n            assigned: false,\r\n            reviewCancel: false,\r\n            PropertyList:null,\r\n            resend_id: \"\",\r\n            stickyheader: false,\r\n            Loader:false,\r\n            activeSide:false\r\n        }\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    handleActiveTab(tab) {\r\n        window.scrollTo(0, 0);\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n\r\n    getPropertyId(e) {\r\n        this.setState({\r\n            p_id: e\r\n        })\r\n    }\r\n\r\n    getPropertyInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            formData.append('id', this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id);\r\n            var token = this.state.token\r\n\r\n            axios\r\n                .post(APIURL + \"seller/property-edit\", formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        Loader:false,\r\n                        name: response.data.data.name,\r\n                        userInfo: {\r\n                            name: info.name,\r\n                            email: info.email,\r\n                            phone: info.phone,\r\n                            address: info.address,\r\n                            introduction: info.introduction,\r\n                            license_number: info.license_number\r\n                        },\r\n                        profile_image: response.data.data.profile_image,\r\n                        // email: response.data.data.email,\r\n                        Lang_id: response.data.data.language,\r\n                        countryId: response.data.data.country,\r\n                        language: response.data.data.language,\r\n                        state: response.data.data.state\r\n                    })\r\n                    this.handleCountryState(this.state.countryId)\r\n                    console.log(\"sssssssss\", this.state.language)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    FormCompletionCheck = () => {\r\n        const { user } = this.state\r\n        var token = this.state.token;\r\n        const formData = new FormData();\r\n        formData.append('property_id', this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id);\r\n\r\n        const option = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            }\r\n        };\r\n        this.setState({Loader:true})\r\n        axios\r\n            .post(APIURL + \"seller/check-property-data-sufficiency\", formData, option)\r\n            .then(result => {\r\n                if(result.data.data === true){\r\n                  this.SubmitReview()\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader:false\r\n                })\r\n            }\r\n            );\r\n    }\r\n\r\n    SubmitReview = () => {\r\n        const { user } = this.state\r\n        var token = this.state.token;\r\n        const formData = new FormData();\r\n        formData.append('property_id', this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id);\r\n\r\n        const option = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            }\r\n        };\r\n        this.setState({Loader:true})\r\n        axios\r\n            .post(APIURL + \"seller/assign-property-after-submit\", formData, option)\r\n            .then(result => {\r\n                this.setState({\r\n                    scsMsg: result.data.message,\r\n                    assigned: result.data.propertyAssigned,\r\n                    Loader:false\r\n                })\r\n                setTimeout(() => this.setState({ scsMsg: \"\", }), 4000);\r\n                setTimeout(() => this.setState({ reviewCancel: true, }), 5000);\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(\"err\", error.response.data.error)\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader:false\r\n                })\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 4000);\r\n            }\r\n            );\r\n    }\r\n    goToPropertyList() {\r\n        this.setState({\r\n            reviewCancel: true\r\n        })\r\n    }\r\n    getPropertyList() {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('property_id', this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id);\r\n\r\n        axios\r\n            .get(APIURL + \"seller/resend-property-edit\", {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    PropertyList: response.data.data\r\n                })\r\n            })\r\n    }\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 50) {\r\n          this.setState({\r\n            stickyheader:true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                stickyheader:false\r\n              })\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getPropertyList()\r\n        window.addEventListener('scroll', this.listenScrollEvent)\r\n    }\r\n    render() {\r\n        const property_id = this.props.match.params.id\r\n        console.log(this.props)\r\n        if (this.state.reviewCancel) {\r\n            return <Redirect to=\"/seller/property\" push={true} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller \">\r\n                    <Navbar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}/>\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}/>\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div  className={this.state.stickyheader ? \"mb-4 d-flex justify-content-between sticky-header\" : \"mb-4 d-flex justify-content-between\"} >\r\n                                    <h4 className=\"text-uppercase\">Property </h4>\r\n                                        <div>\r\n                                            {this.state.PropertyList!=null && this.state.PropertyList.resend_property === \"resend\" ?\r\n                                                <div className=\"\">\r\n                                                    <Button onClick={() => this.goToPropertyList()} className=\"mr-2 btn-sm px-4 btn-rounded\">Cancel</Button>\r\n                                                    <Button onClick={() => this.FormCompletionCheck()} className=\"btn-sm px-4 btn-rounded\">Resend For Review  </Button>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"\">\r\n                                                    <Button onClick={() => this.goToPropertyList()} className=\"mr-2 btn-sm px-4 btn-rounded\">Cancel</Button>\r\n                                                    <Button onClick={() => this.FormCompletionCheck()} color=\"info\" className=\"btn-sm px-4 btn-rounded\">Submit For Review  </Button>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                </div>\r\n                                {this.state.scsMsg ?\r\n                                    <div className=\"alert alert-success mb-4\" role=\"alert\">\r\n                                        {this.state.scsMsg}\r\n                                    </div>\r\n                                    : \"\"}\r\n                                {this.state.errMsg.message ?\r\n                                    <div className=\"alert alert-danger mb-4\" role=\"alert\">\r\n                                        {this.state.errMsg.message}\r\n                                    </div>\r\n                                    : \"\"}\r\n                                <div className=\"\">\r\n                                    <Nav tabs style={{ padding: \"0px\" }}>\r\n                                        <NavItem >\r\n                                            <NavLink\r\n                                                style={{ color: \"black\", cursor: \"pointer\", }}\r\n                                                className={classnames({ active: this.state.activeTab === '1' })}\r\n                                                onClick={() => { this.handleActiveTab('1'); }}\r\n                                            >\r\n                                                Property Info\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                style={{ color: \"black\", cursor: \"pointer\", }}\r\n                                                className={classnames({ active: this.state.activeTab === '2' })}\r\n                                                onClick={() => { this.handleActiveTab('2'); }}\r\n                                            >\r\n                                                Address\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                style={{ color: \"black\", cursor: \"pointer\", }}\r\n                                                className={classnames({ active: this.state.activeTab === '3' })}\r\n                                                onClick={() => { this.handleActiveTab('3'); }}\r\n                                            >\r\n                                                Features\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        {/* <NavItem>\r\n                                            <NavLink\r\n                                                style={{ color: \"black\", cursor: \"pointer\", }}\r\n                                                className={classnames({ active: this.state.activeTab === '4' })}\r\n                                                onClick={() => { this.handleActiveTab('4'); }}\r\n                                            >\r\n                                                Map\r\n                                            </NavLink>\r\n                                        </NavItem> */}\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                style={{ color: \"black\", cursor: \"pointer\" }}\r\n                                                className={classnames({ active: this.state.activeTab === '4' })}\r\n                                                onClick={() => { this.handleActiveTab('4'); }}\r\n                                            >\r\n                                                Gallery\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n\r\n                                    </Nav>\r\n                                </div>    \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin\">\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div>\r\n                                                    \r\n                                                    <TabContent activeTab={this.state.activeTab}>\r\n                                                        <TabPane tabId=\"1\">\r\n                                                            <PropertyInfo\r\n                                                                data={{\r\n                                                                    property_id: this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id,\r\n                                                                    handleActiveTab: this.handleActiveTab.bind(this),\r\n                                                                    // handleCompleteTab: this.handleCompleteTab.bind(this)\r\n                                                                }}\r\n                                                            />\r\n                                                        </TabPane>\r\n                                                        <TabPane tabId=\"2\">\r\n                                                            <Address\r\n                                                                data={{\r\n                                                                    property_id: this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id,\r\n                                                                    handleActiveTab: this.handleActiveTab.bind(this),\r\n                                                                    // handleCompleteTab: this.handleCompleteTab.bind(this)\r\n                                                                }} />\r\n                                                        </TabPane>\r\n                                                        <TabPane tabId=\"3\">\r\n                                                            <Features\r\n                                                                data={{\r\n                                                                    property_id: this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id,\r\n                                                                    handleActiveTab: this.handleActiveTab.bind(this),\r\n                                                                    // handleCompleteTab: this.handleCompleteTab.bind(this)\r\n                                                                }} />\r\n                                                        </TabPane>\r\n                                                        {/* <TabPane tabId=\"4\">\r\n                                                            <PropertyMap\r\n                                                                data={{\r\n                                                                    property_id: this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id,\r\n                                                                    handleActiveTab: this.handleActiveTab.bind(this),\r\n                                                                    // handleCompleteTab: this.handleCompleteTab.bind(this)\r\n                                                                }} />\r\n                                                        </TabPane> */}\r\n                                                        <TabPane tabId=\"4\">\r\n                                                            <Gallery\r\n                                                                data={{\r\n                                                                    property_id: this.props.match.params.id ? this.props.match.params.id : this.state.local_p_id,\r\n                                                                    handleActiveTab: this.handleActiveTab.bind(this),\r\n                                                                    // handleCompleteTab: this.handleCompleteTab.bind(this)\r\n                                                                }} />\r\n                                                        </TabPane>\r\n                                                    </TabContent>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                    \r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\PropertyList.js",["775","776"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            PropertyList: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"under_review\", \"label\": \"Under Review\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"unverify\", \"label\": \"Not Verified\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPropertyList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPropertyList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n   \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getPropertyList()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getPropertyList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getPropertyList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getPropertyList() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"seller/get-properties\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"seller/get-properties\", response.data.data.data)\r\n                this.setState({\r\n                    PropertyList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    AddpropertyModal:false\r\n                }, () => {\r\n                    this.notify(this.state.scsMsg)\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            redirect:true,\r\n                            \r\n                        })\r\n                    }, 5000);\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    AddpropertyModal() {\r\n        this.setState({\r\n            AddpropertyModal: !this.state.AddpropertyModal,\r\n            errMsg: \"\"\r\n        })\r\n    }\r\n    // AddpropertyModal close\r\n    ModalClose() {\r\n        this.setState({\r\n            AddpropertyModal: false\r\n        })\r\n    }\r\n\r\n    notify = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\"\r\n        })\r\n\r\n    componentDidMount() {\r\n        this.getPropertyList()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Seller\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirect) {\r\n            return <Redirect to={\"/seller/edit-property/\" + this.state.property_id} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                {this.state.Loader ? <div className=\"loader\" style={{backgroundColor:\"\"}}> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}/>\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                        activePage=\"property_list\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">PROPERTY</h4>\r\n                                    <Button onClick={() => this.AddpropertyModal()} color=\"info\" className=\"px-3 btn-sm\">Add Property</Button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"seller_name\")}> Assigned To</th>\r\n                                                                <th> Status </th>\r\n                                                                <th > Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.PropertyList.length > 0 ?\r\n                                                                this.state.PropertyList.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.name}\r\n                                                                        </td>\r\n\r\n                                                                        <td>\r\n                                                                            {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {item.assigned_to ? item.assigned_to : <span className=\"text-secondary\">Not Submitted For Review</span>}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {\r\n                                                                                item.propertyAssignedStatus === \"accept\" && item.propertyVerifiedStatus === \"verify\" ?\r\n                                                                                    <label className=\"badge badge-success \">Verified</label>\r\n                                                                                    :\r\n                                                                                    item.resend_property === \"resend\" ? <label className=\"badge badge-primary\">Under Review</label> :\r\n                                                                                        item.propertyAssignedStatus === \"accept\" && item.propertyVerifiedStatus === \"unverify\" ?\r\n                                                                                            <label className=\"badge badge-danger \">Not Verified</label>\r\n                                                                                            :\r\n                                                                                            item.propertyAssignedStatus === \"accept\" ?\r\n                                                                                                <label className=\"badge badge-success\"> Accepted</label>\r\n                                                                                                :\r\n\r\n                                                                                                item.propertyAssigned ?\r\n                                                                                                    <label className=\"badge badge-primary\">Under Review</label> :\r\n                                                                                                    <div>\r\n                                                                                                        <label className=\"badge badge-warning\">Pending</label>\r\n                                                                                                    </div>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {\r\n                                                                                item.resend_property === \"resend\" ? <Button disabled className=\"btn btn-info btn-rounded btn-sm px-3\" > Edit </Button> :\r\n\r\n                                                                                    item.propertyAssignedStatus === \"accept\" && item.propertyVerifiedStatus === \"unverify\" ?\r\n                                                                                        <Link to={\"/seller/edit-property/\" + item.id} className=\"btn btn-info btn-rounded px-3 btn-sm\">Edit</Link>\r\n                                                                                        :\r\n                                                                                        item.propertyAssigned ?\r\n                                                                                            <Button disabled className=\"btn btn-info btn-rounded btn-sm px-3\" > Edit </Button>\r\n                                                                                            :\r\n                                                                                            <div>\r\n                                                                                                <Link to={\"/seller/edit-property/\" + item.id} className=\"btn btn-info px-3 btn-rounded btn-sm\"> Edit </Link>\r\n                                                                                            </div>\r\n                                                                            }\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.AddpropertyModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                    <ModalHeader toggle={() => this.ModalClose()}>Add Property</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control \"\r\n                                        placeholder=\"Property Name\"\r\n                                        value={this.state.propertyName}\r\n                                        onChange={(e) => this.handlechange(e.target.value)}\r\n                                        autoFocus={true}\r\n                                    />\r\n                                    {this.state.errMsg ? <span className=\"text-danger\">{this.state.errMsg.name}</span> : \"\"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* {this.state.scsMsg ?\r\n                            <span className=\"text-success\">\r\n                                {this.state.scsMsg}<br />\r\n                            </span>\r\n                            : \"\"} */}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"d-flex justify-content-between w-100\">\r\n                            <Button color=\"success\" onClick={() => this.SubmitProperty()}> <i className=\"fas fa-save mr-1\"> </i>Submit</Button>\r\n                            <Button color=\"danger\" onClick={() => this.ModalClose()}> <i className=\"fas fa-window-close mr-1\"></i>Cancel </Button>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Enquiry.js",["777","778","779","780"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport Navbar from './Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport dateFormat, { masks } from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            enquiryInfoModal: false,\r\n            EnquiryList: [],\r\n            EnquiryInfo: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"reject\", \"label\": \"Rejected\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            errMsg: {},\r\n            enquiryComment: \"\",\r\n            activeSide: false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    handlEnquiryComment = (e) => {\r\n        this.setState({\r\n            enquiryComment: e\r\n        })\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getEnquiryList()\r\n                }, 300);\r\n            });\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide: value\r\n        })\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getEnquiryList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getEnquiryList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getEnquiryList() {\r\n        this.setState({ Loader: true })\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"seller/get-tour-enquiry-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"seller/get-tour-enquiry-list\", response.data.data.data)\r\n                this.setState({\r\n                    EnquiryList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader: false\r\n                })\r\n            })\r\n    }\r\n    getEnquiryinfo = (e) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', e);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"view-enquiry-detail\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n\r\n                this.setState({\r\n                    Loader: false,\r\n                    EnquiryInfo: response.data.data,\r\n                });\r\n                console.log(this.state.columnName)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    // errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    // redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    enquiryInfoModal(e) {\r\n        this.setState({\r\n            enquiryInfoModal: !this.state.enquiryInfoModal\r\n        }, () => {\r\n            this.getEnquiryinfo(e.id,)\r\n        })\r\n    }\r\n    ModalClose() {\r\n        this.setState({\r\n            enquiryInfoModal: false\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = (enquiry_id, status) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', enquiry_id);\r\n        formData.append('status', status);\r\n        formData.append('enquiry_comment', this.state.enquiryComment);\r\n        axios\r\n            .post(APIURL + \"update-enquiry-status\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    enquiryInfoModal: false\r\n                })\r\n                this.getEnquiryList()\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    Visible: false\r\n                })\r\n            });\r\n        this.getEnquiryList()\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getEnquiryList()\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar\r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide} />\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar\r\n                            sideMenu={this.sideMenu.bind(this)}\r\n                            activeSide={this.state.activeSide}\r\n                            activePage=\"Enquiry\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Take A Tour Enquiry</h4>\r\n                                    {/* <Button onClick={() => this.enquiryInfoModal()} color=\"info\" className=\"px-3 btn-sm\">Add Property</Button> */}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"buyer_name\")} > Buyer Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")}> Created Date</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"enquiry_date\")}> Enquiry Date</th>\r\n                                                                <th className=\"text-center\"> Status </th>\r\n                                                                <th className=\"text-center\"> Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n\r\n                                                            {this.state.EnquiryList.length > 0 ?\r\n                                                                this.state.EnquiryList.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.property.name}\r\n                                                                        </td>\r\n\r\n                                                                        <td>\r\n                                                                            {item.name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {dateFormat(item.created_at, 'dd-mm-yyyy')}\r\n\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {dateFormat(item.date_of_enquiry, 'dd-mm-yyyy')}\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            {item.status === \"accept\" ?\r\n                                                                                <label className=\"badge badge-success\"> Accepted</label>\r\n                                                                                :\r\n                                                                                item.status === \"reject\" ?\r\n                                                                                    <label className=\"badge badge-danger \">Rejected</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-warning \">Pending</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            {/* <Button className=\"btn btn-dark btn-rounded px-3 btn-sm\">Confirm</Button> */}\r\n                                                                            <Button\r\n                                                                                className=\"btn btn-info btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                onClick={(e) => this.enquiryInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.enquiryInfoModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                    <ModalHeader toggle={() => this.ModalClose()}>Enquiry Details</ModalHeader>\r\n                    <ModalBody>\r\n                        {\r\n                            this.state.EnquiryInfo !== \"\" ?\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Name</label>\r\n                                        <p>{this.state.EnquiryInfo.name}</p>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Enquiry Date</label>\r\n                                        <p>{dateFormat(this.state.EnquiryInfo.date_of_enquiry, 'dd-mm-yyyy')}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Email</label>\r\n                                        <p className='text-break'>{this.state.EnquiryInfo.email}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Enquiry Time</label>\r\n                                        <p>{this.state.EnquiryInfo.time_of_enquiry}</p>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Phone Number</label>\r\n                                        <p>{this.state.EnquiryInfo.contact}</p>\r\n                                    </div>\r\n                                    <div className=\"col-12 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{this.state.EnquiryInfo.status === \"accept\" ? \"Accepted\" : this.state.EnquiryInfo.status === \"reject\" ? \"Rejected\" : \"Pending\"}</p>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <label className=\"fw-bold\">Message</label>\r\n                                        <p>{this.state.EnquiryInfo.message}</p>\r\n                                    </div>\r\n                                    {this.state.EnquiryInfo.enquiry_comment ?\r\n                                        <div className=\"col-12\">\r\n                                            <label className=\"fw-bold\">Comment</label>\r\n                                            <p>{this.state.EnquiryInfo.enquiry_comment}</p>\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    {this.state.EnquiryInfo.status === null ?\r\n                                        <div className=\"col-12\">\r\n                                            <label className=\"fw-bold\">Comment</label>\r\n                                            <p>\r\n                                                <textarea\r\n                                                    rows=\"4\"\r\n                                                    className=\"form-control\"\r\n                                                    required=\"\"\r\n                                                    type=\"number\"\r\n                                                    name=\"streetNumber\"\r\n                                                    placeholder=\"Comment\"\r\n                                                    value={this.state.enquiryComment}\r\n                                                    onChange={(e) => this.handlEnquiryComment(e.target.value)}\r\n                                                />\r\n                                            </p>\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div>\r\n                                : \"NO Data Available\"\r\n                        }\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        {this.state.EnquiryInfo.status === null ?\r\n                            <div className=\"d-flex justify-content-between w-100\">\r\n                                <Button color=\"success\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"accept\")} >Accept</Button>\r\n                                <Button color=\"danger\" onClick={(e) => this.onSubmitHandler(this.state.EnquiryInfo.id, \"reject\")}  >Reject</Button>\r\n                            </div>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\ChangePassword.js",["781","782"],"import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Sidebar from './Sidebar'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport { Button ,Spinner } from 'reactstrap'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport default class Index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: localStorage.getItem(\"user_type\"),\r\n            navigate: false,\r\n            userInfo: {\r\n                current_password: \"\",\r\n                password: \"\",\r\n                confirm_password: \"\",\r\n            },\r\n            errMsg: \"\",\r\n            scsMsg: \"\",\r\n            currShowPassword: false,\r\n            newShowPassword: false,\r\n            confirmShowPassword: false,\r\n            Loader:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0,0);\r\n        setTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n\r\n    currShowPassword() {\r\n        this.setState({\r\n            currShowPassword: !this.state.currShowPassword\r\n        })\r\n    }\r\n    newShowPassword() {\r\n        this.setState({\r\n            newShowPassword: !this.state.newShowPassword\r\n        })\r\n    }\r\n    confirmShowPassword() {\r\n        this.setState({\r\n            confirmShowPassword: !this.state.confirmShowPassword\r\n        })\r\n    }\r\n\r\n    //form handler\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({ userInfo });\r\n        console.log(userInfo)\r\n    };\r\n\r\n\r\n    onLogoutHandler = () => {\r\n\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n    };\r\n\r\n    onSubmitHandler = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        userInfo['email'] = user.email;\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"change-password/update\", this.state.userInfo, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false  })\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                })\r\n                setTimeout(()=>{\r\n                    window.location.reload();\r\n                }, 3000);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n                setTimeout(()=>{\r\n                    window.location.reload();\r\n                }, 3000);\r\n            });\r\n    };\r\n    toggle(){\r\n        this.setState({\r\n            toggle:!this.state.toggle\r\n        })\r\n    }\r\n\r\n    toggleFunChild(value){\r\n        this.setState({\r\n            toggle:value\r\n        })\r\n    }\r\n    render() {\r\n         if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        return (\r\n            <>\r\n               <div className=\"resido-front\">\r\n               {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n              <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar \r\n                                            activePage=\"changepassword\"  \r\n                                            toggleFunChild={this.toggleFunChild.bind(this)}\r\n                                            toggle={this.state.toggle}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n\r\n                                                <div className=\"form-submit\">\r\n                                                    <h4>Change Password</h4>\r\n                                                    {this.state.scsMsg ? <div className=\"alert alert-success\" role=\"alert\"> {this.state.scsMsg} </div> : \"\"}\r\n                                                    {/* messgae err */}\r\n                                                    {this.state.errMsg.message ? <div className=\"alert alert-danger\" role=\"alert\">  {this.state.errMsg.message}   </div> : \"\"}\r\n                                                    <div className=\"submit-section mt-3\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 col-md-6\" >\r\n                                                                <div className=\"form-group col-lg-12 col-md-12\">\r\n                                                                    <label>Current Password</label>\r\n                                                                    <div className=\"position-relative\">\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            required=\"\"\r\n                                                                            type={this.state.currShowPassword ? \"text\" : \"password\"}\r\n                                                                            name=\"current_password\"\r\n                                                                            placeholder=\"Current Password\"\r\n                                                                            value={this.state.current_password}\r\n                                                                            onChange={this.onChangehandler}\r\n                                                                        />\r\n                                                                        {this.state.currShowPassword ?\r\n                                                                            <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.currShowPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                            :\r\n                                                                            <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.currShowPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.current_password}</span>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group col-lg-12 col-md-12\">\r\n                                                                    <label>New Password</label>\r\n                                                                    <div className=\"position-relative\">\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            required=\"\"\r\n                                                                            type={this.state.newShowPassword ? \"text\" : \"password\"}\r\n                                                                            name=\"password\"\r\n                                                                            placeholder=\"New Password\"\r\n                                                                            value={this.state.password}\r\n                                                                            onChange={this.onChangehandler}\r\n                                                                        />\r\n                                                                        {this.state.newShowPassword ?\r\n                                                                            <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.newShowPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                            :\r\n                                                                            <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.newShowPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.password}</span>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group col-lg-12 col-md-12\">\r\n                                                                    <label>Confirm Password</label>\r\n                                                                    <div className=\"position-relative\">\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            required=\"\"\r\n                                                                            type={this.state.confirmShowPassword ? \"text\" : \"password\"}\r\n                                                                            name=\"confirm_password\"\r\n                                                                            placeholder=\"Confirm Password\"\r\n                                                                            value={this.state.confirm_password}\r\n                                                                            onChange={this.onChangehandler}\r\n                                                                        />\r\n                                                                        {this.state.confirmShowPassword ?\r\n                                                                            <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.confirmShowPassword()} className=\"fas fa-eye-slash\"></i> </span>\r\n                                                                            :\r\n                                                                            <span className=\"ad-fa-eye-pass\"> <i onClick={() => this.confirmShowPassword()} className=\"fas fa-eye\"></i> </span>\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.confirm_password}</span>\r\n\r\n                                                                </div>\r\n                                                                <div className=\" col-lg-12 col-md-12\">\r\n                                                                    <Button\r\n                                                                        color=\"primary\"\r\n                                                                        className=\"btn btn-theme-light-2 rounded\"\r\n                                                                        onClick={() => this.onSubmitHandler()}\r\n                                                                    >Save Changes</Button>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\ContractForms\\agentSellerContract.js",["783","784","785","786","787"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class contractList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            contract: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            urlDoc: \"\",\r\n            Loader: false,\r\n            contractId:\"\",\r\n            contractInfoModal: false,\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getcontract()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getcontract()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getcontract()\r\n                }, 300);\r\n            });\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getcontract() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getcontract()\r\n            }\r\n        );\r\n    }\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getcontract() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"get-contract-list-for-user\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                    contract: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    onSubmitHandler = (e) => {\r\n\r\n        var token = this.state.token\r\n\r\n        const formData = new FormData();\r\n        formData.append('contract_id', e.id);\r\n\r\n        this.setState({ Loader: true, agentInfoModal: false });\r\n        axios\r\n            .post(APIURL + \"seller/contract-sign-by-seller\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false })\r\n                console.log(\"seller/contract-sign-by-seller\", response.data)\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n        //first API\r\n        \r\n        axios\r\n            .get(APIURL + \"connect-docusign\", {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"connect-docusign\", response.data.data)\r\n                this.setState({\r\n                    urlDoc: response.data.data,\r\n                    Loader: false\r\n                })\r\n                window.open(this.state.urlDoc);\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    Loader: false\r\n                })\r\n            })\r\n\r\n        //Second APi \r\n\r\n        // axios\r\n        //     .get(APIURL + \"docusign/callback\", {\r\n        //         headers: {\r\n        //             'Authorization': `Bearer ${token}`\r\n        //         }\r\n        //     })\r\n        //     .then((response) => {\r\n        //         console.log(\"docusign/callback\", response.data.data)\r\n        //         this.setState({\r\n        //             Loader: false\r\n        //         })\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({\r\n        //             Loader: false\r\n        //         })\r\n        //     })\r\n\r\n        // third post Api\r\n\r\n       \r\n    };\r\n    \r\n    contractInfoModal(e) {\r\n        this.setState({\r\n            contractInfoModal: true,\r\n            contractId:e.id\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            contractInfoModal: false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getcontract()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Seller\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirect) {\r\n            return <Redirect to={\"/seller/edit-property/\" + this.state.property_id} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}/>\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar sideMenu={this.sideMenu.bind(this)}\r\n                       activeSide={this.state.activeSide}\r\n                        activePage=\"AgentSellerContract\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Agent Seller contract</h4>\r\n                                    {/* <Button onClick={() => this.AddpropertyModal()} color=\"info\" className=\"px-3 btn-sm\">New Property</Button> */}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"contract_title\")}>Contract Title</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                <th className=\"\"  > Document</th>\r\n                                                                <th className=\"\"  > Status</th>\r\n                                                                <th className=\"text-center\"> Action</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.contract.length > 0 ?\r\n                                                                this.state.contract.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.contract_title}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {item.property_name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            <a href={item.document_url}>{item.file_name}</a>\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === null ?\r\n                                                                                    <label color='danger' className=\"badge btn-danger\"> Not Signed</label>\r\n                                                                                    :\r\n                                                                                    <label color='success' className=\"badge btn-danger\"> Signed</label>\r\n\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {/* <Button className=\"btn btn-info btn-rounded px-3 btn-sm mr-1\" onClick={(e) => this.onSubmitHandler(item)} >Action</Button> */}\r\n                                                                            <Button className=\"btn btn-info btn-rounded px-3 btn-sm ml-1\" onClick={(e) => this.contractInfoModal(item)} >View</Button>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.contractInfoModal} toggle={() => this.ModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.contract.length > 0 &&\r\n                            this.state.contract.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p> {\r\n                                            item.status === null ?\r\n                                                \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\MyProfile.js",["788","789","790","791"],"import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Sidebar from './Sidebar'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport { Button, Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { Redirect } from 'react-router'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Loader: false,\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            userInfo: {\r\n                name: \"\",\r\n                LastName: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                state: \"\",\r\n                language: \"\",\r\n                stateId: \"\",\r\n                image: \"\",\r\n                address: \"\",\r\n                streetName: \"\",\r\n                streetNumber: \"\",\r\n                City: \"\",\r\n                Zip: \"\",\r\n            },\r\n            phone: \"\",\r\n            countryId: \"\",\r\n            countries_name: [],\r\n            countrySelected: {},\r\n            languages: [],\r\n            Countries: [],\r\n            States: [],\r\n            state_name: [],\r\n            state: \"\",\r\n            name: \"\",\r\n            LastName: \"\",\r\n            image: \"\",\r\n            selectType: \"\",\r\n            msg: \"\",\r\n            errMsg: {},\r\n            scsMsg: \"\",\r\n            country_id: \"\",\r\n            selectedLanguages: [],\r\n            Loader: true,\r\n            toggle: false\r\n        }\r\n        this.handlephone = this.handlephone.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getProfileInfo()\r\n        this.getCountries()\r\n        this.getLanguages()\r\n        setTimeout(() => {\r\n            this.setState({\r\n                Loader: false\r\n            })\r\n        }, 500);\r\n    }\r\n\r\n    //form handler\r\n\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({ userInfo });\r\n        console.log(userInfo)\r\n    };\r\n\r\n\r\n    //profile information\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"buyer/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    let list = response.data.data.language_data;\r\n                    let selectedLanguages = []\r\n                    for (var c = 0; c < list.length; c++) {\r\n                        selectedLanguages.push({ \"value\": list[c].value, \"label\": list[c].label })\r\n                    }\r\n                    this.setState({\r\n                        selectedLanguages: selectedLanguages\r\n                    })\r\n                    this.setState({\r\n                        name: response.data.data.name,\r\n\r\n                        userInfo: {\r\n                            name: info.name,\r\n                            LastName: info.last_name,\r\n                            email: info.email,\r\n                            phone: info.phone,\r\n                            streetNumber: info.street_number === \"null\" ? \"\" : info.street_number,\r\n                            streetName: info.street_name === \"null\" ? \"\" : info.street_name,\r\n                            City: info.city === \"null\" ? \"\" : info.city,\r\n                            Zip: info.zip_code === \"null\" ? \"\" : info.zip_code,\r\n                            // address: info.address,\r\n                            introduction: info.introduction,\r\n                            license_number: info.license_number\r\n                        },\r\n                        phone: info.phone,\r\n                        profile_image: response.data.data.profile_image,\r\n                        Lang_id: response.data.data.language,\r\n                        countryId: response.data.data.country,\r\n                        language: response.data.data.language,\r\n                        state: response.data.data.state\r\n                    })\r\n                    this.handleCountryState(this.state.countryId)\r\n                    console.log(\"sssssssss\", this.state.language)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    //    get languages\r\n\r\n    getLanguages() {\r\n        axios\r\n            .get(APIURL + \"languages\")\r\n            .then((response) => {\r\n                let languages = response.data.languages;\r\n                for (var c = 0; c < languages.length; c++) {\r\n                    this.state.languages.push({ value: languages[c].id, label: languages[c].name })\r\n                }\r\n                // this.setState({\r\n                //     languages: response.data.languages\r\n                // })\r\n\r\n                console.log(this.state.languages)\r\n            })\r\n    }\r\n\r\n    handleLanguages = (selectedLanguages) => {\r\n        this.setState({ selectedLanguages });\r\n    }\r\n\r\n    getCountries() {\r\n        axios\r\n            .get(APIURL + \"countries\")\r\n            .then((response) => {\r\n                let countries_name = response.data.countries;\r\n                const CountryNames = [];\r\n                for (var c = 1; c < countries_name.length; c++) {\r\n                    CountryNames.push({ value: countries_name[c].id, label: countries_name[c].name })\r\n                }\r\n                this.setState({\r\n                    Countries: CountryNames,\r\n                })\r\n                console.log(this.state.Countries)\r\n            })\r\n    }\r\n\r\n    handleCountry(e) {\r\n        this.setState({\r\n            countryId: e\r\n        }, () => {\r\n            console.log(this.state.countryId)\r\n            this.handleCountryState(e)\r\n        })\r\n    };\r\n\r\n    // get states\r\n    handleCountryState = (id) => {\r\n        axios\r\n            .post(APIURL + \"states\", {\r\n                country_id: id,\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                let state_name = response.data.states;\r\n                const stateNames = [];\r\n                for (var c = 0; c < state_name.length; c++) {\r\n                    stateNames.push({ value: state_name[c].id, label: state_name[c].name })\r\n                }\r\n                this.setState({\r\n                    States: stateNames,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n\r\n                })\r\n            });\r\n    };\r\n\r\n    // handle states\r\n    handleState(e) {\r\n        this.setState({\r\n            state: e\r\n        })\r\n    }\r\n    //profile image change handler\r\n    handleChangeLogo = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n        console.log(this.state.image)\r\n    }\r\n\r\n    handlephone(e) {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.setState({ phone: e.target.value })\r\n        }\r\n    }\r\n\r\n    //    update  profile submit handler\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        this.setState({ Loader: true })\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.userInfo.name);\r\n        formData.append('last_name', this.state.userInfo.LastName);\r\n        formData.append('phone', this.state.phone);\r\n        formData.append('email', this.state.userInfo.email);\r\n        formData.append('state', this.state.state);\r\n        formData.append('country', this.state.countryId);\r\n        formData.append('profile_image', this.state.image);\r\n        formData.append('language', JSON.stringify(this.state.selectedLanguages));\r\n        formData.append('street_number', this.state.userInfo.streetNumber);\r\n        formData.append('street_name', this.state.userInfo.streetName);\r\n        formData.append('city', this.state.userInfo.City);\r\n        formData.append('zip_code', this.state.userInfo.Zip);\r\n        formData.append('license_number', this.state.userInfo.license_number);\r\n        formData.append('introduction', this.state.userInfo.introduction);\r\n        formData.append('id', user.id);\r\n        formData.append('user_type', user.user_type);\r\n        axios\r\n            .post(APIURL + \"buyer/update-profile\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    errMsg: {},\r\n                    Loader: false\r\n                }, () => {\r\n                    this.UpdateSuccessfully(this.state.scsMsg)\r\n                })\r\n                this.getProfileInfo()\r\n                setTimeout(() => {\r\n                    this.setState({ scsMsg: \"\" })\r\n                    // window.location.reload();\r\n                }, 2000);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"errr\", error.response.data.error)\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\"\r\n    })\r\n    toggle() {\r\n        this.setState({\r\n            toggle: !this.state.toggle\r\n        })\r\n    }\r\n    toggleFunChild(value) {\r\n        this.setState({\r\n            toggle: value\r\n        })\r\n    }\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Buyer\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"resido-front\">\r\n                    <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={3000}\r\n                        hideProgressBar={true}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar data={{ profile_image: this.state.profile_image }} />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar\r\n                                                activePage=\"profile\"\r\n                                                toggleFunChild={this.toggleFunChild.bind(this)}\r\n                                                toggle={this.state.toggle}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n                                                <div className=\"form-submit\">\r\n                                                    <h4>My Profile</h4>\r\n                                                    <div className=\"submit-section\">\r\n                                                        <div className=\"row\">\r\n\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label> First Name <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"First Name\"\r\n                                                                    value={this.state.userInfo.name}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.name}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label> Surname <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"LastName\"\r\n                                                                    placeholder=\"Surname\"\r\n                                                                    value={this.state.userInfo.LastName}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.last_name}</span>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Email Address <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    disabled\r\n                                                                    type=\"email\"\r\n                                                                    name=\"email\"\r\n                                                                    placeholder=\"Email Address\"\r\n                                                                    value={this.state.userInfo.email}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.email}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Profile Image</label>\r\n                                                                <input\r\n                                                                    type=\"file\"\r\n                                                                    onChange={this.handleChangeLogo}\r\n                                                                    className=\"form-control\"\r\n                                                                    id=\"fileinput\"\r\n                                                                    style={{ lineHeight: \"2.1\" }}\r\n\r\n                                                                />\r\n                                                                <span style={{ color: \"#485d94\" }}> (Only png, jpg, jpeg format and size upto 2 MB is allowed)</span><br />\r\n\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.profile_image}</span>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Language</label>\r\n                                                                <Select\r\n                                                                    isMulti\r\n                                                                    placeholder=\"Select Language\"\r\n                                                                    value={this.state.selectedLanguages}\r\n                                                                    onChange={this.handleLanguages}\r\n                                                                    options={this.state.languages}\r\n                                                                />\r\n                                                                {/* <select className=\"form-control\" autoFocus={true} value={this.state.Lang_id} onChange={(e) => this.handleLanguages(e.target.value)} >\r\n                                                                    <option value=\"\">Select</option>\r\n                                                                        {this.state.Languages.map((option) => (\r\n                                                                            <option value={option.value}>{option.label}</option>\r\n                                                                        ))}\r\n                                                                    </select> */}\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.language}</span>                                                    </div>\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Country</label>\r\n                                                                <select className=\"form-control\" autoFocus={true} value={this.state.countryId} onChange={(e) => this.handleCountry(e.target.value)} >\r\n                                                                    <option value=\"\">Select-Country</option>\r\n                                                                    {this.state.Countries.map((option) => (\r\n                                                                        <option value={option.value}>{option.label}</option>\r\n                                                                    ))}\r\n                                                                </select>\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.country}</span>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>State</label>\r\n                                                                <select className=\"form-control\" autoFocus={true} value={this.state.state} onChange={(e) => this.handleState(e.target.value)} >\r\n                                                                    <option value=\"\" >Select-State</option>\r\n                                                                    {this.state.States.map((option) => (\r\n                                                                        <option value={option.value}>{option.label}</option>\r\n                                                                    ))}\r\n                                                                </select>\r\n\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.state}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>City</label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"City\"\r\n                                                                    placeholder=\"City\"\r\n                                                                    value={this.state.userInfo.City}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.city}</span>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Street Number</label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"number\"\r\n                                                                    name=\"streetNumber\"\r\n                                                                    placeholder=\"Street Number\"\r\n                                                                    value={this.state.userInfo.streetNumber}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.street_number}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Street Name</label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"streetName\"\r\n                                                                    placeholder=\"Street Name\"\r\n                                                                    value={this.state.userInfo.streetName}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.street_number}</span>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Zip</label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"number\"\r\n                                                                    name=\"Zip\"\r\n                                                                    placeholder=\"Zip\"\r\n                                                                    value={this.state.userInfo.Zip}\r\n                                                                    onChange={this.onChangehandler}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.zip_code}</span>\r\n\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6 col-sm-6 col-12\">\r\n                                                                <label>Phone Number <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"phone\"\r\n                                                                    placeholder=\"Phone Number\"\r\n                                                                    value={this.state.phone}\r\n                                                                    // onChange={this.handlephone()}\r\n                                                                    onChange={this.handlephone}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.phone}</span>\r\n                                                            </div>\r\n                                                            {/* <div className='text-success'>{this.state.scsMsg}</div> */}\r\n                                                            <div className=\" col-md-12\">\r\n                                                                <Button\r\n                                                                    color=\"btn btn-theme-light-2 rounded\"\r\n\r\n                                                                    onClick={() => this.onSubmitHandler()}\r\n                                                                >Update</Button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\PropertyEnquiry\\ContactAgent.js",["792","793"],"\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport {Spinner,Modal, ModalBody, ModalHeader, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport Footer from '../Footer'\r\nimport Header from '../Header'\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            enquiryInfoModal: false,\r\n            EnquiryList: [],\r\n            EnquiryInfo: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"reject\", \"label\": \"Rejected\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            errMsg: {},\r\n            enquiryId: \"\"\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getEnquiryList()\r\n                }, 300);\r\n            });\r\n    }\r\n    \r\n    \r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getEnquiryList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getEnquiryList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getEnquiryList() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"buyer/get-contact-enquiry-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"buyer/get-contact-enquiry-list\", response.data.data.data)\r\n                this.setState({\r\n                    EnquiryList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n    getEnquiryinfo = (e) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', this.state.enquiryId);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"view-enquiry-detail\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                    EnquiryInfo: response.data.data,\r\n\r\n                });\r\n                console.log(this.state.columnName)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    // errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    enquiryInfoModal(e) {\r\n        this.setState({\r\n            enquiryInfoModal: !this.state.enquiryInfoModal,\r\n            enquiryId: e.id\r\n        }, () => {\r\n            this.getEnquiryinfo(this.state.enquiryId)\r\n        })\r\n    }\r\n    ModalClose() {\r\n        this.setState({\r\n            enquiryInfoModal: false\r\n        })\r\n    }\r\n    toggle(){\r\n        this.setState({\r\n            toggle:!this.state.toggle\r\n        })\r\n    }\r\n\r\n    toggleFunChild(value){\r\n        this.setState({\r\n            toggle:value\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getEnquiryList()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Buyer\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"resido-front\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\r\n                    <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar data={{ profile_image: this.state.profile_image }} />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar \r\n                                            activePage=\"contact_enquiry\" \r\n                                            activetabb={true} \r\n                                            data={{ profile_image: this.state.profile_image }}\r\n                                            toggleFunChild={this.toggleFunChild.bind(this)}\r\n                                            toggle={this.state.toggle}\r\n                                             />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n                                                <div className=\"form-submit\">\r\n                                                    <h4>Contact Agent</h4>\r\n                                                    <div className=\"row justify-content-between mt-4\">\r\n                                                            <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                                                <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                                            </div>\r\n                                                            <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                                                <Select\r\n                                                                    aria-label=\".form-select-lg example\"\r\n                                                                    required=\"\"\r\n                                                                    placeholder=\"Status\"\r\n                                                                    className=\"form-select-control\"\r\n                                                                    options={this.state.statusArray}\r\n                                                                    value={this.state.statusDefault}\r\n                                                                    styles={colourStyles}\r\n                                                                    onChange={(e) => this.handleStatus(e)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-12 grid-margin mt-3\">\r\n                                                            <div className=\"card\">\r\n                                                                <div className=\"card-body\">\r\n                                                                    <div className=\"table-responsive\">\r\n                                                                        <table className=\"table table-striped\">\r\n                                                                            <thead>\r\n                                                                                <tr>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name \")}> Property Name </th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")}>Created Date </th>\r\n                                                                                    <th className='text-center'> Status </th>\r\n                                                                                    <th className=\"text-center\"> Action </th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody>\r\n\r\n                                                                                {this.state.EnquiryList.length > 0 ?\r\n                                                                                    this.state.EnquiryList.map((item, idx) => (\r\n                                                                                        <tr key={idx} >\r\n                                                                                            <td>\r\n                                                                                                {item.property.name}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {dateFormat(item.created_at, 'dd-mm-yyyy')}\r\n                                                                                            </td>\r\n                                                                                            <td className=\"text-center\">\r\n                                                                                                {item.status === \"accept\" ?\r\n                                                                                                    <button color='info' className=\"badge btn-success\"> Accepted</button>\r\n                                                                                                    :\r\n                                                                                                    item.status === \"reject\" ?\r\n                                                                                                        <button color='danger' className=\"badge btn-danger\"> Rejected</button>\r\n                                                                                                        :\r\n                                                                                                        <button color='warning' className=\"badge btn-warning\"> Pending</button>\r\n                                                                                                }\r\n                                                                                            </td>\r\n                                                                                            <td className=\"text-center\">\r\n                                                                                                <Button\r\n                                                                                                    color='dark'\r\n                                                                                                    style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                                    className=\" btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                                    onClick={(e) => this.enquiryInfoModal(item)}\r\n                                                                                                >View</Button>\r\n                                                                                            </td>\r\n\r\n                                                                                        </tr>\r\n                                                                                    )) :\r\n                                                                                    <tr  >\r\n                                                                                        <td className=\"text-center\" colSpan=\"5\">\r\n                                                                                            No Records\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                }\r\n\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    <div className=\"d-flex justify-content-center\">\r\n                                                        {this.state.totalItemsCount > 0 &&\r\n                                                            <div className=\"pagination-rounded\">\r\n                                                                <Pagination\r\n                                                                    activePage={this.state.activePage}\r\n                                                                    itemsCountPerPage={this.state.limit}\r\n                                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                                    pageRangeDisplayed={5}\r\n                                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                    <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.enquiryInfoModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                        <ModalHeader toggle={() => this.ModalClose()}>Enquiry Details</ModalHeader>\r\n                        <ModalBody>\r\n                            {\r\n                                this.state.EnquiryInfo !== \"\" ?\r\n                                    <div className=\"row\" >\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">First Name</label>\r\n                                            <p>{this.state.EnquiryInfo.name}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Email </label>\r\n                                            <p className='text-break'>{this.state.EnquiryInfo.email}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Status</label>\r\n                                            <p>{this.state.EnquiryInfo.status === \"accept\" ? \"Accepted\" : this.state.EnquiryInfo.status === \"reject\" ? \"Rejected\" : \"Pending\"}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Phone Number</label>\r\n                                            <p>{this.state.EnquiryInfo.contact}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-6\">\r\n\r\n                                        </div>\r\n                                        <div className=\"col-12 \">\r\n                                            <label className=\"fw-bold\">Message</label>\r\n                                            <p>{this.state.EnquiryInfo.message}</p>\r\n                                        </div>\r\n                                  {  this.state.EnquiryInfo.enquiry_comment !== null  ?\r\n                                        <div className=\"col-12 \">\r\n                                            <label className=\"fw-bold\">Comment</label><br />\r\n                                          \r\n                                            <p>{this.state.EnquiryInfo.enquiry_comment}</p>\r\n                                            <label className='float-end fw-bold' style={{fontSize:\"12px\"}}>Comment by :- {this.state.EnquiryInfo.comment_by_user}</label>   \r\n                                        </div>\r\n                                        :\"\"}\r\n                                    </div>\r\n                                    : \"NO Data Available\"\r\n                            }\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\PropertyEnquiry\\TakeTour.js",["794","795","796","797","798"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport { Spinner,Modal, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport Footer from '../Footer'\r\nimport Header from '../Header'\r\nimport dateFormat, { masks } from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class Property extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            enquiryInfoModal: false,\r\n            EnquiryList: [],\r\n            EnquiryInfo: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"Status\" }, { 'value': \"pending\", \"label\": \"Pending\" }, { 'value': \"accept\", \"label\": \"Accepted\" }, { 'value': \"reject\", \"label\": \"Rejected\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Status\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            errMsg: {},\r\n            enquiryId: \"\"\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getEnquiryList()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n   \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getEnquiryList()\r\n                }, 300);\r\n            });\r\n    }\r\n    \r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage:1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getEnquiryList() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getEnquiryList()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getEnquiryList() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"buyer/get-tour-enquiry-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"buyer/get-tour-enquiry-list\", response.data.data.data)\r\n                this.setState({\r\n                    EnquiryList: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n    getEnquiryinfo = (e) => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('enquiry_id', this.state.enquiryId);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"view-enquiry-detail\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                    EnquiryInfo: response.data.data,\r\n\r\n                });\r\n                console.log(this.state.columnName)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    // errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n\r\n    enquiryInfoModal(e) {\r\n        this.setState({\r\n            enquiryInfoModal: !this.state.enquiryInfoModal,\r\n            enquiryId: e.id\r\n        }, () => {\r\n            this.getEnquiryinfo(this.state.enquiryId)\r\n        })\r\n    }\r\n    ModalClose() {\r\n        this.setState({\r\n            enquiryInfoModal: false\r\n        })\r\n    }\r\n    toggle(){\r\n        this.setState({\r\n            toggle:!this.state.toggle\r\n        })\r\n    }\r\n\r\n    toggleFunChild(value){\r\n        this.setState({\r\n            toggle:value\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getEnquiryList()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Buyer\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"resido-front\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\r\n                    <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar data={{ profile_image: this.state.profile_image }} />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar \r\n                                            activePage=\"take_tour\" \r\n                                            data={{ profile_image: this.state.profile_image }}\r\n                                            toggleFunChild={this.toggleFunChild.bind(this)}\r\n                                            toggle={this.state.toggle}\r\n                                             />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n                                                <div className=\"form-submit\">\r\n                                                    <h4>Take A Tour</h4>\r\n                                                    \r\n                                                  <div className=\"row justify-content-between mt-4\">\r\n                                                        <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                                            <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                                            <Select\r\n                                                                aria-label=\".form-select-lg example\"\r\n                                                                required=\"\"\r\n                                                                placeholder=\"Status\"\r\n                                                                className=\"form-select-control\"\r\n                                                                options={this.state.statusArray}\r\n                                                                value={this.state.statusDefault}\r\n                                                                styles={colourStyles}\r\n                                                                onChange={(e) => this.handleStatus(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                  </div>  \r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 grid-margin mt-3\">\r\n                                                            <div className=\"card\">\r\n                                                                <div className=\"card-body\">\r\n                                                                    <div className=\"table-responsive\">\r\n                                                                        <table className=\"table table-striped\">\r\n                                                                            <thead>\r\n                                                                                <tr>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name \")}> Property Name </th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")}>Created Date </th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"enquiry_date\")}>Enquiry Date </th>\r\n                                                                                    <th> Status </th>\r\n                                                                                    <th className=\"text-center\"> Action </th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody>\r\n\r\n                                                                                {this.state.EnquiryList.length > 0 ?\r\n                                                                                    this.state.EnquiryList.map((item, idx) => (\r\n                                                                                        <tr key={idx} >\r\n                                                                                            <td>\r\n                                                                                                {item.property.name}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {dateFormat(item.created_at, 'dd-mm-yyyy')}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {dateFormat(item.date_of_enquiry, 'dd-mm-yyyy')}\r\n\r\n                                                                                            </td>\r\n                                                                                            <td className=\"text-center\">\r\n                                                                                                {item.status === \"accept\" ?\r\n                                                                                                    <Button color='info' className=\"badge badge-dark\"> Accepted</Button>\r\n                                                                                                    :\r\n                                                                                                    item.status === \"reject\" ?\r\n                                                                                                        <Button color='danger' className=\"badge badge-dark\"> Rejected</Button>\r\n                                                                                                        :\r\n                                                                                                        <Button color='warning' className=\"badge badge-dark\"> Pending</Button>\r\n                                                                                                }\r\n                                                                                            </td>\r\n                                                                                            <td className=\"text-center\">\r\n                                                                                                <Button\r\n                                                                                                    color='blue'\r\n                                                                                                    style={{backgroundColor:\"#198ae3\"}}\r\n                                                                                                    className=\" btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                                    onClick={(e) => this.enquiryInfoModal(item)}\r\n                                                                                                >View</Button>\r\n                                                                                            </td>\r\n\r\n                                                                                        </tr>\r\n                                                                                    )) :\r\n                                                                                    <tr  >\r\n                                                                                        <td className=\"text-center\" colSpan=\"5\">\r\n                                                                                            No Records\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                }\r\n\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex justify-content-center\">\r\n                                                        {this.state.totalItemsCount > 0 &&\r\n                                                            <div className=\"pagination-rounded\">\r\n                                                                <Pagination\r\n                                                                    activePage={this.state.activePage}\r\n                                                                    itemsCountPerPage={this.state.limit}\r\n                                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                                    pageRangeDisplayed={5}\r\n                                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                    <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.enquiryInfoModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                        <ModalHeader toggle={() => this.ModalClose()}>Enquiry Details</ModalHeader>\r\n                        <ModalBody>\r\n                            {\r\n                                this.state.EnquiryInfo !== \"\" ?\r\n                                    <div className=\"row\" >\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">First Name</label>\r\n                                            <p>{this.state.EnquiryInfo.name}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Enquiry Date</label>\r\n                                            <p>{dateFormat(this.state.EnquiryInfo.date_of_enquiry, 'dd-mm-yyyy')}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Email </label>\r\n                                            <p className='text-break'>{this.state.EnquiryInfo.email}</p>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Enquiry Time</label>\r\n                                            <p>{this.state.EnquiryInfo.time_of_enquiry}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Phone Number</label>\r\n                                            <p>{this.state.EnquiryInfo.contact}</p>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-12 col-lg-6\">\r\n                                            <label className=\"fw-bold\">Status</label>\r\n                                            <p>{this.state.EnquiryInfo.status === \"accept\" ? \"Accepted\" : this.state.EnquiryInfo.status === \"reject\" ? \"Rejected\" : \"Pending\"}</p>\r\n                                        </div>\r\n                                        <div className=\"col-12 \">\r\n                                            <label className=\"fw-bold\">Message</label>\r\n                                            <p>{this.state.EnquiryInfo.message}</p>\r\n                                        </div>\r\n                                        {  this.state.EnquiryInfo.enquiry_comment !== null  ?\r\n                                        <div className=\"col-12 \">\r\n                                            <label className=\"fw-bold\">Comment</label>\r\n                                            <p>{this.state.EnquiryInfo.enquiry_comment}</p>\r\n                                            <label className='float-end fw-bold' style={{fontSize:\"12px\"}}>Comment by :- {this.state.EnquiryInfo.comment_by_user}</label>   \r\n                                        </div>\r\n                                        :\"\"}\r\n                                    </div>\r\n                                    : \"NO Data Available\"\r\n                            }\r\n\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\ContractForms\\BuyerAgentContract.js",["799","800","801","802","803","804","805","806"],"\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport { Spinner, Modal, ModalBody, ModalHeader, Button, Input,ModalFooter } from 'reactstrap'\r\nimport { APIURL } from '../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport Footer from '../Footer'\r\nimport Header from '../Header'\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class BuyerAgentContract extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            contract: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            urlDoc: \"\",\r\n            Loader: false,\r\n            contractId:\"\",\r\n            ContractInfoModal: false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getcontract()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getcontract()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getcontract()\r\n                }, 300);\r\n            });\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getcontract() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getcontract()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getcontract() {\r\n        this.setState({ Loader: true })\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"get-contract-list-for-user\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                    contract: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    AddpropertyModal() {\r\n        this.setState({\r\n            AddpropertyModal: !this.state.AddpropertyModal\r\n        })\r\n    }\r\n    // AddpropertyModal close\r\n    ModalClose() {\r\n        this.setState({\r\n            AddpropertyModal: false\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n\r\n        var token = this.state.token\r\n        //first API\r\n        axios\r\n            .get(APIURL + \"connect-docusign\", {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"connect-docusign\", response.data.data)\r\n                this.setState({\r\n                    urlDoc: response.data.data,\r\n                    Loader: false\r\n                })\r\n                window.open(this.state.urlDoc);\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    Loader: false\r\n                })\r\n            })\r\n\r\n        //Second APi \r\n\r\n        axios\r\n            .get(APIURL + \"docusign/callback\", {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"docusign/callback\", response.data.data)\r\n                this.setState({\r\n                    Loader: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    Loader: false\r\n                })\r\n            })\r\n\r\n        // third post Api\r\n\r\n        const formData = new FormData();\r\n        formData.append('contract_id', e.id);\r\n\r\n        this.setState({ Loader: true, ContractInfoModal: false });\r\n        axios\r\n            .post(APIURL + \"sign-document\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false })\r\n                console.log(\"sign-document\", response.data)\r\n\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    };\r\n    ContractInfoModal(e) {\r\n        this.setState({\r\n            ContractInfoModal: !this.state.ContractInfoModal,\r\n            contractId:e.id\r\n        })\r\n    }\r\n\r\n    ModalClose() {\r\n        this.setState({\r\n            ContractInfoModal: false\r\n        })\r\n    }\r\n    toggle(){\r\n        this.setState({\r\n            toggle:!this.state.toggle\r\n        })\r\n    }\r\n\r\n    toggleFunChild(value){\r\n        this.setState({\r\n            toggle:value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getcontract()\r\n    }\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Buyer\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"resido-front\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\r\n                    <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar data={{ profile_image: this.state.profile_image }} />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar \r\n                                            activePage=\"buyerAgentContract\" \r\n                                            activetabb={true} \r\n                                            data={{ profile_image: this.state.profile_image }}\r\n                                            toggleFunChild={this.toggleFunChild.bind(this)}\r\n                                            toggle={this.state.toggle}\r\n                                             />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n                                                <div className=\"form-submit\">\r\n                                                    <h4>Buyer Agent Contract</h4>\r\n                                                    <div className=\"row justify-content-between mt-4\">\r\n                                                        <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                                            <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                                            <Select\r\n                                                                aria-label=\".form-select-lg example\"\r\n                                                                required=\"\"\r\n                                                                placeholder=\"Status\"\r\n                                                                className=\"form-select-control\"\r\n                                                                options={this.state.statusArray}\r\n                                                                value={this.state.statusDefault}\r\n                                                                styles={colourStyles}\r\n                                                                onChange={(e) => this.handleStatus(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n\r\n                                                        <div className=\"col-12 grid-margin mt-3\">\r\n                                                            <div className=\"card\">\r\n                                                                <div className=\"card-body\">\r\n                                                                    <div className=\"table-responsive\">\r\n                                                                        <table className=\"table table-striped\">\r\n                                                                            <thead>\r\n                                                                                <tr>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"contract_title\")}>Contract Title</th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                                    <th className=\"\"  > Document</th> \r\n                                                                                    <th className=\"\"  > Status</th>\r\n                                                                                    <th className=\"text-center\"> Action</th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody>\r\n                                                                                {this.state.contract.length > 0 ?\r\n                                                                                    this.state.contract.map((item, idx) => (\r\n                                                                                        <tr key={idx} >\r\n                                                                                            <td >\r\n                                                                                                {item.contract_title}\r\n                                                                                            </td>\r\n                                                                                            <td >\r\n                                                                                                {item.property_name}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                                            </td>\r\n                                                                                             <td >\r\n                                                                                               <a href={item.document_url}>{item.file_name}</a>\r\n                                                                                            </td>\r\n                                                                                            <td >\r\n                                                                                                {\r\n                                                                                                    item.status === null ?\r\n                                                                                                        <button color='danger' className=\"badge btn-danger\"> Not Signed</button>\r\n                                                                                                        :\r\n                                                                                                        <button color='success' className=\"badge btn-success\"> Signed</button>\r\n                                                                                                }\r\n                                                                                            </td>\r\n                                                                                           \r\n                                                                                            <td >\r\n                                                                                                {/* <Button\r\n                                                                                                    color='dark'\r\n                                                                                                    style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                                    className=\" btn-rounded px-3 btn-sm mr-2\"\r\n                                                                                                    onClick={(e) => this.onSubmitHandler(item)}\r\n                                                                                                >Action</Button> */}\r\n                                                                                                 <Button\r\n                                                                                                    color='dark'\r\n                                                                                                    style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                                    className=\" btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                                    onClick={(e) => this.ContractInfoModal(item)}\r\n                                                                                                >View</Button>\r\n                                                                                            </td>\r\n                                                                                        </tr>\r\n                                                                                    )) :\r\n                                                                                    <tr  >\r\n                                                                                        <td className=\"text-center\" colSpan=\"6\">\r\n                                                                                            No Records\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                }\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex justify-content-center\">\r\n                                                        {this.state.totalItemsCount > 0 &&\r\n                                                            <div className=\"pagination-rounded\">\r\n                                                                <Pagination\r\n                                                                    activePage={this.state.activePage}\r\n                                                                    itemsCountPerPage={this.state.limit}\r\n                                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                                    pageRangeDisplayed={5}\r\n                                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.ContractInfoModal} toggle={() => this.ModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.contract.length > 0 &&\r\n                            this.state.contract.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>  {\r\n                                            item.status === null ?\r\n                                                 \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                  \r\n                                        \r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\ContractForms\\BuyerPurchase.js",["807","808","809","810","811"],"\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar'\r\nimport Navbar from '../Navbar'\r\nimport { Spinner, Modal, ModalBody, ModalHeader, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\nimport Footer from '../Footer'\r\nimport Header from '../Header'\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst colourStyles = {\r\n\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class BuyerPurchase extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            purchases: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            goToNewContract: false,\r\n            Loader: false,\r\n            contractId:\"\",\r\n            ContractInfoModal: false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getpurchases()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getpurchases()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getpurchases()\r\n                }, 300);\r\n            });\r\n    }\r\n    \r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getpurchases() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getpurchases()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n    getpurchases() {\r\n        this.setState({ Loader: true })\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"get-purchase-contract-list-for-user\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"get-contract-list-for-agent\", response.data.data.data)\r\n                this.setState({\r\n                    purchases: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader: false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    AddNewContract() {\r\n        this.setState({\r\n            goToNewContract: true\r\n        })\r\n    }\r\n    ContractInfoModal(e) {\r\n        this.setState({\r\n            ContractInfoModal: !this.state.ContractInfoModal,\r\n            contractId:e.id\r\n        })\r\n    }\r\n    ModalClose() {\r\n        this.setState({\r\n            ContractInfoModal: false\r\n        })\r\n    }\r\n    toggle(){\r\n        this.setState({\r\n            toggle:!this.state.toggle\r\n        })\r\n    }\r\n\r\n    toggleFunChild(value){\r\n        this.setState({\r\n            toggle:value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getpurchases()\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Buyer\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"resido-front\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n\r\n                    <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar data={{ profile_image: this.state.profile_image }} />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar \r\n                                            activePage=\"buyerPurchase\"\r\n                                             activetabb={true} \r\n                                             data={{ profile_image: this.state.profile_image }}\r\n                                             toggleFunChild={this.toggleFunChild.bind(this)}\r\n                                            toggle={this.state.toggle}\r\n                                              />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n                                                <div className=\"form-submit\">\r\n                                                    <h4>Buyer Purchase</h4>\r\n                                                    <div className=\"row justify-content-between mt-4\">\r\n                                                        <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                                            <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                                            <Select\r\n                                                                aria-label=\".form-select-lg example\"\r\n                                                                required=\"\"\r\n                                                                placeholder=\"Status\"\r\n                                                                className=\"form-select-control\"\r\n                                                                options={this.state.statusArray}\r\n                                                                value={this.state.statusDefault}\r\n                                                                styles={colourStyles}\r\n                                                                onChange={(e) => this.handleStatus(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        \r\n\r\n                                                        <div className=\"col-12 grid-margin mt-3\">\r\n                                                            <div className=\"card\">\r\n                                                                <div className=\"card-body\">\r\n                                                                    <div className=\"table-responsive\">\r\n                                                                        <table className=\"table table-striped\">\r\n                                                                            <thead>\r\n                                                                                <tr>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"contract_title\")}> Contract Title</th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                                    <th className=\"\"  > Document</th>\r\n                                                                                    <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Status </th>\r\n                                                                                    <th > Action </th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody>\r\n                                                                                {this.state.purchases.length > 0 ?\r\n                                                                                    this.state.purchases.map((item, idx) => (\r\n                                                                                        <tr key={idx} >\r\n                                                                                            <td >\r\n                                                                                                {item.contract_title}\r\n                                                                                            </td>\r\n                                                                                            <td >\r\n                                                                                                {item.property_name}\r\n                                                                                            </td>\r\n                                                                                            <td>\r\n                                                                                                {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                                            </td>\r\n                                                                                            <td >\r\n                                                                                                <a href={item.document_url}>{item.file_name}</a>\r\n                                                                                            </td>\r\n                                                                                            <td >\r\n                                                                                                {\r\n                                                                                                    item.status === null ?\r\n                                                                                                        <button color='danger' className=\"badge btn-danger\"> Not Signed</button>\r\n                                                                                                        :\r\n                                                                                                        <button color='success' className=\"badge btn-danger\"> Signed</button>\r\n\r\n                                                                                                }\r\n                                                                                            </td>\r\n                                                                                            <td >\r\n                                                                                                <Button\r\n                                                                                                    color='dark'\r\n                                                                                                    style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                                    className=\" btn-rounded px-3 btn-sm ml-2\"\r\n                                                                                                    onClick={(e) => this.ContractInfoModal(item)}\r\n                                                                                                >View</Button>\r\n                                                                                            </td>\r\n                                                                                        </tr>\r\n                                                                                    )) :\r\n                                                                                    <tr  >\r\n                                                                                        <td className=\"text-center\" colSpan=\"5\">\r\n                                                                                            No Records\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                }\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex justify-content-center\">\r\n                                                        {this.state.totalItemsCount > 0 &&\r\n                                                            <div className=\"pagination-rounded\">\r\n                                                                <Pagination\r\n                                                                    activePage={this.state.activePage}\r\n                                                                    itemsCountPerPage={this.state.limit}\r\n                                                                    totalItemsCount={this.state.totalItemsCount}\r\n                                                                    pageRangeDisplayed={5}\r\n                                                                    onChange={this.handlePageChange.bind(this)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.ContractInfoModal} toggle={() => this.ModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.purchases.length > 0 &&\r\n                            this.state.purchases.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n                                  \r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p> {\r\n                                            item.status === null ?\r\n                                                \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Index.js",["812","813","814"],"import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport logo from '../../../assets/img/logo.png'\r\nimport Sidebar from './Sidebar'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport default class Index extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n        }\r\n    }\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if(this.state.user_type !== \"Buyer\"){\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n     \r\n        return (\r\n            <>\r\n                <div className=\"resido-front\">\r\n                    <div className=\"blue-skin dashboard\">\r\n                        <div id=\"main-wrapper\">\r\n                            <Navbar />\r\n                            <div className=\"clearfix\"></div>\r\n                            <Header />\r\n                            <section className=\"bg-light\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-12 col-md-12\">\r\n                                            <div class=\"filter_search_opt\">\r\n                                                <a href=\"javascript:void(0);\" onClick={() => this.toggle()} >Dashboard Navigation<i class=\"ml-2 ti-menu\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-3 col-md-12\">\r\n                                            <Sidebar activePage=\"dashboard\" />\r\n                                        </div>\r\n                                        <div className=\"col-lg-9 col-md-12\">\r\n                                            <div className=\"dashboard-wraper\">\r\n\r\n                                                <div className=\"form-submit\">\r\n                                                    <h4>Coming Soon</h4>\r\n                                                    {/* <div className=\"submit-section\">\r\n                                                        <div className=\"row\">\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>Your Name</label>\r\n                                                                <input type=\"text\" className=\"form-control\" value=\"Shaurya Preet\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>Email</label>\r\n                                                                <input type=\"email\" className=\"form-control\" value=\"preet77@gmail.com\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>Your Title</label>\r\n                                                                <input type=\"text\" className=\"form-control\" value=\"Web Designer\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>Phone</label>\r\n                                                                <input type=\"text\" className=\"form-control\" value=\"123 456 5847\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>Address</label>\r\n                                                                <input type=\"text\" className=\"form-control\" value=\"522, Arizona, Canada\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>City</label>\r\n                                                                <input type=\"text\" className=\"form-control\" value=\"Montquebe\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>State</label>\r\n                                                                <input type=\"text\" className=\"form-control\" value=\"Canada\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-6\">\r\n                                                                <label>Zip</label>\r\n                                                                <input type=\"text\" className=\"form-control\" value=\"160052\" />\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group col-md-12\">\r\n                                                                <label>About</label>\r\n                                                                <textarea className=\"form-control\">Maecenas quis consequat libero, a feugiat eros. Nunc ut lacinia tortor morbi ultricies laoreet ullamcorper phasellus semper</textarea>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n                            <Footer />\r\n                        </div>\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerContract\\AgentSeller.js",["815","816","817","818","819","820","821","822","823"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../constants/common';\r\nimport { Button, Spinner, Input, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    }\r\n};\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusArray: [{ 'A': \"\", \"label\": \"A\" }, { 'value': \"B\", \"label\": \"B\" }, { 'value': \"C\", \"label\": \"C\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Select Type\" }],\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            title: \"\",\r\n            description: \"\",\r\n            Document: \"\",\r\n            documentName: \"\",\r\n            userId: \"\",\r\n            propertyId: \"\",\r\n            languages: [],\r\n            selectecdLanguages: [],\r\n            countrycode: \"\",\r\n            sellerId: \"\",\r\n            SellerList: [],\r\n            Properties: [],\r\n            propertyId: \"\",\r\n            redirectback: false,\r\n            errMsg:\"\",\r\n            Loader:true,\r\n            activeSide:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSellers()\r\n        this.getPropertyList()\r\n        window.scrollTo(0, 0);\r\n        setTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    handleTitle = (e) => {\r\n        this.setState({\r\n            title: e\r\n        });\r\n    };\r\n    handleDescription = (e) => {\r\n        this.setState({\r\n            description: e\r\n        });\r\n    };\r\n\r\n    getPropertyList() {\r\n        var token = this.state.token\r\n        axios\r\n            .get(APIURL + \"get-latest-properties\", {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"get-latest-properties\", response.data.data)\r\n                let languages = response.data.data;\r\n                for (var c = 0; c < languages.length; c++) {\r\n                    this.state.languages.push({ value: languages[c].id, label: languages[c].name })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // alert(error)\r\n            })\r\n    }\r\n\r\n    SelectedProperty = (SelectedProperty) => {\r\n        this.setState({\r\n            SelectedProperty: SelectedProperty\r\n        });\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            });\r\n    }\r\n\r\n    getSellers() {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        axios\r\n            .post(APIURL + \"agent/get-seller-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    SellerList: response.data.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleSellerName(e) {\r\n        this.setState({\r\n            sellerId: e\r\n        }, () => {\r\n            this.getProperties()\r\n        })\r\n    }\r\n\r\n    getProperties = () => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('user_id', this.state.sellerId);\r\n        axios\r\n            .post(APIURL + \"agent/get-property-list-using-seller\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Properties: response.data.data\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 3000);\r\n            });\r\n    };\r\n    handlePropertyName(e) {\r\n        this.setState({\r\n            propertyId: e\r\n        }, () => {\r\n            this.getProperties()\r\n        })\r\n        console.log(\"propertyId\", this.state.propertyId)\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('contract_title', this.state.title);\r\n        formData.append('description', this.state.description);\r\n        formData.append('contract_type', \"agent_to_seller\");\r\n        formData.append('contract_document', this.state.document);\r\n        formData.append('property_id', this.state.propertyId);\r\n        formData.append('user_id', this.state.sellerId);\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"agent/send-contract\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                    scsMsg: response.data.message,\r\n                })\r\n                this.UpdateSuccessfully(this.state.scsMsg)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    handleUploadDoc = (e) => {\r\n        this.setState({\r\n            document: e.target.files[0],\r\n            documentName: e.target.files[0].name\r\n        }, () => {\r\n            console.log(this.state.document)\r\n        })\r\n    }\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\",\r\n        onClose: () =>\r\n            this.setState({\r\n                redirectback: true\r\n            })\r\n    })\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirectback) {\r\n            return <Redirect to=\"/agent/seller/contract/list\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"container-scroller resido-admin\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={3000}\r\n                        hideProgressBar={true}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                    <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                    />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                         activePage=\"contractToSeller\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Seller Agent Contract</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <form className=\"forms-sample\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Contract Title <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"Contract Title\"\r\n                                                                    value={this.state.title}\r\n                                                                    onChange={(e) => this.handleTitle(e.target.value)}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.contract_title}</span>\r\n                                                            </div>\r\n                                                            {/* <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Select Type</label>\r\n                                                                <Select\r\n                                                                    aria-label=\".form-select-lg example\"\r\n                                                                    required=\"\"\r\n                                                                    placeholder=\"Select Type\"\r\n                                                                    className=\"form-select-control\"\r\n                                                                    options={this.state.statusArray}\r\n                                                                    value={this.state.statusDefault}\r\n                                                                    styles={colourStyles}\r\n                                                                    onChange={(e) => this.handleStatus(e)}\r\n                                                                />\r\n                                                            </div> */}\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Seller <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handleSellerName(e.target.value)}  >\r\n                                                                            <option  >Select Seller</option>\r\n                                                                            {this.state.SellerList.length > 0 ?\r\n                                                                                this.state.SellerList.map((item, idx) => (\r\n                                                                                    <option value={item.id} selected={item.id === 231}  >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.user_id}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Property <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handlePropertyName(e.target.value)}  >\r\n                                                                            <option>Select Property</option>\r\n                                                                            {this.state.Properties.length > 0 ?\r\n                                                                                this.state.Properties.map((item, idx) => (\r\n                                                                                    <option value={item.id} >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.property_id}</span>\r\n                                                                     </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Select Property</label>\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Property\"\r\n                                                                    value={this.state.SelectedProperty}\r\n                                                                    onChange={this.SelectedProperty}\r\n                                                                    options={this.state.languages}\r\n                                                                />\r\n                                                            </div> */}\r\n\r\n                                                            {/* <div className=\"col-lg-12 col-md-12 mt-4\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Upload Document<strong className=\"text-danger\"></strong></label>\r\n                                                                    <div className='mt-2 mb-2' style={{ color: \"blue\" }} >{this.state.documentName}</div>\r\n                                                                    <div className=\"\">\r\n                                                                        <div className=\"license-uplode\">\r\n                                                                            <label htmlFor=\"fileinput\"> \r\n                                                                            <i className=\"fas fa-plus-circle mr-2\"></i>\r\n                                                                             Upload Document</label> \r\n                                                                         </div> \r\n                                                                        <input\r\n                                                                            type=\"file\"\r\n                                                                            onChange={this.handleUploadDoc}\r\n                                                                            className=\"form-control \"\r\n                                                                            id=\"fileinput\"\r\n                                                                            style={{ lineHeight: \"2.1\" }}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <div className=\"form-group col-lg-6 col-12\">\r\n                                                                <label>Upload Document <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <Input\r\n                                                                        type=\"file\"\r\n                                                                        onChange={this.handleUploadDoc}\r\n                                                                        className=\"form-control\"\r\n                                                                        id=\"fileinput\"\r\n                                                                        style={{ height: \"100%\" }}\r\n                                                                    />\r\n                                                                      <span className=\"text-danger\">{this.state.errMsg.contract_document}</span>\r\n                                                                      <span>(Only pdf and docx file format)</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Description</label>\r\n                                                                <textarea\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"textarea\"\r\n                                                                    name=\"name\"\r\n                                                                    rows={5}\r\n                                                                    placeholder=\"Description\"\r\n                                                                    value={this.state.description}\r\n                                                                    onChange={(e) => this.handleDescription(e.target.value)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Button\r\n                                                            color=\"info\"\r\n                                                            className=\"btn btn-info mr-2\"\r\n                                                            onClick={() => this.onSubmitHandler()}\r\n                                                        >Send Contract</Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerContract\\ContractList.js",["824","825","826","827"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class ContractList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            Contracts: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            goToNewContract: false,\r\n            contractId: \"\",\r\n            ContractInfoModal: false,\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getContracts()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getContracts()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getContracts()\r\n                }, 300);\r\n            });\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getContracts() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getContracts()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getContracts() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"agent/get-contract-list-for-agent-seller\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"agent/get-contract-list-for-agent\", response.data.data.data)\r\n                this.setState({\r\n                    Contracts: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    AddpropertyModal() {\r\n        this.setState({\r\n            AddpropertyModal: !this.state.AddpropertyModal\r\n        })\r\n    }\r\n    // AddpropertyModal close\r\n    ModalClose() {\r\n        this.setState({\r\n            AddpropertyModal: false\r\n        })\r\n    }\r\n\r\n    AddNewContract() {\r\n        this.setState({\r\n            goToNewContract: true\r\n        })\r\n    }\r\n    ContractInfoModal(e) {\r\n        this.setState({\r\n            ContractInfoModal: !this.state.ContractInfoModal,\r\n            contractId: e.id\r\n        })\r\n    }\r\n\r\n    ContractModalClose() {\r\n        this.setState({\r\n            ContractInfoModal: false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getContracts()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirect) {\r\n            return <Redirect to={\"/seller/edit-property/\" + this.state.property_id} />;\r\n        }\r\n        if (this.state.goToNewContract) {\r\n            return <Redirect to={\"/agent/contract/seller\"} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}/>\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                        activePage=\"contractToSeller\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Seller Agent Contract</h4>\r\n                                    <Button onClick={() => this.AddNewContract()} color=\"info\" className=\"px-3 btn-sm\">New Contract</Button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"contract_title\")}>Contract Title</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                <th > Document</th>\r\n                                                                <th > Status </th>\r\n                                                                <th > Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.Contracts.length > 0 ?\r\n                                                                this.state.Contracts.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.contract_title}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {item.property_name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            <a href={item.document_url}> {item.file_name}</a>\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === null ?\r\n                                                                                    <label className=\"badge badge-danger \">Not Signed</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-danger \">Signed</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            <Button\r\n                                                                                color='info'\r\n                                                                                style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                className=\" btn-rounded px-3 btn-sm mr-2\"\r\n                                                                                onClick={(e) => this.ContractInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.ContractInfoModal} toggle={() => this.ContractModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ContractModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.Contracts.length > 0 &&\r\n                            this.state.Contracts.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{\r\n                                            item.status === null ?\r\n                                                \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerPurchase\\BuyerPurchaseList.js",["828","829","830","831"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class ContractList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            purchases: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            goToNewContract: false,\r\n            contractId: \"\",\r\n            ContractInfoModal: false,\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getpurchases()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getpurchases()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getpurchases()\r\n                }, 300);\r\n            });\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getpurchases() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getpurchases()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getpurchases() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"agent/get-purchase-contract-list-for-agent-buyer\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    purchases: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    AddNewContract() {\r\n        this.setState({\r\n            goToNewContract: true\r\n        })\r\n    }\r\n    ContractInfoModal(e) {\r\n        this.setState({\r\n            ContractInfoModal: !this.state.ContractInfoModal,\r\n            contractId: e.id\r\n        })\r\n    }\r\n\r\n    ContractModalClose() {\r\n        this.setState({\r\n            ContractInfoModal: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getpurchases()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirect) {\r\n            return <Redirect to={\"/seller/edit-property/\" + this.state.property_id} />;\r\n        }\r\n        if (this.state.goToNewContract) {\r\n            return <Redirect to={\"/agent/buyer/purchase/contract\"} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar  sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}/>\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                         activePage=\"BuyerPurchase\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Buyer Purchase </h4>\r\n                                    <Button onClick={() => this.AddNewContract()} color=\"info\" className=\"px-3 btn-sm\">New Purchase Contract</Button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"contract_title\")}>Contract Title</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                <th > Document </th>\r\n                                                                <th > Status </th>\r\n                                                                <th > Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.purchases.length > 0 ?\r\n                                                                this.state.purchases.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.contract_title}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {item.property_name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            <a href={item.document_url}> {item.file_name}</a>\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === null ?\r\n                                                                                    <label className=\"badge badge-danger \">Not Signed</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-danger \">Signed</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                        <Button\r\n                                                                                color='info'\r\n                                                                                style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                className=\" btn-rounded px-3 btn-sm mr-2\"\r\n                                                                                onClick={(e) => this.ContractInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.ContractInfoModal} toggle={() => this.ContractModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ContractModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.purchases.length > 0 &&\r\n                            this.state.purchases.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{\r\n                                            item.status === null ?\r\n                                                \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerPurchase\\SellerPurchaseContract.js",["832","833","834","835"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../constants/common';\r\nimport { Button, Input, Spinner } from 'reactstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    }\r\n};\r\n\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusArray: [{ 'A': \"\", \"label\": \"A\" }, { 'value': \"B\", \"label\": \"B\" }, { 'value': \"C\", \"label\": \"C\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Select Type\" }],\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            title: \"\",\r\n            description: \"\",\r\n            Document: \"\",\r\n            documentName: \"\",\r\n            userId: \"\",\r\n            propertyId: \"\",\r\n            languages: [],\r\n            selectecdLanguages: [],\r\n            countrycode: \"\",\r\n            sellerId: \"\",\r\n            buyerList: [],\r\n            Properties: [],\r\n            propertyId: \"\",\r\n            redirectback: false,\r\n            errMsg: \"\",\r\n            Loader:true,\r\n            activeSide:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSellers()\r\n        this.getPropertyList()\r\n        window.scrollTo(0, 0);\r\n        setTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    handleTitle = (e) => {\r\n        this.setState({\r\n            title: e\r\n        });\r\n    };\r\n    handleDescription = (e) => {\r\n        this.setState({\r\n            description: e\r\n        });\r\n    };\r\n\r\n    getPropertyList() {\r\n        var token = this.state.token\r\n        axios\r\n            .get(APIURL + \"get-latest-properties\", {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"get-latest-properties\", response.data.data)\r\n                let languages = response.data.data;\r\n                for (var c = 0; c < languages.length; c++) {\r\n                    this.state.languages.push({ value: languages[c].id, label: languages[c].name })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // alert(error)\r\n            })\r\n    }\r\n\r\n    SelectedProperty = (SelectedProperty) => {\r\n        this.setState({\r\n            SelectedProperty: SelectedProperty\r\n        });\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            });\r\n    }\r\n\r\n    getSellers() {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        axios\r\n            .post(APIURL + \"agent/get-seller-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    buyerList: response.data.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleSellerName(e) {\r\n        this.setState({\r\n            sellerId: e\r\n        }, () => {\r\n            this.getProperties()\r\n        })\r\n    }\r\n\r\n    getProperties = () => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('user_id', this.state.sellerId);\r\n        axios\r\n            .post(APIURL + \"agent/get-property-list-using-seller\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Properties: response.data.data\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 3000);\r\n            });\r\n    };\r\n    handlePropertyName(e) {\r\n        this.setState({\r\n            propertyId: e\r\n        }, () => {\r\n            this.getProperties()\r\n        })\r\n        console.log(\"propertyId\", this.state.propertyId)\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('contract_title', this.state.title);\r\n        formData.append('description', this.state.description);\r\n        formData.append('contract_type', \"agent_to_seller\");\r\n        formData.append('contract_document', this.state.document);\r\n        formData.append('property_id', this.state.propertyId);\r\n        formData.append('user_id', this.state.sellerId);\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"agent/send-purchase-contract\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                    scsMsg: response.data.message,\r\n                })\r\n                this.UpdateSuccessfully(this.state.scsMsg)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    handleUploadDoc = (e) => {\r\n        this.setState({\r\n            document: e.target.files[0],\r\n            documentName: e.target.files[0].name\r\n        }, () => {\r\n            console.log(this.state.document)\r\n        })\r\n    }\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\",\r\n        onClose: () =>\r\n            this.setState({\r\n                redirectback: true\r\n            })\r\n    })\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirectback) {\r\n            return <Redirect to=\"/agent/contract/seller/purchase/list\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"container-scroller resido-admin\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={3000}\r\n                        hideProgressBar={true}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                     <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                          activePage=\"SellerPurchase\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Seller Purchase</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <form className=\"forms-sample\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Contract Title<strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"Contract Title\"\r\n                                                                    value={this.state.title}\r\n                                                                    onChange={(e) => this.handleTitle(e.target.value)}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.contract_title}</span>\r\n                                                            </div>\r\n                                                            {/* <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Select Type</label>\r\n                                                                <Select\r\n                                                                    aria-label=\".form-select-lg example\"\r\n                                                                    required=\"\"\r\n                                                                    placeholder=\"Select Type\"\r\n                                                                    className=\"form-select-control\"\r\n                                                                    options={this.state.statusArray}\r\n                                                                    value={this.state.statusDefault}\r\n                                                                    styles={colourStyles}\r\n                                                                    onChange={(e) => this.handleStatus(e)}\r\n                                                                />\r\n                                                            </div> */}\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Seller<strong className=\"text-danger\" > *</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handleSellerName(e.target.value)}  >\r\n                                                                            <option  >Select Seller</option>\r\n                                                                            {this.state.buyerList.length > 0 ?\r\n                                                                                this.state.buyerList.map((item, idx) => (\r\n                                                                                    <option value={item.id} selected={item.id === 231}  >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.user_id}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Property<strong className=\"text-danger\" > *</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handlePropertyName(e.target.value)}  >\r\n                                                                            <option>Select Property</option>\r\n                                                                            {this.state.Properties.length > 0 ?\r\n                                                                                this.state.Properties.map((item, idx) => (\r\n                                                                                    <option value={item.id} >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.property_id}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-6 col-12\">\r\n                                                                <label>Upload Document<strong className=\"text-danger\" > *</strong></label>\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <Input\r\n                                                                        type=\"file\"\r\n                                                                        onChange={this.handleUploadDoc}\r\n                                                                        className=\"form-control\"\r\n                                                                        id=\"fileinput\"\r\n                                                                        style={{ height: \"100%\" }}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.contract_document}</span>\r\n                                                                    <span>(Only pdf and docx file format)</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Description</label>\r\n                                                                <textarea\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"textarea\"\r\n                                                                    name=\"name\"\r\n                                                                    rows={5}\r\n                                                                    placeholder=\"Description\"\r\n                                                                    value={this.state.description}\r\n                                                                    onChange={(e) => this.handleDescription(e.target.value)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Button\r\n                                                            color=\"info\"\r\n                                                            className=\"btn btn-info mr-2\"\r\n                                                            onClick={() => this.onSubmitHandler()}\r\n                                                        >Send Contract</Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerPurchase\\BuyerPurchaseContract.js",["836","837","838","839"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../constants/common';\r\nimport { Button, Input,Spinner } from 'reactstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    }\r\n};\r\n\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusArray: [{ 'A': \"\", \"label\": \"A\" }, { 'value': \"B\", \"label\": \"B\" }, { 'value': \"C\", \"label\": \"C\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Select Type\" }],\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            title:\"\",\r\n            description:\"\",\r\n            Document: \"\",\r\n            documentName: \"\",\r\n            userId: \"\",\r\n            propertyId: \"\",\r\n            languages: [],\r\n            selectecdLanguages: [],\r\n            countrycode: \"\",\r\n            sellerId: \"\",\r\n            buyerList: [],\r\n            Properties: [],\r\n            propertyId: \"\",\r\n            redirectback: false,\r\n            errMsg:\"\",\r\n            Loader:true,\r\n            activeSide:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSellers()\r\n        this.getProperties()\r\n        window.scrollTo(0, 0);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    ideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n    handleTitle = (e) => {\r\n        this.setState({\r\n            title: e\r\n        });\r\n    };\r\n    handleDescription = (e) => {\r\n        this.setState({\r\n            description: e\r\n        });\r\n    };\r\n    SelectedProperty = (SelectedProperty) => {\r\n        this.setState({\r\n            SelectedProperty: SelectedProperty\r\n        });\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            });\r\n    }\r\n\r\n    getSellers() {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        axios\r\n            .post(APIURL + \"agent/get-buyer-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    buyerList: response.data.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleSellerName(e) {\r\n        this.setState({\r\n            sellerId: e\r\n        })\r\n    }\r\n\r\n    getProperties = () => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('user_id', this.state.user.id);\r\n        axios\r\n            .post(APIURL + \"agent/get-property-list-using-agent\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Properties: response.data.data\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 3000);\r\n            });\r\n    };\r\n    handlePropertyName(e) {\r\n        this.setState({\r\n            propertyId: e\r\n        }, () => {\r\n            this.getProperties()\r\n        })\r\n        console.log(\"propertyId\", this.state.propertyId)\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('contract_title', this.state.title);\r\n        formData.append('description', this.state.description);\r\n        formData.append('contract_type', \"agent_to_seller\");\r\n        formData.append('contract_document', this.state.document);\r\n        formData.append('property_id', this.state.propertyId);\r\n        formData.append('user_id', this.state.sellerId);\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"agent/send-purchase-contract\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\nthis.setState({\r\n    Loader:false,\r\n    scsMsg: response.data.message,\r\n})\r\nthis.UpdateSuccessfully(this.state.scsMsg)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    handleUploadDoc = (e) => {\r\n        this.setState({\r\n            document: e.target.files[0],\r\n            documentName: e.target.files[0].name\r\n        }, () => {\r\n            console.log(this.state.document)\r\n        })\r\n    }\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\",\r\n        onClose: () =>\r\n        this.setState({\r\n            redirectback: true\r\n        })\r\n        })\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirectback) {\r\n            return <Redirect to=\"/agent/contract/buyer/purchase/list\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"container-scroller resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                         sideMenu={this.sideMenu.bind(this)}\r\n                         activeSide={this.state.activeSide}\r\n                       activePage=\"BuyerPurchase\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Buyer Purchase </h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <form className=\"forms-sample\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Contract Title <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"Contract Title\"\r\n                                                                    value={this.state.title}\r\n                                                                    onChange={(e) => this.handleTitle(e.target.value)}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.contract_title}</span>\r\n                                                            </div>\r\n                                                            {/* <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Select Type</label>\r\n                                                                <Select\r\n                                                                    aria-label=\".form-select-lg example\"\r\n                                                                    required=\"\"\r\n                                                                    placeholder=\"Select Type\"\r\n                                                                    className=\"form-select-control\"\r\n                                                                    options={this.state.statusArray}\r\n                                                                    value={this.state.statusDefault}\r\n                                                                    styles={colourStyles}\r\n                                                                    onChange={(e) => this.handleStatus(e)}\r\n                                                                />\r\n                                                            </div> */}\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Buyer <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handleSellerName(e.target.value)}  >\r\n                                                                            <option  >Select Buyer</option>\r\n                                                                            {this.state.buyerList.length > 0 ?\r\n                                                                                this.state.buyerList.map((item, idx) => (\r\n                                                                                    <option value={item.id} selected={item.id === 231}  >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.user_id}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Property <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handlePropertyName(e.target.value)}  >\r\n                                                                            <option>Select Property</option>\r\n                                                                            {this.state.Properties.length > 0 ?\r\n                                                                                this.state.Properties.map((item, idx) => (\r\n                                                                                    <option value={item.id} >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.property_id}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Select Property</label>\r\n                                                                <Select\r\n                                                                    placeholder=\"Select Property\"\r\n                                                                    value={this.state.SelectedProperty}\r\n                                                                    onChange={this.SelectedProperty}\r\n                                                                    options={this.state.languages}\r\n                                                                />\r\n                                                            </div> */}\r\n\r\n                                                            {/* <div className=\"col-lg-12 col-md-12 mt-4\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Upload Document<strong className=\"text-danger\"></strong></label>\r\n                                                                    <div className='mt-2 mb-2' style={{ color: \"blue\" }} >{this.state.documentName}</div>\r\n                                                                    <div className=\"\">\r\n                                                                        <div className=\"license-uplode\">\r\n                                                                            <label htmlFor=\"fileinput\"> \r\n                                                                            <i className=\"fas fa-plus-circle mr-2\"></i>\r\n                                                                             Upload Document</label> \r\n                                                                         </div> \r\n                                                                        <input\r\n                                                                            type=\"file\"\r\n                                                                            onChange={this.handleUploadDoc}\r\n                                                                            className=\"form-control \"\r\n                                                                            id=\"fileinput\"\r\n                                                                            style={{ lineHeight: \"2.1\" }}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                             <div className=\"form-group col-lg-6 col-12\">\r\n                                                             <label>Upload Document <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <div className=\"mb-3\">\r\n                                                                     <Input\r\n                                                                            type=\"file\"\r\n                                                                            onChange={this.handleUploadDoc}\r\n                                                                            className=\"form-control\"\r\n                                                                            id=\"fileinput\"\r\n                                                                            style={{ height: \"100%\" }}\r\n                                                                        />\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.contract_document}</span>\r\n                                                                        <span>(Only pdf and docx file format)</span>\r\n                                                                  </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Description</label>\r\n                                                                <textarea\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"textarea\"\r\n                                                                    name=\"name\"\r\n                                                                    rows={5}\r\n                                                                    placeholder=\"Description\"\r\n                                                                    value={this.state.description}\r\n                                                                    onChange={(e) => this.handleDescription(e.target.value)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Button\r\n                                                            color=\"info\"\r\n                                                            className=\"btn btn-info mr-2\"\r\n                                                            onClick={() => this.onSubmitHandler()}\r\n                                                        >Send Contract</Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\SellerPurchase\\SellerPurchaseList.js",["840","841","842","843"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class ContractList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            Purchases: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" },{ 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            goToNewContract: false,\r\n            contractId: \"\",\r\n            ContractInfoModal: false,\r\n            activeSide:false\r\n\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPurchases()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getPurchases()\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getpurchases()\r\n                }, 300);\r\n            });\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getPurchases() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getPurchases()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getPurchases() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n        axios\r\n            .post(APIURL + \"agent/get-purchase-contract-list-for-agent-seller\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"agent/get-contract-list-for-agent\", response.data.data.data)\r\n                this.setState({\r\n                    Purchases: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n\r\n    AddNewContract() {\r\n        this.setState({\r\n            goToNewContract: true\r\n        })\r\n    }\r\n    ContractInfoModal(e) {\r\n        this.setState({\r\n            ContractInfoModal: !this.state.ContractInfoModal,\r\n            contractId: e.id\r\n        })\r\n    }\r\n\r\n    ContractModalClose() {\r\n        this.setState({\r\n            ContractInfoModal: false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getPurchases()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirect) {\r\n            return <Redirect to={\"/seller/edit-property/\" + this.state.property_id} />;\r\n        }\r\n        if (this.state.goToNewContract) {\r\n            return <Redirect to={\"/agent/seller/purchase/contract\"} />;\r\n        }\r\n        return (\r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                     />\r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                        activePage=\"SellerPurchase\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Seller Purchase</h4>\r\n                                    <Button onClick={() => this.AddNewContract()} color=\"info\" className=\"px-3 btn-sm\">New Purchase Contract</Button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"contract_title\")}>Contract Title</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                <th > Document </th>\r\n                                                                <th  > Status </th>\r\n                                                                <th > Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.Purchases.length > 0 ?\r\n                                                                this.state.Purchases.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.contract_title}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {item.property_name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            <a href={item.document_url}> {item.file_name}</a>\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === null ?\r\n                                                                                    <label className=\"badge badge-danger \">Not Signed</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-danger \">Signed</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                        <Button\r\n                                                                                color='info'\r\n                                                                                style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                className=\" btn-rounded px-3 btn-sm mr-2\"\r\n                                                                                onClick={(e) => this.ContractInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.ContractInfoModal} toggle={() => this.ContractModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ContractModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.Purchases.length > 0 &&\r\n                            this.state.Purchases.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{\r\n                                            item.status === null ?\r\n                                                \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerContract\\ContractList.js",["844","845","846","847"],"\r\nimport React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport { APIURL } from '../../../../constants/common';\r\nimport axios from 'axios'\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from 'react-select'\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    },\r\n};\r\n\r\nexport default class ContractList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            propertyName: \"\",\r\n            AddpropertyModal: false,\r\n            Contract: [],\r\n            statusArray: [{ 'value': \"\", \"label\": \"All\" }, { 'value': \"signed\", \"label\": \"Signed\" }, { 'value': \"unsigned\", \"label\": \"Not Signed\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"All\" }],\r\n            property_id: \"\",\r\n            activePage: 1,\r\n            limit: 0,\r\n            totalItemsCount: 0,\r\n            search: \"\",\r\n            status: [],\r\n            sort: false,\r\n            sortby: \"DESC\",\r\n            columnName: \"\",\r\n            color: 'white',\r\n            contractId: \"\",\r\n            ContractInfoModal: false,\r\n            goToNewContract: false,\r\n            activeSide:false\r\n        }\r\n        this.SortBy = this.SortBy.bind(this);\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 400) {\r\n            this.setState({ color: 'black' })\r\n        } else {\r\n            this.setState({ color: 'white' })\r\n        }\r\n    }\r\n\r\n    SortBy(e) {\r\n        this.setState({\r\n            sort: !this.state.sort\r\n        }, () => {\r\n            if (this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"ASC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getContract()\r\n                })\r\n\r\n            }\r\n            if (!this.state.sort) {\r\n                this.setState({\r\n                    sortby: \"DESC\",\r\n                    columnName: e\r\n                }, () => {\r\n                    this.getContract()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch(e) {\r\n        this.setState(\r\n            { search: e.target.value, activePage: 1 }\r\n            , () => {\r\n                setTimeout(() => {\r\n                    this.getContract()\r\n                }, 300);\r\n            });\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                activePage: 1,\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            }\r\n            , () => { this.getContract() });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState(\r\n            { activePage: pageNumber }\r\n            , () => {\r\n                this.getContract()\r\n            }\r\n        );\r\n    }\r\n    // Name handler\r\n    handlechange(e) {\r\n        this.setState({\r\n            propertyName: e\r\n        })\r\n    }\r\n\r\n    getContract() {\r\n        this.setState({Loader:true})\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('page', this.state.activePage);\r\n        formData.append('search', this.state.search);\r\n        formData.append('statusfilter', this.state.status);\r\n        formData.append('sortby', this.state.sortby);\r\n        formData.append('limit', this.state.limit);\r\n        formData.append('sorttype', this.state.columnName);\r\n\r\n        axios\r\n            .post(APIURL + \"agent/get-contract-list-for-agent-buyer\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"agent/get-contract-list-for-agent\", response.data.data.data)\r\n                this.setState({\r\n                    Contract: response.data.data.data,\r\n                    activePage: response.data.data.current_page,\r\n                    totalItemsCount: response.data.data.total,\r\n                    limit: response.data.data.per_page,\r\n                    Loader:false\r\n                })\r\n            })\r\n    }\r\n\r\n    SubmitProperty = (e) => {\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.propertyName);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-add\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(\"property-add\", response.data.data.id)\r\n                localStorage.setItem(\"property_id\", response.data.data.id);\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    property_id: response.data.data.id,\r\n                    Loader: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    AddpropertyModal() {\r\n        this.setState({\r\n            AddpropertyModal: !this.state.AddpropertyModal\r\n        })\r\n    }\r\n    // AddpropertyModal close\r\n    ModalClose() {\r\n        this.setState({\r\n            AddpropertyModal: false\r\n        })\r\n    }\r\n\r\n    AddNewContract() {\r\n        this.setState({\r\n            goToNewContract: true\r\n        })\r\n    }\r\n\r\n    ContractInfoModal(e) {\r\n        this.setState({\r\n            ContractInfoModal: !this.state.ContractInfoModal,\r\n            contractId: e.id\r\n        })\r\n    }\r\n\r\n    ContractModalClose() {\r\n        this.setState({\r\n            ContractInfoModal: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getContract()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirect) {\r\n            return <Redirect to={\"/seller/edit-property/\" + this.state.property_id} />;\r\n        }\r\n        if (this.state.goToNewContract) {\r\n            return <Redirect to={\"/agent/contract/buyer\"} />;\r\n        }\r\n        return (\r\n            \r\n            <div className=\"resido-admin\">\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                <div className=\"container-scroller\">\r\n                    <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                    /> \r\n                    <div className=\"page-body-wrapper\">\r\n                        <Sidebar \r\n                       sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                        activePage=\"contractToBuyer\" />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Buyer Agent Contract</h4>\r\n                                    <Button onClick={() => this.AddNewContract()} color=\"info\" className=\"px-3 btn-sm\">New Contract</Button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 mb-sm-0 mb-lg-0 mb-md-0 mb-xl-0 mb-2\">\r\n                                        <Input type=\"text\" onChange={(e) => this.handleSearch(e)} placeholder=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"col-12 col-sm-6 col-lg-3 ml-auto\">\r\n                                        <Select\r\n                                            aria-label=\".form-select-lg example\"\r\n                                            required=\"\"\r\n                                            placeholder=\"Status\"\r\n                                            className=\"form-select-control\"\r\n                                            options={this.state.statusArray}\r\n                                            value={this.state.statusDefault}\r\n                                            styles={colourStyles}\r\n                                            onChange={(e) => this.handleStatus(e)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin mt-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"contract_title\")}>Contract Title</th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={(e) => this.SortBy(\"property_name\")}> Property Name </th>\r\n                                                                <th className=\"sort-by\" style={{ cursor: \"pointer\" }} onClick={() => this.SortBy(\"created_at\")} > Created Date </th>\r\n                                                                <th > Document </th>\r\n                                                                <th  > Status </th>\r\n                                                                <th > Action </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {this.state.Contract.length > 0 ?\r\n                                                                this.state.Contract.map((item, idx) => (\r\n                                                                    <tr key={idx} >\r\n                                                                        <td >\r\n                                                                            {item.contract_title}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {item.property_name}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            <a href={item.document_url}> {item.file_name}</a>\r\n                                                                        </td>\r\n                                                                        <td >\r\n                                                                            {\r\n                                                                                item.status === null ?\r\n                                                                                    <label className=\"badge badge-danger \">Not Signed</label>\r\n                                                                                    :\r\n                                                                                    <label className=\"badge badge-danger \">Signed</label>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            <Button\r\n                                                                                color='info'\r\n                                                                                style={{ backgroundColor: \"#198ae3\" }}\r\n                                                                                className=\" btn-rounded px-3 btn-sm mr-2\"\r\n                                                                                onClick={(e) => this.ContractInfoModal(item)}\r\n                                                                            >View</Button>\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )) :\r\n                                                                <tr  >\r\n                                                                    <td className=\"text-center\" colSpan=\"5\">\r\n                                                                        No Records\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {this.state.totalItemsCount > 0 &&\r\n                                        <div className=\"pagination-rounded\">\r\n                                            <Pagination\r\n                                                activePage={this.state.activePage}\r\n                                                itemsCountPerPage={this.state.limit}\r\n                                                totalItemsCount={this.state.totalItemsCount}\r\n                                                pageRangeDisplayed={5}\r\n                                                onChange={this.handlePageChange.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <footer className=\"footer\">\r\n                                <div className=\"container-fluid clearfix\">\r\n                                    <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © website.com 2021</span>\r\n                                </div>\r\n                            </footer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.ContractInfoModal} toggle={() => this.ContractModalClose()}>\r\n                    <ModalHeader className=\"header-less\" toggle={() => this.ContractModalClose()}>Contract Detail</ModalHeader>\r\n                    <ModalBody className=\"border-0 bg-white\">\r\n                        {this.state.Contract.length > 0 &&\r\n                            this.state.Contract.filter(data => data.id === this.state.contractId).map((item, idx) => (\r\n                                <div className=\"row\" >\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Contract Title</label>\r\n                                        <p>{item.contract_title}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\" >\r\n                                        <label className=\"fw-bold\">Property Name</label>\r\n                                        <p className='text-break'> {item.property_name}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Created Date</label>\r\n                                        <p>  {(item.created_at.split('T')[0]).split('-')[2]}-{(item.created_at.split('T')[0]).split('-')[1]}-{(item.created_at.split('T')[0]).split('-')[0]}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Status</label>\r\n                                        <p>{\r\n                                            item.status === null ?\r\n                                                \"Not Signed\"\r\n                                                :\r\n                                                \"Signed\"\r\n                                        }</p>\r\n                                    </div>\r\n                                    {/* <div className=\"col-6 col-lg-6\">\r\n                                        <label className=\"fw-bold\">Document</label>\r\n                                        <p> <a href='#'>{item.file_name}</a></p>\r\n                                    </div> */}\r\n                                    <div className=\"col-12 col-lg-12\">\r\n                                        <label className=\"fw-bold\">Description</label>\r\n                                        <p> {item.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\ContractForms\\BuyerContract\\BuyerContract.js",["848","849","850","851","852"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nimport Sidebar from '../../Sidebar'\r\nimport Navbar from '../../Navbar'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../constants/common';\r\nimport { Button, Input, Spinner } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isFocused ? \"#B8BCBD\" : null,\r\n            color: \"grey\",\r\n        };\r\n    }\r\n};\r\n\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusArray: [{ 'A': \"\", \"label\": \"A\" }, { 'value': \"B\", \"label\": \"B\" }, { 'value': \"C\", \"label\": \"C\" }],\r\n            statusDefault: [{ 'value': \"\", \"label\": \"Select Type\" }],\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            title: \"\",\r\n            description: \"\",\r\n            Document: \"\",\r\n            documentName: \"\",\r\n            userId: \"\",\r\n            propertyId: \"\",\r\n            languages: [],\r\n            selectecdLanguages: [],\r\n            countrycode: \"\",\r\n            buyerId: \"\",\r\n            buyerList: [],\r\n            Properties: [],\r\n            propertyId: \"\",\r\n            redirectback:false,\r\n            errMsg:\"\",\r\n            Loader:true,\r\n            activeSide:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBuyers()\r\n        this.getProperties()\r\n        window.scrollTo(0,0);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tLoader:false\r\n\t\t\t})\r\n\t\t}, 500);\r\n    }\r\n    sideMenu = (value) => {\r\n        this.setState({\r\n            activeSide:value\r\n        })\r\n    }\r\n\r\n    handleTitle = (e) => {\r\n        this.setState({\r\n            title: e\r\n        });\r\n    };\r\n    handleDescription = (e) => {\r\n        this.setState({\r\n            description: e\r\n        });\r\n    };\r\n\r\n    SelectedProperty = (SelectedProperty) => {\r\n        this.setState({\r\n            SelectedProperty: SelectedProperty\r\n        }); \r\n         this.getProperties()\r\n    }\r\n    handleStatus(e) {\r\n        this.setState(\r\n            {\r\n                status: e.value,\r\n                statusDefault: [{ value: e.value, label: e.label }]\r\n            });\r\n    }\r\n\r\n    getBuyers() {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        axios\r\n            .post(APIURL + \"agent/get-buyer-list\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    buyerList: response.data.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleBuyerName(e) {\r\n        this.setState({\r\n            buyerId: e\r\n        })\r\n    }\r\n\r\n    getProperties = () => {\r\n        var token = this.state.token\r\n        const formData = new FormData();\r\n        formData.append('user_id', this.state.user.id);\r\n        axios\r\n            .post(APIURL + \"agent/get-property-list-using-agent\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Properties: response.data.data\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                setTimeout(() => this.setState({ errMsg: \"\" }), 3000);\r\n            });\r\n    };\r\n    handlePropertyName(e) {\r\n        this.setState({\r\n            propertyId: e\r\n        }, () => {\r\n            this.getProperties()\r\n        })\r\n        console.log(\"propertyId\", this.state.propertyId)\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('contract_title', this.state.title);\r\n        formData.append('description', this.state.description);\r\n        formData.append('contract_type', \"agent_to_seller\");\r\n        formData.append('contract_document', this.state.document);\r\n        formData.append('property_id', this.state.propertyId);\r\n        formData.append('user_id', this.state.buyerId);\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"agent/send-contract\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    scsMsg: response.data.message,\r\n                    Loader: false,\r\n                     // redirectback: true\r\n                })\r\n                this.UpdateSuccessfully(this.state.scsMsg)\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    handleUploadDoc = (e) => {\r\n        this.setState({\r\n            document: e.target.files[0],\r\n            documentName: e.target.files[0].name\r\n        }, () => {\r\n            console.log(this.state.document)\r\n        })\r\n    }\r\n    UpdateSuccessfully = (e) => toast.success(e, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        icon: false,\r\n        theme: \"colored\",\r\n        onClose: () =>\r\n        this.setState({\r\n            redirectback: true\r\n        })\r\n        })\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/signin\" />;\r\n        }\r\n        if (this.state.user.user_type !== \"Agent\") {\r\n            return <Redirect to=\"/permission\" />;\r\n        }\r\n        if (this.state.redirectback) {\r\n            return <Redirect to=\"/agent/buyer/contract/list\" />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"container-scroller resido-admin\">\r\n                    {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                    <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                    <Navbar \r\n                    sideMenu={this.sideMenu.bind(this)}\r\n                    activeSide={this.state.activeSide}\r\n                    />\r\n                    <div className=\"container-fluid page-body-wrapper\">\r\n                        <Sidebar \r\n                        sideMenu={this.sideMenu.bind(this)}\r\n                        activeSide={this.state.activeSide}\r\n                        activePage=\"contractToBuyer\" \r\n                        />\r\n                        <div className=\"main-panel\">\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"mb-4 d-flex justify-content-between\">\r\n                                    <h4 className=\"text-uppercase\">Buyer Agent Contract</h4>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 grid-margin stretch-card\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <form className=\"forms-sample\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Contract Title <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"Contract Title\"\r\n                                                                    value={this.state.title}\r\n                                                                    onChange={(e) => this.handleTitle(e.target.value)}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.contract_title}</span>\r\n                                                            </div>\r\n                                                            {/* <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Select Type</label>\r\n                                                                <Select\r\n                                                                    aria-label=\".form-select-lg example\"\r\n                                                                    required=\"\"\r\n                                                                    placeholder=\"Select Type\"\r\n                                                                    className=\"form-select-control\"\r\n                                                                    options={this.state.statusArray}\r\n                                                                    value={this.state.statusDefault}\r\n                                                                    styles={colourStyles}\r\n                                                                    onChange={(e) => this.handleStatus(e)}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.profile_image}</span>\r\n                                                            </div> */}\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Buyer <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handleBuyerName(e.target.value)}  >\r\n                                                                            <option  >Select Buyer</option>\r\n                                                                            {this.state.buyerList.length > 0 ?\r\n                                                                                this.state.buyerList.map((item, idx) => (\r\n                                                                                    <option value={item.id} selected={item.id === 231}  >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.user_id}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label>Property <strong className=\"text-danger\" >*</strong></label>\r\n                                                                    <div className=\"input-with-icon\">\r\n                                                                        <select className=\"form-control\" id=\"dropdown\" onChange={(e) => this.handlePropertyName(e.target.value)}  >\r\n                                                                            <option>Select Property</option>\r\n                                                                            {this.state.Properties.length > 0 ?\r\n                                                                                this.state.Properties.map((item, idx) => (\r\n                                                                                    <option value={item.id} >{item.name}</option>\r\n                                                                                )) :\r\n                                                                                <span></span>\r\n                                                                            }\r\n                                                                        </select>\r\n                                                                        <span className=\"text-danger\">{this.state.errMsg.property_id}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-6 col-12\">\r\n                                                                <label>Upload Document <strong className=\"text-danger\" >*</strong></label>\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <Input\r\n                                                                        type=\"file\"\r\n                                                                        onChange={this.handleUploadDoc}\r\n                                                                        className=\"form-control\"\r\n                                                                        id=\"fileinput\"\r\n                                                                        style={{ height: \"100%\" }}\r\n                                                                    />\r\n                                                                    <span className=\"text-danger\">{this.state.errMsg.contract_document}</span>\r\n                                                                    <span>(Only pdf and docx file format)</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group col-lg-12 col-12\">\r\n                                                                <label htmlFor=\"exampleInputName1\">Description</label>\r\n                                                                <textarea\r\n                                                                    className=\"form-control\"\r\n                                                                    required=\"\"\r\n                                                                    type=\"textarea\"\r\n                                                                    name=\"name\"\r\n                                                                    rows={5}\r\n                                                                    placeholder=\"Description\"\r\n                                                                    value={this.state.description}\r\n                                                                    onChange={(e) => this.handleDescription(e.target.value)}\r\n                                                                />\r\n                                                                <span className=\"text-danger\">{this.state.errMsg.profile_image}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                         <Button\r\n                                                            color=\"info\"\r\n                                                            className=\"btn btn-info mr-2\"\r\n                                                            onClick={() => this.onSubmitHandler()}\r\n                                                        >Send Contract</Button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Navbar.js",["853","854","855","856","857","858","859","860"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Admin\\Sidebar.js",["861","862","863","864"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Navbar.js",["865","866","867","868","869","870","871","872"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Agent\\Sidebar.js",["873","874","875","876","877","878"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Header.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Navbar.js",["879","880","881","882"],"import React, { Component } from 'react'\r\nimport { Link ,Redirect } from 'react-router-dom'\r\nimport logo from '../../../assets/img/logo.png'\r\nimport logoMini from '../../../assets/img/logo-mini.png'\r\nimport face1 from '../../../assets/images/faces/dummy.png'\r\nimport {Button} from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../components/constants/common';\r\n\r\nexport default class Navbar extends Component {\r\n\tconstructor() {\r\n        super();\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            navigate: false,\r\n            redirectToHome:false\r\n        }\r\n    }\r\n \r\n\r\n    onLogoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n    };\r\n\r\n    SwitchUser = () => {\r\n         if (this.state.user) {\r\n            const formData = new FormData();\r\n             var token = this.state.token\r\n            var app_url = APIURL+\"buyer/switch-to-seller\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    localStorage.setItem(\"isLoggedIn\", true);\r\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n                    localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n                    localStorage.setItem(\"user_type\", JSON.stringify(response.data.user.switch_user_type));\r\n                   this.setState({\r\n                        redirectToHome:true\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    toggle(){\r\n\t\tthis.setState({\r\n\t\t\tportrait:!this.state.portrait\r\n\t\t})\r\n\t}\t\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n\r\n        if (this.state.navigate) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        if (this.state.redirectToHome) {\r\n            return <Redirect to=\"/seller\" push={true} />;\r\n        }\r\n\t\tconst {user_type} = this.state\r\n\t\treturn (\r\n\t\t\t<>\r\n        \t\t<div className=\"header header-light head-shadow\">\r\n                    <div className=\"container\">\r\n                    <nav id=\"navigation\" className={this.state.portrait ? \"navigation navigation-portrait\":\"navigation navigation-landscape\"}>\r\n\t\t\t\t\t\t\t<div className=\"nav-header\">\r\n\t\t\t\t\t\t\t\t{/* <Link className=\"nav-brand static-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link> */}\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand fixed-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<div onClick={() => this.toggle()} className=\"nav-toggle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={this.state.portrait ? \"nav-menus-wrapper-open nav-menus-wrapper\": \"nav-menus-wrapper\"} style={{ transitionProperty: this.state.portrait ? \"left\" : \"none\" }}>\r\n\t\t\t\t\t\t\t\t<span class=\"nav-menus-wrapper-close-button\" onClick={() => this.toggle()}>✕</span>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"active\"><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t{!this.state.disableWishList ? <li><Link to=\"/buyer/wishlist\">Wishlist</Link></li> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.portrait ? \r\n\t\t\t\t\t\t\t\t<div className='nav-overlay-panel'></div>\r\n\t\t\t\t\t\t\t\t:\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n                    </div>\r\n                </div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Sidebar.js",["883","884","885","886","887","888"],"import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from \"axios\";\r\nimport face1 from '../../../assets/images/faces/dummy.png'\r\nimport { APIURL } from '../../../components/constants/common';\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Collapse, Button } from 'reactstrap';\r\n\r\nexport default class Sidebar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: localStorage.getItem(\"user_type\"),\r\n            navigate: false,\r\n            profile_image: \"\",\r\n            NoImage: false,\r\n            ActiveIcon: true,\r\n            activetabb: true,\r\n            activetab: false,\r\n            DocMenuIcon: true,\r\n            DocSubMenu: true,\r\n            activeDocIcon: false,\r\n            checked: false,\r\n            redirectToHome: false,\r\n            switch: false,\r\n            switchModal: false,\r\n            toggle: false\r\n        }\r\n    }\r\n\r\n    activetab = () => {\r\n        this.setState({\r\n            activetab: !this.state.activetab\r\n        })\r\n    }\r\n    activetabb = () => {\r\n        this.setState({\r\n            activetabb: !this.state.activetabb,\r\n            ActiveIcon: !this.state.ActiveIcon\r\n        })\r\n    }\r\n\r\n    activeDocIcon = () => {\r\n        this.setState({\r\n            activeDocIcon: !this.state.activeDocIcon\r\n        })\r\n    }\r\n    DocSubMenu = () => {\r\n        this.setState({\r\n            DocSubMenu: !this.state.DocSubMenu,\r\n            DocMenuIcon: !this.state.DocMenuIcon\r\n        })\r\n    }\r\n\r\n    onLogoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n    };\r\n\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"agent/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        profile_image: response.data.data.url_path,\r\n                        name: response.data.data.fullName,\r\n                        NoImage: true\r\n                    })\r\n                    console.log(\"bjsbvjx\", this.state.profile_image)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    handleSwitchUser = () => {\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        }, () => {\r\n            setTimeout(() => {\r\n                if (this.state.checked) {\r\n                    this.SwitchModalOpen()\r\n                }\r\n            }, 500);\r\n\r\n        })\r\n    }\r\n\r\n    SwitchModalOpen = () => {\r\n        this.setState({\r\n            switchModal: !this.state.switchModal,\r\n        })\r\n    }\r\n    ModalClose = () => {\r\n        this.setState({\r\n            switchModal: !this.state.switchModal,\r\n            checked: !this.state.checked\r\n        })\r\n    }\r\n\r\n    SwitchUser = () => {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"buyer/switch-to-seller\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    localStorage.setItem(\"isLoggedIn\", true);\r\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n                    localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n                    localStorage.setItem(\"user_type\", JSON.stringify(response.data.user.switch_user_type));\r\n                    this.setState({\r\n                        redirectToHome: true\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggleFunChild(false)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProfileInfo()\r\n    }\r\n\r\n    render() {\r\n        const { user, name, activetab } = this.state\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n\r\n        if (this.state.navigate) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        if (this.state.redirectToHome) {\r\n            return <Redirect to=\"/seller\" push={true} />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className={this.state.toggle ? \"simple-sidebar sm-sidebar\" : this.props.toggle ? \"simple-sidebar sm-sidebar d-block \" : \"simple-sidebar sm-sidebar\"} id=\"filter_search\">\r\n                    <div class=\"search-sidebar_header\">\r\n                        <h4 class=\"ssh_heading\">Close Filter</h4>\r\n                        <button onClick={() => this.toggle()} class=\"w3-bar-item w3-button w3-large\"><i class=\"ti-close\"></i></button>\r\n                    </div>\r\n                    <div className=\"sidebar-widgets\">\r\n                        <div className=\"dashboard-navbar\">\r\n                            <div className=\"d-user-avater\">\r\n                                {\r\n                                    this.state.NoImage &&\r\n                                    <img src={this.state.profile_image !== \"\" ? this.state.profile_image : face1} alt=\"profile\" />\r\n                                }\r\n                                <h4>{name}</h4>\r\n                            </div>\r\n                            <div className=\"buy-sell-switch\">\r\n                                <span className=''>Buy</span>\r\n                                <div className=\"form-check form-switch p-0\">\r\n                                    <input\r\n                                        className=\"form-check-input mx-2\"\r\n                                        type=\"checkbox\"\r\n                                        id=\"flexSwitchCheckChecked\"\r\n                                        checked={this.state.checked}\r\n                                        onClick={() => this.handleSwitchUser()}\r\n                                    />\r\n                                </div>\r\n                                <span>Sell</span>\r\n                            </div>\r\n                            <div className=\"d-navigation\">\r\n                                <ul>\r\n                                    <li className={this.props.activePage === \"dashboard\" ? \"active\" : \"\"}><Link to=\"/buyer\"><i className=\"ti-dashboard\"></i>Dashboard</Link></li>\r\n\r\n                                    <li className={this.props.activePage === \"wishlist\" ? \"active\" : \"\"}><Link to=\"/buyer/wishlist\"><i className=\"ti-heart\"></i>Wishlist</Link></li>\r\n                                    <li\r\n                                        className={this.props.activePage === \"contact_enquiry\" || this.props.activePage === \"take_tour\" ? \"nav-item active\" : \"nav-item\"}\r\n                                        onMouseOver={() => this.activetab()}\r\n                                        onMouseOut={() => this.activetab()}\r\n                                        onClick={() => this.activetabb()}\r\n                                    >\r\n                                        <Link id=\"Property\" className=\"nav-link w-100\" to=\"#\">\r\n                                            <i className=\"far fa-building\"></i>Property Enquiry\r\n                                            {this.state.ActiveIcon ? <i className=\"fas fa-chevron-up menu-icon ml-5 mt-1 float-end\"></i> : <i className=\"fas fa-chevron-down menu-icon mt-1 float-end\"></i>}\r\n                                        </Link>\r\n                                        <Collapse className=\"ml-3\" isOpen={this.state.activetabb}>\r\n                                            <Link id=\"Enquiry\" className={this.props.activePage === \"contact_enquiry\" ? \"nav-link active\" : \"nav-link\"} to=\"/agent/enquiry\">\r\n                                                <li className={this.props.activePage === \"enquiry\" ? \"active\" : \"p-0\"}><Link to=\"/buyer/contact/enquiry\"><i className=\"far fa-address-book\"></i>Contact Agent Enquiry</Link></li>\r\n                                            </Link>\r\n                                            <Link id=\"Enquiry\" className={this.props.activePage === \"take_tour\" ? \"nav-link active\" : \"nav-link\"} to=\"/agent/enquiry/tour\">\r\n                                                <li className={this.props.activePage === \"taketour\" ? \"active\" : \"p-0\"}><Link to=\"/buyer/taketour/enquiry\"><i className=\"fas fa-handshake\"></i>Take A Tour Enquiry</Link></li>\r\n                                            </Link>\r\n                                        </Collapse>\r\n                                    </li>\r\n                                    <li className={this.props.activePage === \"profile\" ? \"active\" : \"\"}><Link to=\"/buyer/Profile\"><i className=\"ti-user\"></i>My Profile</Link></li>\r\n                                    <li className={this.props.activePage === \"changepassword\" ? \"active\" : \"\"}><Link to=\"/buyer/changepassword\"><i className=\"ti-unlock\"></i>Change Password</Link></li>\r\n                                    <li\r\n                                        className={this.props.activePage === \"buyerAgentContract\" || this.props.activePage === \"buyerPurchase\" ? \"nav-item active\" : \"nav-item\"}\r\n                                        onMouseOver={() => this.activeDocIcon()}\r\n                                        onMouseOut={() => this.activeDocIcon()}\r\n                                        onClick={() => this.DocSubMenu()}\r\n                                    >\r\n                                        <Link id=\"Property\" className=\"nav-link w-100\" to=\"#\">\r\n                                            <i className=\"far fa-building\"></i>Contract Form\r\n                                            {this.state.DocMenuIcon ? <i className=\"fas fa-chevron-up menu-icon ml-5 mt-1 float-end\"></i> : <i className=\"fas fa-chevron-down menu-icon mt-1 float-end\"></i>}\r\n                                        </Link>\r\n                                        <Collapse className=\"ml-3\" isOpen={this.state.DocSubMenu}>\r\n                                            <Link id=\"Enquiry\" className={this.props.activePage === \"buyerAgentContract\" ? \"nav-link active\" : \"nav-link\"} to=\"/buyer/contract/list\">\r\n                                                <li className={this.props.activePage === \"enquiry\" ? \"active\" : \"p-0\"}><span ><i className=\"far fa-address-book\"></i>Buyer-Agent Contract</span></li>\r\n                                            </Link>\r\n                                            <Link id=\"Enquiry\" className={this.props.activePage === \"buyerPurchase\" ? \"nav-link active\" : \"nav-link\"} to=\"/buyer/purchase/contract/list\">\r\n                                                <li className={this.props.activePage === \"taketour\" ? \"active\" : \"p-0\"}><span><i className=\"fas fa-handshake\"></i>Buyer Purchase</span></li>\r\n                                            </Link>\r\n                                        </Collapse>\r\n                                    </li>\r\n                                    <li className={this.props.activePage === \"logout\" ? \"active\" : \"\"}><Link to=\"#\" onClick={() => this.onLogoutHandler()}><i className=\"ti-power-off\"></i>Log Out</Link></li>\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.switchModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body text-center\">\r\n                            Please confirm if you want to switch your profile and become property seller.\r\n                        </div>\r\n                    </div>\r\n                    <ModalFooter>\r\n                        <div className=\"d-flex justify-content-between w-100\">\r\n                            <Button color=\"success\" onClick={() => this.SwitchUser()}>Confirm</Button>\r\n                            <Button color=\"danger\" onClick={() => this.ModalClose()}>Cancel </Button>\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Buyer\\Footer.js",["889","890","891","892","893","894","895","896"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../../../assets/img/logo.png'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"theme-bg call-to-act-wrap\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"call-to-act\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"call-to-act-head\">\r\n\t\t\t\t\t\t\t\t\t\t<h3>Want to Become a Real Estate Agent?</h3>\r\n\t\t\t\t\t\t\t\t\t\t<span>We'll help you to border your career and borderth.</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" className=\"btn btn-call-to-act\">SignUp Today</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<footer className=\"dark-footer skin-dark-footer\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-4 col-12\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t<img src={logo} className=\"img-footer\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"footer-add\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>Collins Street West, Victoria 8007, Australia.</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>+1 246-345-0695</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>info@example.com</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-2 col-md-6 col-12\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"widget-title\">My Account</h4>\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"footer-menu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/checkuser\">My Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/buyer/wishlist\">WishList</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-3 col-md-4 col-12\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"widget-title\">Navigations</h4>\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"footer-menu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/About\">About Us</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <li><Link to=\"#\">Checkout</Link></li> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <li><Link to=\"#\">Enquiry</Link></li> */}\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-3 col-md-4 col-12\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"widget-title\">Connect</h4>\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"footer-menu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-facebook mr-2\"></i>Facebook</a></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-twitter mr-2\"></i>Twitter</a></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-instagram mr-2\"></i>Instagram</a></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-linkedin mr-2\"></i>Linkdin</a></li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"footer-bottom\">\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"row align-items-center\">\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">© 2021 Resido. Designd By <a href=\"https://themezhub.com\">Themez Hub</a> All Rights Reserved</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-6 text-right\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"footer-bottom-social float-end\">\r\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"ti-facebook\"></i></a></li>\r\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"ti-twitter\"></i></a></li>\r\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"ti-instagram\"></i></a></li>\r\n\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"ti-linkedin\"></i></a></li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Navbar.js",["897","898","899","900","901","902","903"],"import React, { Component } from 'react'\r\nimport logo from '../../../assets/img/logo.png'\r\nimport logoMini from '../../../assets/img/logo-mini.png'\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar'\r\nimport { Button, Modal, ModalFooter } from 'reactstrap'\r\nimport { APIURL, BASEURL } from '../../../components/constants/common';\r\n\r\nexport default class Navbar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            sidebarClass: \"sidebar-icon-only\",\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            navigate: false,\r\n            profile_image: \"\",\r\n            openSidebar: false,\r\n            redirectToHome: false,\r\n            switchModal: false,\r\n           \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProfileInfo()\r\n    }\r\n\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"agent/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        profile_image: response.data.data.url_path,\r\n                        name: response.data.data.name\r\n                    })\r\n                    console.log(\"bjsbvjx\", this.state.profile_image)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    onLogoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n    };\r\n\r\n    onHover = () =>\r\n        this.setState({\r\n            showIcons: true\r\n        });\r\n    onNotHover = () =>\r\n        this.setState({\r\n            showIcons: false\r\n        });\r\n\r\n        Sidebar = () => {\r\n            if (document.body.classList.contains(this.state.sidebarClass)) {\r\n                document.body.classList.remove('sidebar-icon-only');\r\n                return false\r\n            }\r\n            if (!document.body.classList.contains(this.state.sidebarClass)) {\r\n                document.body.classList.add('sidebar-icon-only');\r\n                return false\r\n            }\r\n        }\r\n    goToHome() {\r\n        window.location.href = \"/\";\r\n    }\r\n    SwitchModalOpen = () => {\r\n        this.setState({\r\n            switchModal: !this.state.switchModal,\r\n        })\r\n    }\r\n    ModalClose = () => {\r\n        this.setState({\r\n            switchModal: !this.state.switchModal,\r\n            checked: !this.state.checked\r\n        })\r\n    }\r\n\r\n    SwitchUser = () => {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"seller/switch-to-buyer\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    localStorage.setItem(\"isLoggedIn\", true);\r\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\r\n                    localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n                    localStorage.setItem(\"user_type\", JSON.stringify(response.data.user.switch_user_type));\r\n                    this.setState({\r\n                        redirectToHome: true\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    resSidebar = () => {\r\n        this.setState({\r\n            activeSide:!this.state.activeSide\r\n        },()=>{\r\n            this.props.sideMenu(this.state.activeSide)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { openSidebar, closeSidebar, redirectToHome } = this.state\r\n        const { user, name } = this.state\r\n        // if(this.state.user_type !== \"Seller\"){\r\n        //     return <Redirect to=\"/permission\" />;\r\n        // }\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n\r\n        if (redirectToHome) {\r\n            return <Redirect to=\"/buyer\" push={true} />;\r\n        }\r\n\r\n        if (this.state.navigate) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"d-none\" >\r\n                    <Sidebar\r\n                        // res_Active=\"hjdgsgdshgd\"\r\n                    />\r\n                </div>\r\n                <nav className=\"navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n                    <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n                        <button className=\"navbar-brand brand-logo\" ><img src={logo} alt=\"logo\" /></button>\r\n                        <Link className=\"navbar-brand brand-logo-mini\" to=\"#\"><img src={logoMini} alt=\"logo\" /></Link>\r\n                    </div>\r\n                    <div className=\"navbar-menu-wrapper d-flex align-items-stretch\">\r\n                        <div className=\"mt-3\">\r\n                            {openSidebar ?\r\n                                <span className=\" navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\r\n                                    <span onClick={() => this.Sidebar()} className=\"fas fa-bars\"></span>\r\n                                </span>\r\n                                :\r\n                                <span className=\" navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\r\n                                    <span onClick={() => this.Sidebar()} className=\"fas fa-bars\"></span>\r\n                                </span>\r\n                            }\r\n                        </div>\r\n                        <ul className=\"navbar-nav navbar-nav-right\">\r\n                            <li className=\"nav-item nav-logout  d-lg-block \">\r\n                                <a className=\"nav-link \">\r\n                                    <Button size='sm' className='btn btn-info btn-rounded' onClick={() => this.SwitchModalOpen()}>Switch To Buyer</Button>\r\n                                    <i data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" title=\"Logout\" onClick={() => this.onLogoutHandler()} className=\"mdi mdi-power\">  </i>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item nav-logout d-lg-block\">\r\n                                <a className=\"nav-link\" href=\"#\" onClick={() => this.onLogoutHandler()} >\r\n                                    <strong>Logout</strong>\r\n                                    <i data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" title=\"Logout\" onClick={() => this.onLogoutHandler()} className=\"mdi mdi-power\">  </i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <button onClick={() => this.resSidebar()} className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n                            <span className=\"fas fa-bars\"></span>\r\n                        </button>\r\n                    </div>\r\n                    <Modal className=\"resido-admin\" size=\"md\" isOpen={this.state.switchModal} toggle={() => this.ModalClose()} autoFocus={false}>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                                Please confirm if you want to switch your profile and become property buyer.\r\n                            </div>\r\n                        </div>\r\n                        <ModalFooter>\r\n                            <div className=\"d-flex justify-content-between w-100\">\r\n                                <Button color=\"success\" onClick={() => this.SwitchUser()}>Confirm</Button>\r\n                                <Button color=\"danger\" onClick={() => this.ModalClose()}>Cancel </Button>\r\n                            </div>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </nav>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Sidebar.js",["904","905","906","907","908","909"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Features.js",["910","911","912","913"],"import React, { Component } from 'react'\r\nimport { Button ,Spinner } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../components/constants/common';\r\n\r\nexport default class PropertyInfo extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            listingPrice: \"\",\r\n            hoa_free: \"\",\r\n            featureTypeId: \"\",\r\n            countryId: \"\",\r\n            countries_name: [],\r\n            Languages: [],\r\n            Countries: [],\r\n            States: [],\r\n            state_name: [],\r\n            state: \"\",\r\n            name: \"\",\r\n            image: \"\",\r\n            selectType: \"\",\r\n            errMsg: {},\r\n            scsMsg: \"\",\r\n            country_id: \"\",\r\n            flooring: \"\",\r\n            fireplace: \"\",\r\n            swimmingPool: \"\",\r\n            Loader:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFeaturesInfo()\r\n    }\r\n    handleListingPrice = (e) =>{\r\n        this.setState({listingPrice:e})\r\n    }\r\n    handleHoa = (e) =>{\r\n        this.setState({hoa_free:e})\r\n    }\r\n    handleFlooring = (e) => {\r\n        this.setState({  flooring:e })\r\n    }\r\n\r\n    handleFeatureType(e) {\r\n        this.setState({ featureTypeId: e })\r\n    }\r\n    handleTotalBedrooms = (e) => {\r\n        this.setState({ totalBedRooms: e })\r\n    }\r\n\r\n    handleTotalBathRooms = (e) => {\r\n        this.setState({  totalBathRooms: e })\r\n    }\r\n    handleFullBath = (e) => {\r\n        this.setState({ fullBath: e })\r\n    }\r\n    handleHalfBath = (e) => {\r\n        this.setState({ halfBath: e })\r\n    }\r\n    handleCooling = (e) => {\r\n        this.setState({ cooling: e })\r\n    }\r\n    handleHeating = (e) => {\r\n        this.setState({ heating: e })\r\n    }\r\n    handleParkingSpace = (e) => {\r\n        this.setState({ parkingSpace: e })\r\n    }\r\n    \r\n    handleWalkout = (e) => {\r\n        this.setState({\r\n            walkout: e\r\n        })\r\n    }\r\n    handleStoryHouse = (e) => {\r\n        this.setState({\r\n            storiesOfHouse: e\r\n        })\r\n    }\r\n    handleFinished = (e) => {\r\n        this.setState({\r\n            finished:e\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this.props.data.handleActiveTab(\"4\");\r\n    }\r\n\r\n    getFeaturesInfo() {\r\n        if (this.state.user) {\r\n            this.setState({Loader:true})\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.props.data.property_id);\r\n            var token = this.state.token\r\n            axios\r\n                .post(APIURL + \"seller/property-features-edit\", formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    // this.setState({\r\n                    //     listingPrice:info.listing_price === \"0.00\" ? \"\" :info.listing_price,\r\n                    //     hoa_free: info.hoa_free,\r\n                    //     featureTypeId:info.feature_type,\r\n                    //     totalBedRooms:info.total_bedrooms,\r\n                    //     totalBathRooms:info.total_bathrooms,\r\n                    //     fullBath:info.full_bath,\r\n                    //     halfBath:info.half_bath,\r\n                    //     cooling:info.cooling,\r\n                    //     heating:info.heating,\r\n                    //     parkingSpace:info.parking_space,\r\n                    //     walkout:info.walkout,\r\n                    //     storiesOfHouse:info.stories_of_the_house,\r\n                    //     finished:info.finished\r\n                    // })\r\n                    this.setState({\r\n                        listingPrice:info.listing_price === \"0.00\" ? \"\" :info.listing_price,\r\n                        hoa_free: info.hoa_free,\r\n                        featureTypeId:info.feature_type === \"undefined\" ? \"\" :info.feature_type,\r\n                        totalBedRooms:info.total_bedrooms === \"null\" ? \"\" :info.total_bedrooms,\r\n                        totalBathRooms:info.total_bathrooms === \"null\" ? \"\" :info.total_bathrooms,\r\n                        fullBath:info.full_bath === \"null\" ? \"\" :info.full_bath,\r\n                        halfBath:info.half_bath === \"null\" ? \"\" :info.half_bath,\r\n                        cooling:info.cooling === \"null\" ? \"\" :info.cooling,\r\n                        heating:info.heating === \"null\" ? \"\" :info.heating,\r\n                        parkingSpace:info.parking_space === \"null\" ? \"\" :info.parking_space,\r\n                        walkout:info.walkout === \"null\" ? \"\" :info.walkout,\r\n                        storiesOfHouse:info.stories_of_the_house === \"null\" ? \"\" :info.stories_of_the_house,\r\n                        finished:info.finished === \"null\" ? \"\" :info.finished,\r\n                        flooring: info.flooring === \"null\" ? \"\" :info.flooring,\r\n                        fireplace: info.fireplace === \"null\" ? \"\" :info.fireplace,\r\n                        swimmingPool: info.swimming_pool === \"null\" ? \"\" :info.swimming_pool,\r\n                        Loader:false\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    \r\n    handleFlooring(e) {\r\n        this.setState({\r\n            flooring: e\r\n        })\r\n    }\r\n    handleFirePlace(e) {\r\n        this.setState({\r\n            fireplace: e\r\n        })\r\n    }\r\n    handlePool(e) {\r\n        this.setState({\r\n            swimmingPool: e\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('listing_price', this.state.listingPrice);\r\n        formData.append('hoa_free', this.state.hoa_free);\r\n        formData.append('feature_type', this.state.featureTypeId);\r\n        formData.append('total_bedrooms', this.state.totalBedRooms);\r\n        formData.append('total_bathrooms', this.state.totalBathRooms);\r\n        formData.append('full_bath', this.state.fullBath);\r\n        formData.append('half_bath', this.state.halfBath);\r\n        formData.append('cooling', this.state.cooling);\r\n        formData.append('heating', this.state.heating);\r\n        formData.append('parking_space', this.state.parkingSpace);\r\n        formData.append('walkout', this.state.walkout);\r\n        formData.append('finished', this.state.finished);\r\n        formData.append('stories_of_the_house', this.state.storiesOfHouse);\r\n        formData.append('property_id', this.props.data.property_id);\r\n        formData.append('flooring', this.state.flooring);\r\n        formData.append('fireplace', this.state.fireplace);\r\n        formData.append('swimming_pool', this.state.swimmingPool);\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-features-update\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    errMsg: {},\r\n                    Loader:false\r\n                }, () => {\r\n                    this.props.data.handleActiveTab(\"4\");\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    onSaveHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('listing_price', this.state.listingPrice);\r\n        formData.append('hoa_free', this.state.hoa_free);\r\n        formData.append('feature_type', this.state.featureTypeId);\r\n        formData.append('total_bedrooms', this.state.totalBedRooms);\r\n        formData.append('total_bathrooms', this.state.totalBathRooms);\r\n        formData.append('full_bath', this.state.fullBath);\r\n        formData.append('half_bath', this.state.halfBath);\r\n        formData.append('cooling', this.state.cooling);\r\n        formData.append('heating', this.state.heating);\r\n        formData.append('parking_space', this.state.parkingSpace);\r\n        formData.append('walkout', this.state.walkout);\r\n        formData.append('finished', this.state.finished);\r\n        formData.append('stories_of_the_house', this.state.storiesOfHouse);\r\n        formData.append('property_id', this.props.data.property_id);\r\n        formData.append('flooring', this.state.flooring);\r\n        formData.append('fireplace', this.state.fireplace);\r\n        formData.append('swimming_pool', this.state.swimmingPool);\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-features-update\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    errMsg: {},\r\n                    Loader:false\r\n                }, () => {\r\n                    // this.props.data.handleActiveTab(\"4\");\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    render() {\r\n        console.log(this.props.data.property_id)\r\n        return (\r\n            <>\r\n             {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                {this.state.errMsg.message ?\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {this.state.errMsg.message}\r\n               </div>\r\n               :\"\"} \r\n                <div className=\"card mt-1\">\r\n                <div className='position-absolute top-0 end-0'>\r\n                        <Button onClick={(e) => this.onSaveHandler()}  className='btn-sm px-4 btn-rounded btn btn-info'>Save</Button>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <form className=\"forms-sample \">\r\n                            <div className=\"mb-3 border-bottom\">\r\n                                <label className=\"card-title \">Type</label>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                 {/* Sub Heading */}\r\n                                 \r\n                                 {/* Sub Heading end */}\r\n                                \r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Type</label>\r\n                                    <select className=\"form-control\" value={this.state.featureTypeId} onChange={(e) => this.handleFeatureType(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\" >Condo</option>\r\n                                        <option value=\"1\">Apartment</option>\r\n                                        <option value=\"2\" >Single Family</option>\r\n                                        <option value=\"3\">Townhouse</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.number_of_bedrooms}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Parking Space <strong className=\"text-danger\" >*</strong></label>\r\n                                    <select className=\"form-control\" value={this.state.parkingSpace} onChange={(e) => this.handleParkingSpace(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\">1</option>\r\n                                        <option value=\"1\">2</option>\r\n                                        <option value=\"2\">3</option>\r\n                                        <option value=\"3\">4</option>\r\n                                        <option value=\"4\">5</option>\r\n                                        <option value=\"5\">6</option>\r\n                                        <option value=\"6\">7</option>\r\n                                        <option value=\"7\">8</option>\r\n                                        <option value=\"8\">9</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.parking_space}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Stories Of The House</label>\r\n                                    <select className=\"form-control\" value={this.state.storiesOfHouse} onChange={(e) => this.handleStoryHouse(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\">1</option>\r\n                                        <option value=\"1\">2</option>\r\n                                        <option value=\"2\">3</option>\r\n                                        <option value=\"3\">4</option>\r\n                                        <option value=\"4\">5</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.stories_of_the_house}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Cooling</label>\r\n                                    <select className=\"form-control\" value={this.state.cooling} onChange={(e) => this.handleCooling(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\">No</option>\r\n                                        <option value=\"1\">Yes</option>\r\n\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.number_of_bedrooms}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Heating</label>\r\n                                    <select className=\"form-control\" value={this.state.heating} onChange={(e) => this.handleHeating(e.target.value)} >\r\n                                        <option >Select</option>\r\n                                        <option value=\"0\">Electric</option>\r\n                                        <option value=\"1\">Nature Gas</option>\r\n                                        <option value=\"2\">Propane</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.heating}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">HOA Free</label>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"text\"\r\n                                        name=\"streetName\"\r\n                                        placeholder=\"HOA Free\"\r\n                                        value={this.state.hoa_free}\r\n                                        onChange={(e) => this.handleHoa(e.target.value)}\r\n                                    />\r\n                                     <span className=\"text-danger\">{this.state.errMsg.number_of_bedrooms}</span>\r\n                                </div>\r\n                                <div className=\"my-1 col-12\">\r\n                                    <label className=\"pb-3 card-title border-bottom w-100\">Bedroom and Bathroom </label>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Total Bedrooms<strong className=\"text-danger\" >*</strong></label>\r\n                                    <select className=\"form-control\" value={this.state.totalBedRooms} onChange={(e) => this.handleTotalBedrooms(e.target.value)} >\r\n                                    <option value=\"\">Select</option>\r\n                                        <option value=\"0\">1</option>\r\n                                        <option value=\"1\">2</option>\r\n                                        <option value=\"2\">3</option>\r\n                                        <option value=\"3\">4</option>\r\n                                        <option value=\"4\">5</option>\r\n                                        <option value=\"5\">6</option>\r\n                                        <option value=\"6\">7</option>s\r\n                                        <option value=\"7\">8</option>\r\n                                        <option value=\"8\">9</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.total_bedrooms}</span>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group col-6 \">\r\n                                    <label htmlFor=\"exampleInputName1\">Total Bathrooms <strong className=\"text-danger\" >*</strong></label>\r\n                                    <select className=\"form-control\" value={this.state.totalBathRooms} onChange={(e) => this.handleTotalBathRooms(e.target.value)} >\r\n                                    <option value=\"\">Select</option>\r\n                                        <option value=\"0\">1</option>\r\n                                        <option value=\"1\">2</option>\r\n                                        <option value=\"2\">3</option>\r\n                                        <option value=\"3\">4</option>\r\n                                        <option value=\"4\">5</option>\r\n                                        <option value=\"5\">6</option>\r\n                                        <option value=\"6\">7</option>\r\n                                        <option value=\"7\">8</option>\r\n                                        <option value=\"8\">9</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.total_bathrooms}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Full Bath</label>\r\n                                    <select className=\"form-control\" value={this.state.fullBath} onChange={(e) => this.handleFullBath(e.target.value)} >\r\n                                    <option value=\"\">Select</option>\r\n                                        <option value=\"0\">1</option>\r\n                                        <option value=\"1\">2</option>\r\n                                        <option value=\"2\">3</option>\r\n                                        <option value=\"3\">4</option>\r\n                                        <option value=\"4\">5</option>\r\n                                        <option value=\"5\">6</option>\r\n                                        <option value=\"6\">7</option>\r\n                                        <option value=\"7\">8</option>\r\n                                        <option value=\"8\">9</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.number_of_bedrooms}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Half Bath</label>\r\n                                    <select className=\"form-control\" value={this.state.halfBath} onChange={(e) => this.handleHalfBath(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\">1</option>\r\n                                        <option value=\"1\">2</option>\r\n                                        <option value=\"2\">3</option>\r\n                                        <option value=\"3\">4</option>\r\n                                        <option value=\"4\">5</option>\r\n                                        <option value=\"5\">6</option>\r\n                                        <option value=\"6\">7</option>\r\n                                        <option value=\"7\">8</option>\r\n                                        <option value=\"8\">9</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.number_of_bedrooms}</span>\r\n                                </div>\r\n                               {/* Sub Heading */}\r\n                                <div className=\"my-1 col-12\">\r\n                                    <label className=\"pb-3 card-title border-bottom w-100\">Basement </label>\r\n                                </div>\r\n                                 {/* Sub Heading end */}\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Finished</label>\r\n                                    <select className=\"form-control\"  value={this.state.finished} onChange={(e) => this.handleFinished(e.target.value)} >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"0\">No</option>\r\n                                        <option value=\"1\">Yes</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.finished}</span>\r\n                                   \r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Walkout</label>\r\n                                    <select className=\"form-control\" value={this.state.walkout} onChange={(e) => this.handleWalkout(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\">No</option>\r\n                                        <option value=\"1\">Yes</option>\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.Walkout}</span>\r\n                                </div>\r\n                                <div className=\"my-1 col-12\">\r\n                                    <label className=\"pb-3 card-title border-bottom w-100\">Flooring</label>\r\n                                </div>\r\n                                <div className=\"form-group col-12\">\r\n                                    {/* <label htmlFor=\"exampleInputPassword4\">Flooring</label> */}\r\n                                    <select className=\"form-control\" value={this.state.flooring} onChange={(e) => this.handleFlooring(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\">Hardwood</option>\r\n                                        <option value=\"1\">Carpet</option>\r\n                                        <option value=\"1\">Ceramic</option>\r\n                                        <option value=\"2\" >Vinyl</option>\r\n                                        <option value=\"3\">Stone</option>\r\n                                    </select>\r\n                                    <span className=\"text-danger\">{this.state.errMsg.flooring}</span>\r\n                                </div>\r\n                                 {/* Sub Heading */}\r\n                                 <div className=\"my-1 col-12\">\r\n                                    <label className=\"pb-3 card-title border-bottom w-100\">Other</label>\r\n                                </div>\r\n                                 {/* Sub Heading end */}\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Fire Places</label>\r\n                                    <select className=\"form-control\" value={this.state.fireplace} onChange={(e) => this.handleFirePlace(e.target.value)} >\r\n                                        <option value=\"\" >Select</option>\r\n                                        <option value=\"0\" >NO</option>\r\n                                        <option value=\"1\">YES</option>\r\n                                    </select>\r\n                                    <span className=\"text-danger\">{this.state.errMsg.Fire_place}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Swimming Pool</label>\r\n                                    <select className=\"form-control\" value={this.state.swimmingPool} onChange={(e) => this.handlePool(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"0\" >NO</option>\r\n                                        <option value=\"1\">YES</option>\r\n                                    </select>\r\n                                    {/* <span className=\"text-danger\">{this.state.errMsg.Swimming_pool}</span> */}\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-6\">\r\n                                    <Button className=\"btn btn-success mr-1\" onClick={(e) => this.props.data.handleActiveTab(\"2\")} ><i className=\"mdi mdi-arrow-left me-1\"></i>Back to Address</Button>\r\n                                    <Button className=\"btn btn-info\" onClick={(e) => this.onSubmitHandler()}  >Go to Gallery<i className=\"mdi mdi-arrow-right ms-1\"></i></Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Address.js",["914","915","916","917","918"],"import React, { Component } from 'react'\r\nimport { Button ,Spinner} from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../components/constants/common';\r\n// import { Helmet } from \"react-helmet\";\r\nimport Map from '../Map/index'\r\nimport PlacesAutocomplete, {  geocodeByAddress,   getLatLng, } from 'react-places-autocomplete';\r\n\r\nexport default class PropertyInfo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            userInfo: {\r\n                streetNumber: \"\",\r\n                streetName: \"\",\r\n                AptNumber: \"\",\r\n                state: \"\",\r\n                city: \"\",\r\n                zip: \"\",\r\n                map: \"\"\r\n            },\r\n            countryId: \"\",\r\n            countries_name: [],\r\n            Languages: [],\r\n            Countries: [],\r\n            States: [],\r\n            state_name: [],\r\n            stateName: \"\",\r\n            cityName:\"\",\r\n            name: \"\",\r\n            image: \"\",\r\n            selectType: \"\",\r\n            errMsg: {},\r\n            scsMsg: \"\",\r\n            country_id: \"\",\r\n            address: '',\r\n            lat:\"\",\r\n            long:\"\",\r\n            countryList:[],\r\n            countrycode:\"\"\r\n        }\r\n    }\r\n\r\n    handleChange = address => {\r\n        this.setState({ address });\r\n      };\r\n     \r\n      handleSelect = address => {\r\n          console.log(\"address\",address)\r\n          const str = address\r\n          const pieces = str.split(\",\")\r\n          const state = pieces[pieces.length - 2]\r\n          const city = pieces[pieces.length - 3]\r\n        \r\n          this.setState({\r\n              stateName:state,\r\n              cityName:city\r\n          })\r\n        geocodeByAddress(address)\r\n          .then(results => getLatLng(results[0],console.log(results)))\r\n          .then(latLng => \r\n            this.setState({\r\n                lat:latLng.lat,\r\n                long:latLng.lng,\r\n                address:address\r\n            })\r\n            )\r\n          .catch(error => console.error('Error', error));\r\n      };\r\n\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({\r\n            userInfo,\r\n            errMsg: \"\"\r\n        });\r\n        console.log(userInfo)\r\n    };\r\n\r\n    getCountries() {\r\n        axios\r\n            .get(APIURL + \"countries\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    countryList:response.data.countries\r\n                })\r\n                // console.log(\"country\",response.data.countries)\r\n               \r\n                let countries_name = response.data.countries;\r\n                const CountryNames = [];\r\n                for (var c = 1; c < countries_name.length; c++) {\r\n                    CountryNames.push({ value: countries_name[c].id, label: countries_name[c].name ,code:countries_name[c].code })\r\n                }\r\n                this.setState({\r\n                    Countries: CountryNames,\r\n                })\r\n                console.log(this.state.Countries)\r\n            })\r\n    }\r\n\r\n    handleCountry(e) {\r\n        this.state.countryList.filter(index => index.id === parseInt(e)).map(countyInfo => (\r\n           this.setState({\r\n               countrycode:countyInfo.code\r\n           })\r\n          ))\r\n         \r\n        this.setState({\r\n            countryId: e,\r\n            address:\"\",\r\n            stateName:\"\"\r\n        })\r\n    };\r\n\r\n    // get states\r\n    handleCountryState = (id) => {\r\n        axios\r\n            .post(APIURL + \"states\", {\r\n                country_id: id,\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                let state_name = response.data.states;\r\n                const stateNames = [];\r\n                for (var c = 0; c < state_name.length; c++) {\r\n                    stateNames.push({ value: state_name[c].id, label: state_name[c].name })\r\n                }\r\n                this.setState({\r\n                    States: stateNames,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n\r\n                })\r\n            });\r\n    };\r\n\r\n    // handle states\r\n    handleState(e) {\r\n        this.setState({\r\n            stateId: e\r\n        })\r\n    }\r\n\r\n    getAddressInfo() {\r\n        if (this.state.user) {\r\n            this.setState({Loader:true})\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.props.data.property_id);\r\n            var token = this.state.token\r\n            axios\r\n                .post(APIURL + \"seller/property-address-edit\", formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                  \r\n                    const pieces = info.address.split(\",\")\r\n                    const state = pieces[pieces.length - 2]\r\n                    this.setState({\r\n                        stateName:state,\r\n                        Loader:false\r\n                    })\r\n                    // alert(state)\r\n                    this.setState({\r\n                        userInfo: {\r\n                            streetNumber: info.street_number === \"null\" ? \"\" :info.street_number,\r\n                            streetName: info.street_name === \"null\" ? \"\" :info.street_name,\r\n                            AptNumber: info.apt_number === \"null\" ? \"\" :info.apt_number,\r\n                            city: info.city === \"null\" ? \"\" :info.city,\r\n                            zip: info.zip === \"null\" ? \"\" :info.zip,\r\n                            map: info.map === \"null\" ? \"\" :info.map\r\n                        },\r\n                        countrycode:info.country_code,\r\n                        address:info.address,\r\n                        countryId:info.country === \"null\" ? \"\" :info.country,\r\n                        stateId:info.state === \"null\" ? \"\" :info.state,\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    \r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo ,user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('street_number', this.state.userInfo.streetNumber);\r\n        formData.append('street_name', this.state.userInfo.streetName);\r\n        formData.append('apt_number', this.state.userInfo.AptNumber);\r\n        formData.append('state', this.state.stateName);\r\n        formData.append('country', this.state.countryId);\r\n        formData.append('city', this.state.cityName);\r\n        formData.append('zip', this.state.userInfo.zip);\r\n        formData.append('map', this.state.userInfo.map);\r\n        formData.append('property_id', this.props.data.property_id);\r\n        formData.append('lat', this.state.lat);\r\n        formData.append('long', this.state.long);\r\n        formData.append('address', this.state.address);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-address-update\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false });\r\n                this.setState({\r\n                    errMsg: {},\r\n                }, () => {\r\n                    this.props.data.handleActiveTab(\"3\");\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error ,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    onSaveHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo ,user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('street_number', this.state.userInfo.streetNumber);\r\n        formData.append('street_name', this.state.userInfo.streetName);\r\n        formData.append('apt_number', this.state.userInfo.AptNumber);\r\n        formData.append('state', this.state.stateName);\r\n        formData.append('country', this.state.countryId);\r\n        formData.append('city', this.state.cityName);\r\n        formData.append('zip', this.state.userInfo.zip);\r\n        formData.append('map', this.state.userInfo.map);\r\n        formData.append('property_id', this.props.data.property_id);\r\n        formData.append('lat', this.state.lat);\r\n        formData.append('long', this.state.long);\r\n        formData.append('address', this.state.address);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-address-update\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({ Loader: false });\r\n                this.setState({\r\n                    errMsg: {},\r\n                }, () => {\r\n                    // this.props.data.handleActiveTab(\"3\");\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errMsg: error.response.data.error ,\r\n                    Loader: false\r\n                })\r\n            });\r\n    };\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getCountries()\r\n        this.getAddressInfo()\r\n    }\r\n\r\n    render() {\r\n        console.log(\"address\",this.props.data.property_id)\r\n        return (\r\n            <>\r\n              {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                {this.state.errMsg.message ?\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {this.state.errMsg.message}\r\n               </div>\r\n               :\"\"} \r\n                <div className=\"card mt-1\">\r\n                <div className='position-absolute top-0 end-0'>\r\n                        <Button onClick={(e) => this.onSaveHandler()}  className='btn-sm px-4 btn-rounded btn btn-info'>Save</Button>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <form className=\"forms-sample \">\r\n                        <div className=\"mb-3 border-bottom\">\r\n                                <label className=\"card-title \">Address</label>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-6 \">\r\n                                    <label htmlFor=\"exampleInputName1\">Street Number <strong className=\"text-danger\" >*</strong> </label>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"streetNumber\"\r\n                                        placeholder=\"Street Number\"\r\n                                        value={this.state.userInfo.streetNumber}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.street_number}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputEmail3\">Street Name </label>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"text\"\r\n                                        name=\"streetName\"\r\n                                        placeholder=\"Street Name\"\r\n                                        value={this.state.userInfo.streetName}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                     <span className=\"text-danger\">{this.state.errMsg.street_name}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Apartment Number</label>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"AptNumber\"\r\n                                        placeholder=\"Apartment Number\"\r\n                                        value={this.state.userInfo.AptNumber}\r\n                                        onChange={this.onChangehandler}\r\n                                    /> \r\n                                    <span className=\"text-danger\">{this.state.errMsg.apt_number}</span> </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleSelectGender\">Country<strong className=\"text-danger\" >*</strong></label>\r\n                                    <select className=\"form-control\" value={this.state.countryId} onChange={(e) => this.handleCountry(e.target.value)} >\r\n                                        <option value=\"\">Select</option>\r\n                                        {this.state.Countries.map((option) => (\r\n                                            <option value={option.value}>{option.label}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                     <span className=\"text-danger\">{this.state.errMsg.country}</span>\r\n                                </div>\r\n                              \r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Search Address location </label>\r\n                                    \r\n                                    <PlacesAutocomplete\r\n                                        value={this.state.address}\r\n                                        onChange={this.handleChange}\r\n                                        onSelect={this.handleSelect}\r\n                                        searchOptions={{\r\n                                            types: ['establishment'],\r\n                                            componentRestrictions: {country: this.state.countrycode}\r\n                                        }}\r\n                                       \r\n                                    >\r\n                                        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                                        <div className=\"position-relative\">\r\n                                            <input\r\n                                            {...getInputProps({\r\n                                                placeholder: 'Search Places ...',\r\n                                                className: 'location-search-input form-control',\r\n                                            })}\r\n                                            />\r\n                                            <div className=\"autocomplete-dropdown-container\">\r\n                                            {loading && <div>Loading...</div>}\r\n                                            {suggestions.map(suggestion => {\r\n                                                const className = suggestion.active\r\n                                                ? 'suggestion-item--active'\r\n                                                : 'suggestion-item';\r\n                                                // inline style for demonstration purpose\r\n                                                const style = suggestion.active\r\n                                                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                                : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                                return (\r\n                                                <div\r\n                                                    {...getSuggestionItemProps(suggestion, {\r\n                                                    className,\r\n                                                    style,\r\n                                                    })}\r\n                                                >\r\n                                                    <span>{suggestion.description}</span>\r\n                                                </div>\r\n                                                );\r\n                                            })}\r\n                                            </div>\r\n                                        </div>\r\n                                        )}\r\n                                    </PlacesAutocomplete>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">State<strong className=\"text-danger\" >*</strong></label>\r\n                                    <input\r\n                                        disabled\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"text\"\r\n                                        name=\"state\"\r\n                                        placeholder=\"State\"\r\n                                        value={this.state.stateName}\r\n                                        // onChange={this.onChangehandler}\r\n                                    />\r\n                                  \r\n                                     <span className=\"text-danger\">{this.state.errMsg.state}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Zip</label>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"zip\"\r\n                                        placeholder=\"Zip\"\r\n                                        value={this.state.userInfo.zip}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                     <span className=\"text-danger\">{this.state.errMsg.zip}</span>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"row\">\r\n                                <div className=\"form-group col-12\">\r\n                                   <Map />\r\n                                   </div>\r\n                            </div> */}\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-6\">\r\n                                    <Button className=\"btn btn-success mr-1\" onClick={(e) => this.props.data.handleActiveTab(\"1\")} ><i className=\"mdi mdi-arrow-left me-1\"></i>Back to information</Button>\r\n                                    <Button className=\"btn btn-info\" onClick={(e) => this.onSubmitHandler()}  >Go to Features <i className=\"mdi mdi-arrow-right ms-1\"></i></Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Map.js",["919","920","921","922","923","924","925","926","927","928","929","930"],"import React, { Component } from 'react'\r\nimport { Row, Col, Spinner, Jumbotron, Label, Input, Button, Modal, ModalBody, ModalHeader, Table, ModalFooter } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../constants/common';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class Map extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            selectedFiles: [],\r\n            selectedOptions: [],\r\n            Images: [],\r\n            tempArr: [],\r\n            GallertData: [],\r\n            removeId: \"\",\r\n            scsMsg: \"\",\r\n            errMsg: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.getAddressInfo()\r\n    }\r\n    handleListingPrice = (e) =>{\r\n        this.setState({listingPrice:e})\r\n    }\r\n    handleHoa = (e) =>{\r\n        this.setState({hoa_free:e})\r\n    }\r\n    handleFlooring = (e) => {\r\n        this.setState({  flooring:e })\r\n    }\r\n\r\n    handleFeatureType(e) {\r\n        this.setState({ featureTypeId: e })\r\n    }\r\n    handleTotalBedrooms = (e) => {\r\n        this.setState({ totalBedRooms: e })\r\n    }\r\n\r\n    handleTotalBathRooms = (e) => {\r\n        this.setState({  totalBathRooms: e })\r\n    }\r\n    handleFullBath = (e) => {\r\n        this.setState({ fullBath: e })\r\n    }\r\n    handleHalfBath = (e) => {\r\n        this.setState({ halfBath: e })\r\n    }\r\n    handleCooling = (e) => {\r\n        this.setState({ cooling: e })\r\n    }\r\n    handleHeating = (e) => {\r\n        this.setState({ heating: e })\r\n    }\r\n    handleParkingSpace = (e) => {\r\n        this.setState({ parkingSpace: e })\r\n    }\r\n    \r\n    handleWalkout = (e) => {\r\n        this.setState({\r\n            walkout: e\r\n        })\r\n    }\r\n    handleStoryHouse = (e) => {\r\n        this.setState({\r\n            storiesOfHouse: e\r\n        })\r\n    }\r\n    handleFinished = (e) => {\r\n        this.setState({\r\n            finished:e\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    onSubmit() {\r\n        this.props.data.handleActiveTab(\"4\");\r\n    }\r\n\r\n    getAddressInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.props.data.property_id);\r\n            var token = this.state.token\r\n            axios\r\n                .post(APIURL + \"seller/property-features-edit\", formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    // this.setState({\r\n                    //     listingPrice:info.listing_price === \"0.00\" ? \"\" :info.listing_price,\r\n                    //     hoa_free: info.hoa_free,\r\n                    //     featureTypeId:info.feature_type,\r\n                    //     totalBedRooms:info.total_bedrooms,\r\n                    //     totalBathRooms:info.total_bathrooms,\r\n                    //     fullBath:info.full_bath,\r\n                    //     halfBath:info.half_bath,\r\n                    //     cooling:info.cooling,\r\n                    //     heating:info.heating,\r\n                    //     parkingSpace:info.parking_space,\r\n                    //     walkout:info.walkout,\r\n                    //     storiesOfHouse:info.stories_of_the_house,\r\n                    //     finished:info.finished\r\n                    // })\r\n                    this.setState({\r\n                        listingPrice:info.listing_price === \"0.00\" ? \"\" :info.listing_price,\r\n                        hoa_free: info.hoa_free,\r\n                        featureTypeId:info.feature_type === \"undefined\" ? \"\" :info.feature_type,\r\n                        totalBedRooms:info.total_bedrooms === \"null\" ? \"\" :info.total_bedrooms,\r\n                        totalBathRooms:info.total_bathrooms === \"null\" ? \"\" :info.total_bathrooms,\r\n                        fullBath:info.full_bath === \"null\" ? \"\" :info.full_bath,\r\n                        halfBath:info.half_bath === \"null\" ? \"\" :info.half_bath,\r\n                        cooling:info.cooling === \"null\" ? \"\" :info.cooling,\r\n                        heating:info.heating === \"null\" ? \"\" :info.heating,\r\n                        parkingSpace:info.parking_space === \"null\" ? \"\" :info.parking_space,\r\n                        walkout:info.walkout === \"null\" ? \"\" :info.walkout,\r\n                        storiesOfHouse:info.stories_of_the_house === \"null\" ? \"\" :info.stories_of_the_house,\r\n                        finished:info.finished === \"null\" ? \"\" :info.finished\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        this.props.data.handleActiveTab(\"5\");\r\n        // var token = this.state.token\r\n        // const { userInfo, user } = this.state;\r\n        // const formData = new FormData();\r\n        // formData.append('listing_price', this.state.listingPrice);\r\n        // formData.append('hoa_free', this.state.hoa_free);\r\n        // formData.append('feature_type', this.state.featureTypeId);\r\n        // formData.append('total_bedrooms', this.state.totalBedRooms);\r\n        // formData.append('total_bathrooms', this.state.totalBathRooms);\r\n        // formData.append('full_bath', this.state.fullBath);\r\n        // formData.append('half_bath', this.state.halfBath);\r\n        // formData.append('cooling', this.state.cooling);\r\n        // formData.append('heating', this.state.heating);\r\n        // formData.append('parking_space', this.state.parkingSpace);\r\n        // formData.append('walkout', this.state.walkout);\r\n        // formData.append('finished', this.state.finished);\r\n        // formData.append('stories_of_the_house', this.state.storiesOfHouse);\r\n        // formData.append('property_id', this.props.data.property_id);\r\n        // this.setState({ Loader: true });\r\n        // axios\r\n        //     .post(APIURL + \"seller/property-features-update\", formData, {\r\n        //         headers: {\r\n        //             'Authorization': `Bearer ${token}`\r\n        //         }\r\n        //     })\r\n        //     .then((response) => {\r\n        //         this.setState({\r\n        //             errMsg: {},\r\n        //             Loader:false\r\n        //         }, () => {\r\n        //             this.props.data.handleActiveTab(\"5\");\r\n        //         });\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         this.setState({\r\n        //             errMsg: error.response.data.error,\r\n        //             Loader: false\r\n        //         })\r\n        //     });\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                {this.state.errMsg.upload_files ?\r\n                    <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {this.state.errMsg.upload_files}\r\n                    </div>\r\n                    : \"\"}\r\n                <form className=\"mt-4\">\r\n                    <div className=\"form-group multi-preview\">\r\n                        <div className=\"card\">\r\n                            {this.state.scsMsg}\r\n                            <div className=\"list-group list-group-flush\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Map</label>\r\n                                    <input\r\n                                        disabled\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"text\"\r\n                                        name=\"map\"\r\n                                        placeholder=\"Map\"\r\n                                        // value={this.state.userInfo.map}\r\n                                        // onChange={this.onChangehandler}\r\n                                    />\r\n                                     <span className=\"text-danger\">{this.state.errMsg.map}</span>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-6\">\r\n                            <Button color=\"gradient-success\" className=\"mr-1\" onClick={(e) => this.props.data.handleActiveTab(\"3\")} ><i className=\"mdi mdi-arrow-left me-1\"></i>Back to Features</Button>\r\n                            <Button color=\"gradient-info\" className=\"\" onClick={(e) => this.onSubmitHandler()} >Go To Gallery <i className=\"mdi mdi-arrow-right ms-1\"></i></Button>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\Gallery.js",["931","932","933","934","935","936","937","938","939","940","941","942","943"],"import React, { Component } from 'react'\r\nimport { Row, Col, Spinner, Jumbotron, Label, Input, Button, Modal, ModalBody, ModalHeader, Table, ModalFooter } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../constants/common';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n// import { Helmet } from \"react-helmet\";\r\n\r\nexport default class Map extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.ref = React.createRef();\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            selectedFiles: [],\r\n            selectedVideo: [],\r\n            selectedOptions: [],\r\n            Images: [],\r\n            tempArr: [],\r\n            GallertData: [],\r\n            removeId: \"\",\r\n            scsMsg: \"\",\r\n            errMsg: \"\",\r\n            videoLink: \"\",\r\n            Loader:false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGalleryImages()\r\n    }\r\n\r\n    fileSelectedHandler = (e) => {\r\n        this.setState({\r\n            selectedFiles: [...this.state.selectedFiles, ...e.target.files],\r\n\r\n        }, () => {\r\n            this.uploadImage();\r\n            e.target.value = null;\r\n        })\r\n\r\n    }\r\n    VideoSelectedHandler = (e) => {\r\n        this.setState({\r\n            selectedVideo: [...this.state.selectedVideo, ...e.target.files]\r\n        }, () => {\r\n            this.uploadImage();\r\n            e.target.value = null;\r\n\r\n        })\r\n\r\n    }\r\n    videoLink = (e) => {\r\n        this.setState({\r\n            videoLink: e\r\n        })\r\n\r\n    }\r\n\r\n    getGalleryImages() {\r\n        this.setState({\r\n            selectedFiles: [],\r\n        })\r\n        this.forceUpdate()\r\n        var token = this.state.token\r\n        if (this.state.user) {\r\n            this.setState({Loader:true})\r\n            const formData = new FormData();\r\n            formData.append('id', this.props.data.property_id);\r\n            axios\r\n                .post(APIURL + \"seller/property-gallery-edit\", formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'content-type': 'multipart/form-data'\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data.data)\r\n                    this.setState({\r\n                        GalleryData: response.data.data,\r\n                        Loader:false\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n    handleRemoveTeamAttrs = (item) => {\r\n        var token = this.state.token\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            formData.append('id', item.id);\r\n            axios\r\n                .post(APIURL + \"seller/delete-property-image\", formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    console.log(\"removed Image\", response.data.data)\r\n                    this.setState({\r\n                        scsMsg: response.data.data,\r\n                        GalleryData: this.state.GalleryData.filter((s, sidx) => item.id !== s.id)\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    uploadImage = () => {\r\n        window.scrollTo(0, 0);\r\n        this.ref.current.value = \"\"\r\n        const tempArr = [];\r\n        var token = this.state.token;\r\n        const formData = new FormData();\r\n        formData.append('property_id', this.props.data.property_id);\r\n        formData.append('video_link', this.state.videoLink)\r\n\r\n        this.state.selectedFiles.forEach(file => {\r\n            console.log(\"file >>> \", file);\r\n            formData.append('upload_files[]', file)\r\n        });\r\n\r\n        this.state.selectedVideo.forEach(video => {\r\n            console.log(\"file >>> \", video);\r\n            formData.append('upload_video[]', video)\r\n        });\r\n        console.log(\"pictures >> \", tempArr);\r\n        const option = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n        this.setState({ Loader: true })\r\n        axios\r\n            .post(APIURL + \"seller/property-gallery-update\", formData, option)\r\n            .then(result => {\r\n                console.log(\"result\", result)\r\n                this.setState({\r\n                    Loader: false,\r\n                    selectedFiles: [],\r\n                    selectedVideo: [],\r\n                    videoLink:\"\"\r\n                }, () => {\r\n                    this.getGalleryImages()\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(\"err\", error.response.data.error)\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                    selectedFiles: [],\r\n                })\r\n                setTimeout(() => this.setState({\r\n                    errMsg: \"\",\r\n                }), 3000)\r\n            }\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                {this.state.errMsg.upload_files || this.state.errMsg.upload_video ?\r\n                    <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {this.state.errMsg.upload_files} {this.state.errMsg.upload_video}\r\n                    </div>\r\n                    : \"\"}\r\n                <form className=\"mt-1 card\">\r\n                    <div className='position-absolute top-0 end-0'>\r\n                        <Button onClick={(e) => this.uploadImage()} className='btn-sm px-4 btn-rounded btn btn-info'>Save</Button>\r\n                    </div>\r\n                    {/* Sub Heading */}\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"card-title border-bottom w-100 pb-3\">Property Images</label>\r\n                    </div>\r\n                    {/* Sub Heading end */}\r\n                    <div className=\"form-group w-auto\">\r\n                        <input\r\n                            // style={{ lineHeight: \"2.5\" }}\r\n                            type=\"file\" ref={this.ref}\r\n                            className=\"form-control form-control-sm\"\r\n                            multiple\r\n                            onChange={this.fileSelectedHandler} />\r\n                            <span>(Maximum. 20 images allowed)</span>\r\n                    </div>\r\n                    <div className=\"form-group multi-preview\">\r\n                        <div className=\"card\">\r\n                            {this.state.scsMsg}\r\n                            <div className=\"list-group list-group-flush\">\r\n                                <div className=\"row\">\r\n                                    {this.state.GalleryData &&\r\n                                        this.state.GalleryData.filter(data => data.type === \"image\").map((file, index) => (\r\n                                            <div className=\"col-sm-3\">\r\n                                                <div className=\"img-gallery\">\r\n                                                    <img className=\"w-100 \" src={file.url_path} />\r\n                                                    <div>\r\n                                                        <div className=\"img-delete\">\r\n                                                            <i style={{ cursor: \"pointer\" }} onClick={(e) => this.handleRemoveTeamAttrs(file)} className=\"cursor-pointer far fa-trash-alt\"></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-1\">\r\n                        <label className=\"pb-3 card-title border-bottom w-100\">Property Video</label>\r\n\r\n                    </div>\r\n                    <div className=\"form-group w-auto\">\r\n                        <input\r\n                            type=\"file\" ref={this.ref}\r\n                            className=\"form-control form-control-sm\"\r\n                            multiple\r\n                            onChange={this.VideoSelectedHandler} />\r\n                            <span>(Upload one property video)</span>\r\n                    </div>\r\n                    <div className=\"form-group multi-preview\">\r\n                        <div className=\"card\">\r\n                            {this.state.scsMsg}\r\n                            <div className=\"list-group list-group-flush\">\r\n                                <div className=\"row\">\r\n                                    {this.state.GalleryData &&\r\n                                        this.state.GalleryData.map((file, index) => (\r\n                                            <div>\r\n                                                {/* <img className=\"pro_img img-fluid w-100\" src=\"https://via.placeholder.com/1200x800\" alt=\"7.jpg\" /> */}\r\n                                                {\r\n                                                    file.type === \"video\" ?\r\n                                                        <div className=\"img-gallery\" style={{ width: \"200px\", height: \"200px\" }}>\r\n                                                            <video width=\"200\" height=\"200\" controls >\r\n                                                                <source src={file.url_path} type=\"video/mp4\" />\r\n                                                            </video>\r\n                                                            <div>\r\n                                                                <div className=\"img-delete\">\r\n                                                                    <i style={{ cursor: \"pointer\" }} onClick={(e) => this.handleRemoveTeamAttrs(file)} className=\"cursor-pointer far fa-trash-alt\"></i>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        :\r\n                                                        \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n\r\n                                        ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-1\">\r\n                        <label className=\"pb-3 card-title border-bottom w-100\">Property Video 3D</label>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className=\"form-group w-auto col-10\">\r\n                            <input\r\n                                style={{ lineHeight: \"2.5\" }}\r\n                                type=\"text\"\r\n                                placeholder='https://'\r\n                                value={this.state.videoLink}\r\n                                className=\"form-control form-control-sm\"\r\n                                onChange={(e) => this.videoLink(e.target.value)} />\r\n                                <span>(Upload a 3D video link)</span>\r\n                            {this.state.GalleryData &&\r\n                                this.state.GalleryData.filter(data => data.type === \"3d_video\").map((file, index) => (\r\n                                    <div className='img-gallery mt-1'>\r\n                                        {file.file_path}\r\n                                        <div className=\"img-delete\">\r\n                                            <i style={{ cursor: \"pointer\" }} onClick={(e) => this.handleRemoveTeamAttrs(file)} className=\"cursor_pointer far fa-trash-alt\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                        </div>\r\n                        <div className=\"form-group w-auto col-2\">\r\n                            <div className=\"form-group\">\r\n                                <Button className=\"btn-sm btn-info\" onClick={(e) => this.uploadImage()} >Save</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-6\">\r\n                            <Button className=\"btn btn-success mr-1\" onClick={(e) => this.props.data.handleActiveTab(\"3\")} ><i className=\"mdi mdi-arrow-left me-1\"></i>Back to Features</Button>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Property\\PropertyInfo.js",["944","945","946","947"],"import React, { Component } from 'react'\r\nimport { Button, Spinner } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../../../components/constants/common';\r\n// import { Helmet } from \"react-helmet\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default class PropertyInfo extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            property_id: JSON.parse(localStorage.getItem(\"property_id\")),\r\n            userInfo: {\r\n                propertyName: \"\",\r\n                bedRooms: \"\",\r\n                bathRooms: \"\",\r\n                squareFootage: \"\",\r\n                lotSize: \"\",\r\n                yearBuild: \"\",\r\n                hourseDesc: \"\",\r\n            },\r\n            listingPrice: \"\",\r\n            flooring: \"\",\r\n            fireplace: \"\",\r\n            swimmingPool: \"\",\r\n            errMsg: \"\",\r\n            Loader: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getPropertyInfo()\r\n        // this.getPropertyList()\r\n    }\r\n\r\n    onChangehandler = (e, key) => {\r\n        const { userInfo } = this.state;\r\n        userInfo[e.target.name] = e.target.value;\r\n        this.setState({\r\n            userInfo,\r\n            errMsg: \"\"\r\n        });\r\n        console.log(userInfo)\r\n    };\r\n    handleListingPrice = (e) => {\r\n        this.setState({ listingPrice: e })\r\n    }\r\n\r\n    handleFlooring(e) {\r\n        this.setState({\r\n            flooring: e\r\n        })\r\n    }\r\n    handleFirePlace(e) {\r\n        this.setState({\r\n            fireplace: e\r\n        })\r\n    }\r\n    handlePool(e) {\r\n        this.setState({\r\n            swimmingPool: e\r\n        })\r\n    }\r\n    getPropertyInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.props.data.property_id);\r\n            var token = this.state.token\r\n            axios\r\n                .post(APIURL + \"seller/property-other-detail-edit\", formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        listingPrice: info.listing_price === \"0.00\" ? \"\" : info.listing_price,\r\n                        userInfo: {\r\n                            propertyName: info.property_name,\r\n                            bedRooms: info.number_of_bedrooms === \"null\" ? \"\" : info.number_of_bedrooms,\r\n                            bathRooms: info.number_of_bathrooms === \"null\" ? \"\" : info.number_of_bathrooms,\r\n                            squareFootage: info.total_square_footage === \"null\" ? \"\" : info.total_square_footage,\r\n                            lotSize: info.lot_size === \"null\" ? \"\" : info.lot_size,\r\n                            yearBuild: info.year_built === \"null\" ? \"\" : info.year_built,\r\n                            hourseDesc: info.house_description === \"null\" ? \"\" : info.house_description,\r\n                        },\r\n                        flooring: info.flooring === \"null\" ? \"\" : info.flooring,\r\n                        fireplace: info.fireplace === \"null\" ? \"\" : info.fireplace,\r\n                        swimmingPool: info.swimming_pool === \"null\" ? \"\" : info.swimming_pool\r\n                    })\r\n                   })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.userInfo.propertyName);\r\n        formData.append('listing_price', this.state.listingPrice);\r\n        formData.append('number_of_bedrooms', this.state.userInfo.bedRooms);\r\n        formData.append('number_of_bathrooms', this.state.userInfo.bathRooms);\r\n        formData.append('total_square_footage', this.state.userInfo.squareFootage);\r\n        formData.append('lot_size', this.state.userInfo.lotSize);\r\n        formData.append('year_built', this.state.userInfo.yearBuild);\r\n        formData.append('house_description', this.state.userInfo.hourseDesc);\r\n        formData.append('flooring', this.state.flooring);\r\n        formData.append('fireplace', this.state.fireplace);\r\n        formData.append('swimming_pool', this.state.flooring);\r\n        formData.append('property_id', this.state.property_id ? this.state.property_id : this.props.data.property_id);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-other-detail-update\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                }, () => {\r\n                    this.props.data.handleActiveTab(\"2\");\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response.data)\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n                })\r\n            });\r\n    };\r\n\r\n    onSaveHandler = (e) => {\r\n        window.scrollTo(0, 0);\r\n        var token = this.state.token\r\n        const { userInfo, user } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('name', this.state.userInfo.propertyName);\r\n        formData.append('listing_price', this.state.listingPrice);\r\n        formData.append('number_of_bedrooms', this.state.userInfo.bedRooms);\r\n        formData.append('number_of_bathrooms', this.state.userInfo.bathRooms);\r\n        formData.append('total_square_footage', this.state.userInfo.squareFootage);\r\n        formData.append('lot_size', this.state.userInfo.lotSize);\r\n        formData.append('year_built', this.state.userInfo.yearBuild);\r\n        formData.append('house_description', this.state.userInfo.hourseDesc);\r\n        formData.append('flooring', this.state.flooring);\r\n        formData.append('fireplace', this.state.fireplace);\r\n        formData.append('swimming_pool', this.state.flooring);\r\n        formData.append('property_id', this.state.property_id ? this.state.property_id : this.props.data.property_id);\r\n\r\n        this.setState({ Loader: true });\r\n        axios\r\n            .post(APIURL + \"seller/property-other-detail-update\", formData, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .then((response) => {\r\n                this.setState({\r\n                    Loader: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response.data)\r\n                this.setState({\r\n                    errMsg: error.response.data.error,\r\n                    Loader: false,\r\n\r\n                })\r\n            });\r\n    };\r\n\r\n    render() {\r\n        console.log(\"info\", this.props)\r\n        return (\r\n            <>\r\n                 {this.state.Loader ? <div className=\"loader\"> <Spinner type=\"border\" color=\"dark\" style={{ width: '3rem', height: '3rem' }} /> </div> : \"\"}\r\n                {this.state.errMsg.message ?\r\n                    <div className=\"alert alert-danger text-center mt-3\" role=\"alert\">\r\n                        {this.state.errMsg.message}\r\n                    </div>\r\n                    : \"\"}\r\n                <div className=\"card mt-1\">\r\n                    <div className='position-absolute top-0 end-0'>\r\n                        <Button onClick={(e) => this.onSaveHandler()}  className='btn-sm px-4 btn-rounded btn btn-info'>Save</Button>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <form className=\"forms-sample \">\r\n                            <div className=\"mb-3 border-bottom\">\r\n                                <label className=\"card-title \">General Info</label>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                {/* Sub Heading */}\r\n\r\n                                {/* Sub Heading end */}\r\n                                <div className=\"form-group col-6 \">\r\n                                    <label htmlFor=\"exampleInputName1\">Property Name <strong className=\"text-danger\" >*</strong> </label>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"text\"\r\n                                        name=\"propertyName\"\r\n                                        placeholder=\"Property Name\"\r\n                                        value={this.state.userInfo.propertyName}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.name}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6 \">\r\n                                    <label htmlFor=\"exampleInputName1\">Listing Price <strong className=\"text-danger\" >*</strong> </label>\r\n                                    <NumberFormat\r\n                                       className=\"form-control\"\r\n                                        thousandsGroupStyle=\"thousand\"\r\n                                        value={this.state.listingPrice}\r\n                                        prefix=\"$\"\r\n                                        decimalSeparator=\".\"\r\n                                        displayType=\"input\"\r\n                                        type=\"text\"\r\n                                        onChange={(e) => this.handleListingPrice(e.target.value)}\r\n                                        thousandSeparator={true}\r\n                                        allowNegative={true} />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.listing_price}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Number of Bedrooms <strong className=\"text-danger\" >*</strong></label>\r\n                                    <input\r\n                                        autoFocus={true}\r\n                                        className=\"form-control \"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"bedRooms\"\r\n                                        placeholder=\"Number of Bedrooms\"\r\n                                        value={this.state.userInfo.bedRooms}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.number_of_bedrooms}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleSelectGender\">Number of Bathrooms <strong className=\"text-danger\" >*</strong></label>\r\n                                    <input\r\n                                        className=\"form-control \"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"bathRooms\"\r\n                                        placeholder=\"Number of Bathrooms\"\r\n                                        value={this.state.userInfo.bathRooms}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.number_of_bathrooms}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n\r\n                                    <label htmlFor=\"exampleInputPassword4\">Total Square Footage <strong className=\"text-danger\" >*</strong></label>\r\n                                    <input\r\n                                        className=\"form-control quantity_arrow\"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"squareFootage\"\r\n                                        placeholder=\"Total Square Footage\"\r\n                                        value={this.state.userInfo.squareFootage}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.total_square_footage}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Lot Size (Acres)</label>\r\n                                    <input\r\n\r\n                                        className=\"form-control quantity_arrow\"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"lotSize\"\r\n                                        placeholder=\"Lot Size\"\r\n                                        value={this.state.userInfo.lotSize}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.lot_size}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-6\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">Year Build<strong className=\"text-danger\" >*</strong></label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        name=\"yearBuild\"\r\n                                        placeholder=\"Year Build\"\r\n                                        value={this.state.userInfo.yearBuild}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.year_built}</span>\r\n                                </div>\r\n                                <div className=\"form-group col-12\">\r\n                                    <label htmlFor=\"exampleInputPassword4\">House Description<strong className=\"text-danger\" >*</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        required=\"\"\r\n                                        type=\"textarea\"\r\n                                        rows=\"4\"\r\n                                        name=\"hourseDesc\"\r\n                                        placeholder=\"House Description\"\r\n                                        value={this.state.userInfo.hourseDesc}\r\n                                        onChange={this.onChangehandler}\r\n                                    />\r\n                                    <span className=\"text-danger\">{this.state.errMsg.house_description}</span>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-6\">\r\n                                    <Button className=\"btn btn-info\" onClick={(e) => this.onSubmitHandler()}  >Go to Address <i className=\"mdi mdi-arrow-right ms-1\"></i></Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\About\\Header.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\About\\Navbar.js",["948","949","950","951","952","953","954","955"],"import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport logo from '../../assets/img/logo.png'\r\nimport logoMini from '../../assets/img/logo-mini.png'\r\nimport face1 from '../../assets/images/faces/dummy.png'\r\nimport { Button } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../components/constants/common';\r\n\r\nexport default class Navbar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            navigate: false,\r\n            redirectToHome: false,\r\n            profile_image: \"\",\r\n            name: \"\",\r\n            noRecords: false,\r\n            disableWishList:false\r\n        }\r\n    }\r\n\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"agent/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        profile_image: info.url_path,\r\n                        name: info.fullName,\r\n                        noRecords: true\r\n                    })\r\n                    this.handleCountryState(this.state.countryId)\r\n                    console.log(\"sssssssss\", this.state.profile_image)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    onLogoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n    };\r\n\r\n    goToProfile() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        if (this.state.user) {\r\n            if (this.state.user_type == \"Agent\") {\r\n                window.location.href = \"/agent\";\r\n            }\r\n            else if (this.state.user_type == \"Seller\") {\r\n                window.location.href = \"/seller\";\r\n            }\r\n            else if (this.state.user_type == \"Admin\") {\r\n                window.location.href = \"/Admin\";\r\n            }\r\n            else if (this.state.user_type == \"Buyer\") {\r\n                window.location.href = \"/Buyer\";\r\n            }\r\n            else {\r\n                window.location.href = \"/\";\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProfileInfo()\r\n        if(this.state.user){\r\n\t\t\tif(this.state.user.user_type !==\"Buyer\")\t{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdisableWishList:true\r\n\t\t\t\t})}\r\n\t\t}\r\n    }\r\n\r\n    toggle(){\r\n\t\tthis.setState({\r\n\t\t\tportrait:!this.state.portrait\r\n\t\t})\r\n\t}\r\n\r\n    render() {\r\n        if (this.state.navigate) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        if (this.state.redirectToHome) {\r\n            return <Redirect to=\"/seller\" push={true} />;\r\n        }\r\n        const { user_type } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"header header-light head-shadow\">\r\n                    <div className=\"container\">\r\n                    <nav id=\"navigation\" className={this.state.portrait ? \"navigation navigation-portrait\":\"navigation navigation-landscape\"}>\r\n\t\t\t\t\t\t\t<div className=\"nav-header\">\r\n\t\t\t\t\t\t\t\t{/* <Link className=\"nav-brand static-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link> */}\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand fixed-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<div onClick={() => this.toggle()} className=\"nav-toggle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={this.state.portrait ? \"nav-menus-wrapper-open nav-menus-wrapper\": \"nav-menus-wrapper\"} style={{ transitionProperty: this.state.portrait ? \"left\" : \"none\" }}>\r\n\t\t\t\t\t\t\t\t<span class=\"nav-menus-wrapper-close-button\" onClick={() => this.toggle()}>✕</span>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu\">\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t{!this.state.disableWishList ? <li><Link to=\"/buyer/wishlist\">Wishlist</Link></li> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<li className=\"active\"><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu nav-menu-social align-to-right\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"d-none\"><Link to=\"\"><i className=\"far fa-heart mr-2 text-success\"></i>Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"dropdown bg-transparent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-toggle text-success \" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n                                        this.state.noRecords &&\r\n                                        <img  className='mr-1 rounded-circle' width={30} height={30} src={this.state.profile_image !== \"\" ? this.state.profile_image : face1} alt=\"profile\" />\r\n                                    }\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-success' >{this.state.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.goToProfile()} ><i className=\"far fa-user mr-2 \"></i>Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.onLogoutHandler()} to=\"/\"><i className=\"fas fa-sign-out-alt mr-2\"></i>Logout</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li> :\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"\"> <Link to=\"/signin\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign In</Link> </li>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<li className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign Up</Link>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.portrait ? \r\n\t\t\t\t\t\t\t\t<div className='nav-overlay-panel'></div>\r\n\t\t\t\t\t\t\t\t:\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\Header.js",["956","957","958","959","960","961","962","963","964","965"],"import React, { Component } from 'react'\r\nimport carouselImg from '../../assets/img/p-4.jpg'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport { Modal, Spinner, ModalBody, ModalHeader, ModalFooter, Button, Input } from 'reactstrap'\r\nimport axios from 'axios';\r\nimport { APIDOMAIN,APIURL } from '../constants/common';\r\n\r\nexport default class Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      baseImgIdx:0,\r\n      topImgIdx: 0,\r\n      imageModal: false,\r\n      Images: [\r\n      {image:\"https://realstateapi.imenso.in/uploads/property/53/16365278101.jpg\"},\r\n      {image:\"https://realstateapi.imenso.in/uploads/property/53/16365278101.jpg\"}\r\n      ],\r\n      PropertyInfo:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ViewpropertyDetails()\r\n  \r\n\r\n  }\r\n\r\n  imageModal = () => {\r\n    this.setState({\r\n      imageModal: !this.state.imageModal\r\n    })\r\n  }\r\n  view = (e) => {\r\n    this.setState({\r\n      topImgIdx: e,\r\n    }, () => {\r\n      this.imageModal()\r\n    })\r\n  }\r\n  handleSelect = (selectedIndex, e) => {\r\n    console.log(selectedIndex + \" eee\" + e)\r\n    this.setState({\r\n      baseImgIdx: selectedIndex,\r\n    })\r\n  };\r\n\r\n  handleSelectTop = (selectedIndex, e) => {\r\n    console.log(selectedIndex + \" eee\" + e)\r\n    this.setState({\r\n      topImgIdx: selectedIndex,\r\n    })\r\n  };\r\n\r\n  ViewpropertyDetails() {\r\n\r\n    const formData = new FormData();\r\n    formData.append('property_id', this.props.PropertyId);\r\n    // this.setState({ Loader: true });\r\n    axios\r\n        .post(APIURL + \"view-property-detail\", formData, {\r\n\r\n        })\r\n        .then((response) => {\r\n            this.setState({\r\n                PropertyInfo: response.data.data,\r\n            })\r\n            let images=[];\r\n            response.data.data.length > 0 && response.data.data.map((item, idx) => {\r\n               item.property_media.map((file, index) => {\r\n                 if(file.type === \"image\"){\r\n                 images.push({image: file.url_path})\r\n                }\r\n                 });\r\n            });\r\n               this.setState({\r\n                         Images :images\r\n                     })\r\n\r\n        })\r\n        .catch((error) => {\r\n\r\n        });\r\n}\r\n  render() {\r\n  \r\n    return (\r\n      <div>\r\n        <Carousel  interval=\"300000\" activeIndex={this.state.baseImgIdx} onSelect={this.handleSelect}>\r\n            {this.state.Images.length > 0 && this.state.Images.map((item, idx) => (\r\n                <Carousel.Item onClick={() => this.view(idx)} style={{backgroundImage: `url(${item.image})`}}>\r\n                \r\n              </Carousel.Item>\r\n             ))}\r\n           \r\n            </Carousel> \r\n       \r\n         <Modal className=\"resido-admin\" size=\"lg\" isOpen={this.state.imageModal} toggle={() => this.imageModal()} autoFocus={false}>\r\n            <button onClick={() => this.imageModal()} className=\"close close-carousel\">x</button> \r\n          <ModalBody>\r\n            <Carousel interval=\"300000\" activeIndex={this.state.topImgIdx} onSelect={this.handleSelectTop}>\r\n              {this.state.Images.length > 0 ? this.state.Images.map((item, idx) => (\r\n                <Carousel.Item onClick={() => this.view(idx)} style={{backgroundImage: `url(${item.image})`}}>\r\n                \r\n              </Carousel.Item>\r\n              )) :\r\n                <tr>\r\n                  <td colSpan=\"3\" className=\"text-center\">\r\n                    No Property Available\r\n                  </td>\r\n                </tr>\r\n              }\r\n            </Carousel>\r\n          </ModalBody>\r\n        </Modal> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\contact\\Header.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\GlobalComponents\\Footer.js",["966","967","968","969"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../../assets/img/logo.png'\r\n\r\nexport default class Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<section className=\"theme-bg call-to-act-wrap\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"call-to-act\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"call-to-act-head\">\r\n\t\t\t\t\t\t\t\t\t\t<h3>Want to Become a Real Estate Agent?</h3>\r\n\t\t\t\t\t\t\t\t\t\t<span>We'll help you to grow your career and growth.</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" className=\"btn btn-call-to-act\">SignUp Today</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<footer className=\"dark-footer skin-dark-footer\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-4 col-md-4 col-12 col-sm-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t\t<img src={logo} className=\"img-footer\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"footer-add\">\r\n\t\t\t\t\t\t\t\t\t\t\t<p>Collins Street West, Victoria 8007, Australia.</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>+1 246-345-0695</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>info@example.com</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-2 col-md-2 col-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"widget-title\">My Account</h4>\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"footer-menu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/checkuser\">My Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"#\">Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-3 col-md-3 col-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"widget-title\">Navigations</h4>\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"footer-menu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"about-us\">About Us</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/terms-condition\">Terms & condition</a></li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-3 col-md-3 col-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"footer-widget\">\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"widget-title\">Connect</h4>\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"footer-menu\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-facebook mr-2\"></i>Facebook</a></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-twitter mr-2\"></i>Twitter</a></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-instagram mr-2\"></i>Instagram</a></li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\"><i className=\"fab fa-linkedin mr-2\"></i>Linkedin</a></li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"footer-bottom\">\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"row align-items-center\">\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-8 col-7 col-sm-9\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">© 2021 Resido. Designd By <a href=\"https://themezhub.com\">Themez Hub</a> All Rights Reserved</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"col-lg-6 col-md-4 text-right col-5 col-sm-3\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"footer-bottom-social float-end\">\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"tems-condition\">Terms of Use</Link></li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\Index.js",["970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\Header.js",["1000","1001"],"import React, { Component } from 'react'\r\n// import '../../assets/css/styles.css'\r\n// import '../../assets/css/colors.css'\r\n// import '../../assets/css/plugins/css/bootstrap.min.css'\r\nimport carouselImg from '../../assets/img/p-4.jpg'\r\nimport logo from '../../assets/img/logo.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                    <div className=\"carousel-indicators\">\r\n                        <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\r\n                        <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\r\n                        <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\r\n                    </div>\r\n                    <div className=\"carousel-inner\">\r\n                        <div className=\"carousel-item active\">\r\n                            <img src={carouselImg} height=\"420\" className=\"d-block w-100\" alt=\"...\" />\r\n                        </div>\r\n                        <div className=\"carousel-item\">\r\n                            <img src={carouselImg} height=\"420\" className=\"d-block w-100\" alt=\"...\" />\r\n                        </div>\r\n                        <div className=\"carousel-item\">\r\n                            <img src={carouselImg} height=\"420\"  className=\"d-block w-100\" alt=\"...\" />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\r\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"visually-hidden\">Previous</span>\r\n                    </button>\r\n                    <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\r\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"visually-hidden\">Next</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\contact\\Navbar.js",["1002","1003","1004","1005","1006","1007","1008","1009"],"import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport logo from '../../assets/img/logo.png'\r\nimport logoMini from '../../assets/img/logo-mini.png'\r\nimport face1 from '../../assets/images/faces/dummy.png'\r\nimport { Button } from 'reactstrap'\r\nimport axios from \"axios\";\r\nimport { APIURL } from '../../components/constants/common';\r\n\r\nexport default class Navbar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: JSON.parse(localStorage.getItem(\"userData\")),\r\n            user_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n            token: JSON.parse(localStorage.getItem(\"token\")),\r\n            navigate: false,\r\n            redirectToHome: false,\r\n            profile_image: \"\",\r\n            name: \"\",\r\n            noRecords: false,\r\n            disableWishList:false\r\n        }\r\n    }\r\n\r\n    getProfileInfo() {\r\n        if (this.state.user) {\r\n            const formData = new FormData();\r\n            // formData.append('token', this.state.token);\r\n            formData.append('id', this.state.user.id);\r\n            var token = this.state.token\r\n            var app_url = APIURL + \"agent/edit-profile\"\r\n            axios\r\n                .post(app_url, formData, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    const info = response.data.data;\r\n                    this.setState({\r\n                        profile_image: info.url_path,\r\n                        name: info.fullName,\r\n                        noRecords: true\r\n                    })\r\n                    this.handleCountryState(this.state.countryId)\r\n                    console.log(\"sssssssss\", this.state.profile_image)\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        // errMsg: error.response.data.errors,\r\n                        Loader: false\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    onLogoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n    };\r\n\r\n    goToProfile() {\r\n        if (!this.state.user) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        if (this.state.user) {\r\n            if (this.state.user_type == \"Agent\") {\r\n                window.location.href = \"/agent\";\r\n            }\r\n            else if (this.state.user_type == \"Seller\") {\r\n                window.location.href = \"/seller\";\r\n            }\r\n            else if (this.state.user_type == \"Admin\") {\r\n                window.location.href = \"/Admin\";\r\n            }\r\n            else if (this.state.user_type == \"Buyer\") {\r\n                window.location.href = \"/Buyer\";\r\n            }\r\n            else {\r\n                window.location.href = \"/\";\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProfileInfo()\r\n        if(this.state.user){\r\n\t\t\tif(this.state.user.user_type !==\"Buyer\")\t{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdisableWishList:true\r\n\t\t\t\t})}\r\n\t\t}\r\n    }\r\n    toggle(){\r\n\t\tthis.setState({\r\n\t\t\tportrait:!this.state.portrait\r\n\t\t})\r\n\t}\r\n\r\n    render() {\r\n        if (this.state.navigate) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n        if (this.state.redirectToHome) {\r\n            return <Redirect to=\"/seller\" push={true} />;\r\n        }\r\n        const { user_type } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"header header-light head-shadow\">\r\n                    <div className=\"container\">\r\n                    <nav id=\"navigation\" className={this.state.portrait ? \"navigation navigation-portrait\":\"navigation navigation-landscape\"}>\r\n\t\t\t\t\t\t\t<div className=\"nav-header\">\r\n\t\t\t\t\t\t\t\t{/* <Link className=\"nav-brand static-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link> */}\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand fixed-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<div onClick={() => this.toggle()} className=\"nav-toggle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={this.state.portrait ? \"nav-menus-wrapper-open nav-menus-wrapper\": \"nav-menus-wrapper\"} style={{ transitionProperty: this.state.portrait ? \"left\" : \"none\" }}>\r\n\t\t\t\t\t\t\t\t<span class=\"nav-menus-wrapper-close-button\" onClick={() => this.toggle()}>✕</span>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu\">\r\n\t\t\t\t\t\t\t\t\t<li ><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t{!this.state.disableWishList ? <li><Link to=\"/buyer/wishlist\">Wishlist</Link></li> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"active\"><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu nav-menu-social align-to-right\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"d-none\"><Link to=\"\"><i className=\"far fa-heart mr-2 text-success\"></i>Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"dropdown bg-transparent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-toggle text-success \" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n                                        this.state.noRecords &&\r\n                                        <img  className='mr-1 rounded-circle' width={30} height={30} src={this.state.profile_image !== \"\" ? this.state.profile_image : face1} alt=\"profile\" />\r\n                                    }\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-success' >{this.state.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.goToProfile()} ><i className=\"far fa-user mr-2 \"></i>Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.onLogoutHandler()} to=\"/\"><i className=\"fas fa-sign-out-alt mr-2\"></i>Logout</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li> :\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"\"> <Link to=\"/signin\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign In</Link> </li>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<li className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign Up</Link>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.portrait ? \r\n\t\t\t\t\t\t\t\t<div className='nav-overlay-panel'></div>\r\n\t\t\t\t\t\t\t\t:\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\SearchPlace.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\News.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\HowItWorks.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\Index.js",["1010","1011","1012"],"import React, { Component } from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Calculate from './Calculate'\r\nimport ContactCard from './ContactCard'\r\nimport FeaturedProperty from './FeaturedProperty'\r\n\r\nexport default class Index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"gray-simple\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-lg-8 col-md-12 col-sm-12\">\r\n\r\n                                <div className=\"property_block_wrap style-2 p-4\">\r\n                                    <div className=\"prt-detail-title-desc\">\r\n                                        <span className=\"prt-types sale\">For Sale</span>\r\n                                        <h3>Jannat Graynight Mood In Siver Colony, London</h3>\r\n                                        <span><i className=\"lni-map-marker\"></i> 778 Country St. Panama City, FL</span>\r\n                                        <h3 className=\"prt-price-fix\">$7,600<sub>/month</sub></h3>\r\n                                        <div className=\"list-fx-features\">\r\n                                            <div className=\"listing-card-info-icon\">\r\n                                                <div className=\"inc-fleat-icon\"><img src=\"assets/img/bed.svg\" width=\"13\" alt=\"\" /></div>3 Beds\r\n                                            </div>\r\n                                            <div className=\"listing-card-info-icon\">\r\n                                                <div className=\"inc-fleat-icon\"><img src=\"assets/img/bathtub.svg\" width=\"13\" alt=\"\" /></div>1 Bath\r\n                                            </div>\r\n                                            <div className=\"listing-card-info-icon\">\r\n                                                <div className=\"inc-fleat-icon\"><img src=\"assets/img/move.svg\" width=\"13\" alt=\"\" /></div>800 sqft\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Accordion defaultActiveKey=\"0\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Detail & Features</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                            <ul className=\"deatil_features\">\r\n                                                <li><strong>Bedrooms:</strong>3 Beds</li>\r\n                                                <li><strong>Bathrooms:</strong>2 Bath</li>\r\n                                                <li><strong>Areas:</strong>4,240 sq ft</li>\r\n                                                <li><strong>Garage</strong>1</li>\r\n                                                <li><strong>Property Type:</strong>Apartment</li>\r\n                                                <li><strong>Year:</strong>Built1982</li>\r\n                                                <li><strong>Status:</strong>Active</li>\r\n                                                <li><strong>Cooling:</strong>Central A/C</li>\r\n                                                <li><strong>Heating Type:</strong>Forced Air</li>\r\n                                                <li><strong>Kitchen Features:</strong>Kitchen Facilities</li>\r\n                                                <li><strong>Exterior:</strong>FinishBrick</li>\r\n                                                <li><strong>Swimming Pool:</strong>Yes</li>\r\n                                                <li><strong>Elevetor:</strong>Yes</li>\r\n                                                <li><strong>Fireplace:</strong>Yes</li>\r\n                                                <li><strong>Free WiFi:</strong>No</li>\r\n                                            </ul>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                <Accordion defaultActiveKey=\"0\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Description</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                            <div className=\"block-body\">\r\n                                                <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet.</p>\r\n                                                <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.</p>\r\n                                            </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                <Accordion defaultActiveKey=\"0\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Ameneties</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n                                                <ul className=\"avl-features third color\">\r\n                                                    <li>Air Conditioning</li>\r\n                                                    <li>Swimming Pool</li>\r\n                                                    <li>Central Heating</li>\r\n                                                    <li>Laundry Room</li>\r\n                                                    <li>Gym</li>\r\n                                                    <li>Alarm</li>\r\n                                                    <li>Window Covering</li>\r\n                                                    <li>Internet</li>\r\n                                                    <li>Pets Allow</li>\r\n                                                    <li>Free WiFi</li>\r\n                                                    <li>Car Parking</li>\r\n                                                    <li>Spa & Massage</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                <Accordion defaultActiveKey=\"1\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Property video</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n                                            <div className=\"property_video\">\r\n                                                <div className=\"thumb\">\r\n                                                    <img className=\"pro_img img-fluid w100\" src=\"https://via.placeholder.com/1200x800\" alt=\"7.jpg\" />\r\n                                                    <div className=\"overlay_icon\">\r\n                                                        <div className=\"bb-video-box\">\r\n                                                            <div className=\"bb-video-box-inner\">\r\n                                                                <div className=\"bb-video-box-innerup\">\r\n                                                                    <a href=\"https://www.youtube.com/watch?v=A8EI6JaFbv4\" data-bs-toggle=\"modal\" data-bs-target=\"#popup-video\" className=\"theme-cl\"><i className=\"ti-control-play\"></i></a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                <Accordion defaultActiveKey=\"1\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Floor Plan</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n                                            <div className=\"accordion\" id=\"floor-option\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header\" id=\"firstFloor\">\r\n                                                        <h2 className=\"mb-0\">\r\n                                                            <button type=\"button\" className=\"btn btn-link\" data-bs-toggle=\"collapse\" data-bs-target=\"#firstfloor\" aria-controls=\"firstfloor\">First Floor<span>740 sq ft</span></button>\r\n                                                        </h2>\r\n                                                    </div>\r\n                                                    <div id=\"firstfloor\" className=\"collapse\" aria-labelledby=\"firstFloor\" data-parent=\"#floor-option\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <img src=\"assets/img/floor.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header\" id=\"seconfFloor\">\r\n                                                        <h2 className=\"mb-0\">\r\n                                                            <button type=\"button\" className=\"btn btn-link collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#secondfloor\" aria-controls=\"secondfloor\">Second Floor<span>710 sq ft</span></button>\r\n                                                        </h2>\r\n                                                    </div>\r\n                                                    <div id=\"secondfloor\" className=\"collapse\" aria-labelledby=\"seconfFloor\" data-parent=\"#floor-option\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <img src=\"assets/img/floor.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header\" id=\"third-garage\">\r\n                                                        <h2 className=\"mb-0\">\r\n                                                            <button type=\"button\" className=\"btn btn-link collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#garages\" aria-controls=\"garages\">Garage<span>520 sq ft</span></button>\r\n                                                        </h2>\r\n                                                    </div>\r\n                                                    <div id=\"garages\" className=\"collapse\" aria-labelledby=\"third-garage\" data-parent=\"#floor-option\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <img src=\"assets/img/floor.jpg\" className=\"img-fluid\" alt=\"\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                <Accordion defaultActiveKey=\"1\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Location</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n                                            <div className=\"map-container\">\r\n                                                <div id=\"singleMap\" data-latitude=\"40.7427837\" data-longitude=\"-73.11445617675781\" data-mapTitle=\"Our Location\"></div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                <Accordion defaultActiveKey=\"1\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Gallery</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n                                            <ul className=\"list-gallery-inline\">\r\n                                                <li>\r\n                                                    <a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"https://via.placeholder.com/1200x800\" className=\"mfp-gallery\"><img src=\"https://via.placeholder.com/1200x800\" className=\"img-fluid mx-auto\" alt=\"\" /></a>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n\r\n                                <div className=\"rating-overview\">\r\n                                    <div className=\"rating-overview-box\">\r\n                                        <span className=\"rating-overview-box-total\">4.2</span>\r\n                                        <span className=\"rating-overview-box-percent\">out of 5.0</span>\r\n                                        <div className=\"star-rating\" data-rating=\"5\"><i className=\"ti-star\"></i><i className=\"ti-star\"></i><i className=\"ti-star\"></i><i className=\"ti-star\"></i><i className=\"ti-star\"></i>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"rating-bars\">\r\n                                        <div className=\"rating-bars-item\">\r\n                                            <span className=\"rating-bars-name\">Service</span>\r\n                                            <span className=\"rating-bars-inner\">\r\n                                                <span className=\"rating-bars-rating high\" data-rating=\"4.7\">\r\n                                                    <span className=\"rating-bars-rating-inner\" style={{ width: \"85%\" }}></span>\r\n                                                </span>\r\n                                                <strong>4.7</strong>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"rating-bars-item\">\r\n                                            <span className=\"rating-bars-name\">Value for Money</span>\r\n                                            <span className=\"rating-bars-inner\">\r\n                                                <span className=\"rating-bars-rating good\" data-rating=\"3.9\">\r\n                                                    <span className=\"rating-bars-rating-inner\" style={{ width: \"75%\" }}></span>\r\n                                                </span>\r\n                                                <strong>3.9</strong>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"rating-bars-item\">\r\n                                            <span className=\"rating-bars-name\">Location</span>\r\n                                            <span className=\"rating-bars-inner\">\r\n                                                <span className=\"rating-bars-rating mid\" data-rating=\"3.2\">\r\n                                                    <span className=\"rating-bars-rating-inner\" style={{ width: \"52.2%\" }}></span>\r\n                                                </span>\r\n                                                <strong>3.2</strong>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"rating-bars-item\">\r\n                                            <span className=\"rating-bars-name\">Cleanliness</span>\r\n                                            <span className=\"rating-bars-inner\">\r\n                                                <span className=\"rating-bars-rating poor\" data-rating=\"2.0\">\r\n                                                    <span className=\"rating-bars-rating-inner\" style={{ width: \"20%\" }}></span>\r\n                                                </span>\r\n                                                <strong>2.0</strong>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Accordion defaultActiveKey=\"1\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>102 Reviews</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n                                            <div className=\"author-review\">\r\n                                                <div className=\"comment-list\">\r\n                                                    <ul>\r\n                                                        <li className=\"article_comments_wrap\">\r\n                                                            <article>\r\n                                                                <div className=\"article_comments_thumb\">\r\n                                                                    <img src=\"https://via.placeholder.com/400x400\" alt=\"\" />\r\n                                                                </div>\r\n                                                                <div className=\"comment-details\">\r\n                                                                    <div className=\"comment-meta\">\r\n                                                                        <div className=\"comment-left-meta\">\r\n                                                                            <h4 className=\"author-name\">Rosalina Kelian</h4>\r\n                                                                            <div className=\"comment-date\">19th May 2018</div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"comment-text\">\r\n                                                                        <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim laborumab.\r\n                                                                            perspiciatis unde omnis iste natus error.</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </article>\r\n                                                        </li>\r\n                                                        <li className=\"article_comments_wrap\">\r\n                                                            <article>\r\n                                                                <div className=\"article_comments_thumb\">\r\n                                                                    <img src=\"https://via.placeholder.com/400x400\" alt=\"\" />\r\n                                                                </div>\r\n                                                                <div className=\"comment-details\">\r\n                                                                    <div className=\"comment-meta\">\r\n                                                                        <div className=\"comment-left-meta\">\r\n                                                                            <h4 className=\"author-name\">Rosalina Kelian</h4>\r\n                                                                            <div className=\"comment-date\">19th May 2018</div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"comment-text\">\r\n                                                                        <p>Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim laborumab.\r\n                                                                            perspiciatis unde omnis iste natus error.</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </article>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            <a href=\"#\" className=\"reviews-checked theme-cl\"><i className=\"fas fa-arrow-alt-circle-down mr-2\"></i>See More Reviews</a>\r\n                                        </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                                <Accordion defaultActiveKey=\"0\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Nearby</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n\r\n<div className=\"nearby-wrap\">\r\n    <div className=\"nearby_header\">\r\n        <div className=\"nearby_header_first\">\r\n            <h5>Schools Around</h5>\r\n        </div>\r\n        <div className=\"nearby_header_last\">\r\n            <div className=\"nearby_powerd\">\r\n                Powerd by <img src=\"assets/img/edu.png\" className=\"img-fluid\" alt=\"\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"neary_section_list\">\r\n\r\n        <div className=\"neary_section\">\r\n            <div className=\"neary_section_first\">\r\n                <h4 className=\"nearby_place_title\">Green Iseland School<small>(3.52 mi)</small></h4>\r\n            </div>\r\n            <div className=\"neary_section_last\">\r\n                <div className=\"nearby_place_rate\">\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                </div>\r\n                <small className=\"reviews-count\">(421 Reviews)</small>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"neary_section\">\r\n            <div className=\"neary_section_first\">\r\n                <h4 className=\"nearby_place_title\">Ragni Intermediate College<small>(0.52 mi)</small></h4>\r\n            </div>\r\n            <div className=\"neary_section_last\">\r\n                <div className=\"nearby_place_rate\">\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star-half filled\"></i>\r\n                </div>\r\n                <small className=\"reviews-count\">(470 Reviews)</small>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"neary_section\">\r\n            <div className=\"neary_section_first\">\r\n                <h4 className=\"nearby_place_title\">Rose Wood Primary Scool<small>(0.47 mi)</small></h4>\r\n            </div>\r\n            <div className=\"neary_section_last\">\r\n                <div className=\"nearby_place_rate\">\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                </div>\r\n                <small className=\"reviews-count\">(204 Reviews)</small>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div className=\"nearby-wrap\">\r\n    <div className=\"nearby_header\">\r\n        <div className=\"nearby_header_first\">\r\n            <h5>Food Around</h5>\r\n        </div>\r\n        <div className=\"nearby_header_last\">\r\n            <div className=\"nearby_powerd\">\r\n                Powerd by <img src=\"assets/img/food.png\" className=\"img-fluid\" alt=\"\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"neary_section_list\">\r\n\r\n        <div className=\"neary_section\">\r\n            <div className=\"neary_section_first\">\r\n                <h4 className=\"nearby_place_title\">The Rise hotel<small>(2.42 mi)</small></h4>\r\n            </div>\r\n            <div className=\"neary_section_last\">\r\n                <div className=\"nearby_place_rate\">\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                </div>\r\n                <small className=\"reviews-count\">(105 Reviews)</small>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"neary_section\">\r\n            <div className=\"neary_section_first\">\r\n                <h4 className=\"nearby_place_title\">Blue Ocean Bar & Restaurant<small>(1.52 mi)</small></h4>\r\n            </div>\r\n            <div className=\"neary_section_last\">\r\n                <div className=\"nearby_place_rate\">\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star filled\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                </div>\r\n                <small className=\"reviews-count\">(40 Reviews)</small>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion><Accordion defaultActiveKey=\"1\" flush>\r\n                                    <Accordion.Item eventKey=\"0\">\r\n                                        <Accordion.Header>Write a Review</Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                        <div className=\"block-body\">\r\n                                            <form className=\"simple-form\">\r\n                                                <div className=\"row\">\r\n\r\n                                                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <textarea className=\"form-control ht-80\" placeholder=\"Messages\"></textarea>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Property Title\" />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <button className=\"btn btn-theme-light-2 rounded\" type=\"submit\">Submit Review</button>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </Accordion>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-4 col-md-12 col-sm-12\">\r\n\r\n                                <div className=\"like_share_wrap b-0\">\r\n                                    <ul className=\"like_share_list\">\r\n                                        <li><a href=\"JavaScript:Void(0);\" className=\"btn btn-likes\" data-toggle=\"tooltip\" data-original-title=\"Share\"><i className=\"fas fa-share\"></i>Share</a></li>\r\n                                        <li><a href=\"JavaScript:Void(0);\" className=\"btn btn-likes\" data-toggle=\"tooltip\" data-original-title=\"Save\"><i className=\"fas fa-heart\"></i>Save</a></li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className=\"details-sidebar\">\r\n\r\n                                   <ContactCard />\r\n\r\n                                   <Calculate />\r\n\r\n                                   <FeaturedProperty />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\LatestProperty.js",["1013","1014","1015"],"import React, { Component } from 'react'\r\nimport logo from '../../assets/img/logo.png'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { APIURL } from '../constants/common';\r\nimport bad from '../../assets/img/bed.svg'\r\nimport bath from '../../assets/img/bathtub.svg'\r\nimport move from '../../assets/img/move.svg'\r\nimport Button from '@restart/ui/esm/Button';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default class ExplorePlaces extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tuser: JSON.parse(localStorage.getItem(\"userData\")),\r\n\t\t\ttoken: JSON.parse(localStorage.getItem(\"token\")),\r\n\t\t\tPropertyList: [],\r\n\t\t\twishlist: false,\r\n\t\t\tpage: 0,\r\n\t\t\tid: \"\",\r\n\t\t\tredirect: false,\r\n\t\t\tlimit: 3\r\n\t\t}\r\n\t}\r\n\ts\r\n\tcomponentDidMount() {\r\n\t\tthis.getPropertyList()\r\n\t}\r\n\tonLoadMore() {\r\n\t\tthis.setState({\r\n\t\t\tlimit: this.state.limit + 3\r\n\t\t});\r\n\t}\r\n\r\n\tgetPropertyList() {\r\n\t\tvar token = this.state.token\r\n\t\taxios\r\n\t\t\t.get(APIURL + \"get-latest-properties\", {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(\"get-latest-properties\", response.data.data)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tPropertyList: response.data.data\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\t// alert(error)\r\n\t\t\t})\r\n\t}\r\n\r\n\taddToWishlist = (e, idx, status) => {\r\n\t\tif (!this.state.user) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tredirect: true\r\n\t\t\t})\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tvar token = this.state.token\r\n\t\tconst { userInfo, user } = this.state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('user_id', user.id);\r\n\t\tformData.append('property_id', e.id);\r\n\t\taxios\r\n\t\t\t.post(APIURL + \"buyer/property-wishlist-add\", formData, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Authorization': `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tlet propertyData = this.state.PropertyList\r\n\t\t\t\tconsole.log(propertyData[idx].wishlist, status, idx)\r\n\t\t\t\tpropertyData[idx].wishlist = status\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tPropertyList: propertyData\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrMsg: error.response.data.error,\r\n\t\t\t\t\tLoader: false\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t};\r\n\r\n\tgoToProperty() {\r\n\t\tthis.setState({\r\n\t\t\tgoToProperty: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.redirect) {\r\n\t\t\treturn <Redirect to=\"/signin\" />;\r\n\t\t}\r\n\t\tif (this.state.goToProperty) {\r\n\t\t\treturn <Redirect to=\"/Listing\" />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t\t<div className=\"col-lg-7 col-md-10 text-center\">\r\n\t\t\t\t\t\t\t\t<div className=\"sec-heading center\">\r\n\t\t\t\t\t\t\t\t\t<h2>Latest Properties</h2>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t{this.state.PropertyList.length > 0 ? this.state.PropertyList.slice(0, this.state.limit).map((item, i) => (\r\n\t\t\t\t\t\t\t\t<div key={i} className=\"col-lg-4 col-md-6 col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t{item.property_detail.map((sItem, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"property-listing property-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-img-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"list-img-slide\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"click\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.propertyProfileImage.length > 0 && item.propertyProfileImage.map((Img, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={\"/viewproperty/details/\" + item.id} className=\"prt-view\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={idx}><a href=\"#\"><img src={Img.url_path} className=\"img-fluid mx-auto\" alt=\"\" /></a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem.wishlist ?\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span  className=\"wishlist-heart\"><i className=\"fas fa-heart text-success\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span  className=\"wishlist-heart\"><i className=\"far fa-heart text-success\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={\"/viewproperty/details/\" + item.id} className=\"prt-view\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-detail-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-short-detail-wrap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-short-detail\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span className=\"property-type\">For Rent</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"listing-name verified ms-1\">{item.name}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"footer-first mt-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"foot-location\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ti-location-pin mr-1 fs-5\"></i>{sItem.apt_number === \"null\" ? \"NA\" : sItem.apt_number}, {sItem.street_name === \"null\" ? \"NA\" : sItem.street_name}, {sItem.city === \"null\" ? \"NA\" : sItem.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"price-features-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"list-fx-features\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-card-info-icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"inc-fleat-icon\"><img src={bad} width=\"13\" alt=\"\" /></div>{sItem.number_of_bedrooms ? sItem.number_of_bedrooms : \"NA\"} Beds\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-card-info-icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"inc-fleat-icon\"><img src={bath} width=\"13\" alt=\"\" /></div>{sItem.number_of_bathrooms ? sItem.number_of_bathrooms : \"NA\"} Bath\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-card-info-icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"inc-fleat-icon\"><img src={move} width=\"13\" alt=\"\" /></div>{sItem.lot_size ? sItem.lot_size : \"NA\"} sqft\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-detail-footer\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"listing-short-detail-flex\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"listing-card-info-price\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sItem.listing_price}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"foo\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprefix={'$'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderText={(value, props) => <div {...props}>{value}</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"footer-flex\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)) :\r\n\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"3\" className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tNo Property Available\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.PropertyList.length === this.state.limit ?\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"btn btn-theme-light-2 rounded\">No More Properties Available</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this.goToProperty()} className=\"btn btn-theme-light-2 rounded\">Browse More Properties</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\Navbar.js",["1016","1017","1018","1019","1020","1021","1022"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport logo from '../../assets/img/logo.png'\r\nimport user from '../../assets/img/user.svg'\r\nimport { Link ,Redirect} from 'react-router-dom'\r\nimport { APIURL } from '../../components/constants/common';\r\nimport face1 from '../../assets/images/faces/dummy.png'\r\n\r\nexport default class Navbar extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttoken: JSON.parse(localStorage.getItem(\"token\")),\r\n\t\t\tuser: JSON.parse(localStorage.getItem(\"userData\")),\r\n\t\t\tuser_type: JSON.parse(localStorage.getItem(\"user_type\")),\r\n\t\t\tnavigate: false,\r\n\t\t\tdisableWishList: false,\r\n\t\t\tprofile_image: \"\",\r\n\t\t\tname: \"\",\r\n\t\t\tnoRecords: false,\r\n\t\t\tportrait:false\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle(){\r\n\t\tthis.setState({\r\n\t\t\tportrait:!this.state.portrait\r\n\t\t})\r\n\t}\r\n\r\n\tgetProfileInfo() {\r\n\t\tif (this.state.user) {\r\n\t\t\tconst formData = new FormData();\r\n\t\t\t// formData.append('token', this.state.token);\r\n\t\t\tformData.append('id', this.state.user.id);\r\n\t\t\tvar token = this.state.token\r\n\t\t\tvar app_url = APIURL + \"agent/edit-profile\"\r\n\t\t\taxios\r\n\t\t\t\t.post(app_url, formData, {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Authorization': `Bearer ${token}`\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconst info = response.data.data;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tprofile_image: info.url_path,\r\n\t\t\t\t\t\tname: info.fullName,\r\n\t\t\t\t\t\tnoRecords: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.handleCountryState(this.state.countryId)\r\n\t\t\t\t\tconsole.log(\"sssssssss\", this.state.profile_image)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t// errMsg: error.response.data.errors,\r\n\t\t\t\t\t\tLoader: false\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tgoToProfile() {\r\n\t\tif (this.state.user) {\r\n\t\t\tif (this.state.user_type == \"Agent\") {\r\n\t\t\t\twindow.location.href = \"/agent\";\r\n\t\t\t}\r\n\t\t\telse if (this.state.user_type == \"Seller\") {\r\n\t\t\t\twindow.location.href = \"/seller\";\r\n\t\t\t}\r\n\t\t\telse if (this.state.user_type == \"Admin\") {\r\n\t\t\t\twindow.location.href = \"/Admin\";\r\n\t\t\t}\r\n\t\t\telse if (this.state.user_type == \"Buyer\") {\r\n\t\t\t\twindow.location.href = \"/Buyer\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.location.href = \"/\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tlistenScrollEvent = e => {\r\n\t\tif (window.scrollY > 50) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstickyheader: true\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstickyheader: false\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tonLogoutHandler = () => {\r\n        localStorage.removeItem(\"isLoggedIn\");\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.clear();\r\n        this.setState({\r\n            navigate: true,\r\n        });\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.location.reload();\r\n\t\t}, 500);\r\n    };\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tslug:\"about-us\"\r\n\t\t})\r\n\t\tif (this.state.user) {\r\n\t\t\tif (this.state.user.user_type !== \"Buyer\") {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdisableWishList: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.getProfileInfo()\r\n\t\twindow.addEventListener('scroll', this.listenScrollEvent)\r\n\t}\r\n\r\n\trender() {\r\n        if (this.state.navigate && !this.state.user) {\r\n            return <Redirect to=\"/\" push={true} />;\r\n        }\r\n\t\tconst { user_type } = this.state\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className={this.state.stickyheader ? \"header change-logo header-fixed\" : \"header change-logo\"}>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<nav id=\"navigation\" className={this.state.portrait ? \"navigation navigation-portrait\":\"navigation navigation-landscape\"}>\r\n\t\t\t\t\t\t\t<div className=\"nav-header\">\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand static-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-brand fixed-logo\" to=\"/\"><img src={logo} className=\"logo\" alt=\"\" /></Link>\r\n\t\t\t\t\t\t\t\t<div onClick={() => this.toggle()} className=\"nav-toggle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={this.state.portrait ? \"nav-menus-wrapper-open nav-menus-wrapper\": \"nav-menus-wrapper\"} style={{ transitionProperty: this.state.portrait ? \"left\" : \"none\" }}>\r\n\t\t\t\t\t\t\t\t<span class=\"nav-menus-wrapper-close-button\" onClick={() => this.toggle()}>✕</span>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"active\"><Link to=\"/\">Home</Link></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/Listing\">Property</Link></li>\r\n\t\t\t\t\t\t\t\t\t{!this.state.disableWishList ? <li><Link to=\"/buyer/wishlist\">Wishlist</Link></li> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"/cms/about-us\">About Us</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><Link to=\"/contact\">Contact Us</Link></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<ul className=\"nav-menu nav-menu-social align-to-right\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"d-none\"><Link to=\"\"><i className=\"far fa-heart mr-2 text-success\"></i>Wishlist</Link></li>\r\n\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"dropdown bg-transparent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-toggle text-success \" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n                                        this.state.noRecords &&\r\n                                        <img  className='mr-1 rounded-circle' width={30} height={30} src={this.state.profile_image !== \"\" ? this.state.profile_image : face1} alt=\"profile\" />\r\n                                    }\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='text-success' >{this.state.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.goToProfile()} ><i className=\"far fa-user mr-2 \"></i>Profile</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li><Link className=\"dropdown-item\" onClick={() => this.onLogoutHandler()} to=\"/\"><i className=\"fas fa-sign-out-alt mr-2\"></i>Logout</Link></li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li> :\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"\"> <Link to=\"/signin\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign In</Link> </li>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<li className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.user ?\r\n\t\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" ><i className=\"far fa-user-circle mr-2 text-success\"></i>Sign Up</Link>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.portrait ? \r\n\t\t\t\t\t\t\t\t<div className='nav-overlay-panel'></div>\r\n\t\t\t\t\t\t\t\t:\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Home\\Header.js",["1023","1024"],"import React, { Component } from 'react'\r\nimport logo from '../../assets/img/logo.png'\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng, } from 'react-places-autocomplete';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nexport default class Header extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\taddress: '',\r\n\t\t\tlat: \"\",\r\n\t\t\tlong: \"\",\r\n\t\t\tinfo: [],\r\n\t\t\tstatic:[\r\n\t\t\t\t{name:\"Where To Say? Where To Say? Where To Say?\"},\r\n\t\t\t\t{name:\"Where To Say? Where To Say? Where To Say?\"},\r\n\t\t\t\t{name:\"Where To Say? Where To Say? Where To Say?\"},\r\n\t\t\t\t{name:\"Where To Say? Where To Say? Where To Say?\"},\r\n\t\t\t\t{name:\"Where To Say? Where To Say? Where To Say?\"},\r\n\t\t\t\t{name:\"Where To Say? Where To Say? Where To Say?\"},\r\n\t\t\t\t{name:\"Where To Say? Where To Say? Where To Say?\"},\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\thandleChange = address => {\r\n\t\tthis.setState({ address });\r\n\t};\r\n\r\n\thandleSelect = address => {\r\n\t\tgeocodeByAddress(address)\r\n\t\t\t.then(results => getLatLng(results[0]))\r\n\t\t\t.then(latLng =>\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlat: latLng.lat,\r\n\t\t\t\t\tlong: latLng.lng,\r\n\t\t\t\t\taddress: address\r\n\t\t\t\t}))\r\n\t\t\t.catch(error => console.error('Error', error));\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.state.lat!=\"\") {\r\n            return <Redirect to={\"/listing?search=\"+this.state.address+\"&lat=\"+this.state.lat+\"&lng=\"+this.state.long} />;\r\n        }\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"image-cover hero-banner\" style={{ backgroundImage: `url(${\"https://images.unsplash.com/photo-1512917774080-9991f1c4c750?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80\"})` }} data-overlay=\"6\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\r\n\t\t\t\t\t\t<h1 className=\"big-header-capt mb-0\">Find Your Property</h1>\r\n\t\t\t\t\t\t<p className=\"text-center mb-5\">From as low as $10 per day with limited time offer</p>\r\n\r\n\t\t\t\t\t\t<div className=\"full-search-2 eclip-search italian-search hero-search-radius shadow col-md-8 m-auto col-12\">\r\n\t\t\t\t\t\t\t<div className=\"hero-search-content\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-9 col-md-9 col-sm-9 col-8\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-with-icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"ti-location-pin\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<PlacesAutocomplete\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.address}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.handleSelect}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...getInputProps({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder: 'Search Places',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName: 'location-search-input form-control',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"autocomplete-dropdown-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {loading && <div>Loading...</div>} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{suggestions.map(suggestion => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst className = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'suggestion-item--active'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'suggestion-item';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// inline style for demonstration purpose\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst style = suggestion.active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...getSuggestionItemProps(suggestion, {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{suggestion.description} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</PlacesAutocomplete>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div style={{ display: \"none\" }}>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-3 col-md-3 col-sm-3 col-4\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn search-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t to={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tpathname: '/listing',\r\n\t\t\t\t\t\t\t\t\t\t\t\tsearch: '?search='+this.state.address,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}> Search </Link>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Listings\\Map\\index.js",["1025","1026","1027","1028","1029","1030"],"import React,{useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SimpleMap from \"./Map\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nconst locations = require(\"./locations.json\");\r\n\r\nfunction Map(props) {\r\n  console.log(\"latlng\",props.latlng)\r\n  return (\r\n    <div className=\"App\">\r\n      <SimpleMap\r\n        locations={props.Data}\r\n        latlng={props.latlng}\r\n        stickyheader={props.stickyheader}\r\n        getPropertyList={props.getPropertyList.bind(this)}\r\n        getMapChange={props.getMapChange.bind(this)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Map\\index.js",["1031","1032","1033","1034"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SimpleMap from \"./Map\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\n// import \"./styles.css\";\r\nconst locations = require(\"./locations.json\");\r\n\r\nfunction Map() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SimpleMap locations={locations} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default  Map\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\FeaturedProperty.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\ContactCard.js",["1035"],"import React, { Component } from 'react'\r\n\r\nexport default class ContactCard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"like_share_wrap b-0 justify-content-between d-flex\">\r\n                    <button className=\"btn rounded-0 btn-primary\">Request a tour</button>\r\n                    <button className=\"btn rounded-0 btn-outline-theme\" data-toggle=\"modal\" data-target=\"#exampleModal\">Request to apply</button>\r\n                </div>\r\n                <div className=\"sides-widget\">\r\n                    <div className=\"sides-widget-header\">\r\n                        <div className=\"agent-photo\"><img src=\"https://via.placeholder.com/400x400\" alt=\"\" /></div>\r\n                        <div className=\"sides-widget-details\">\r\n                            <h4><a href=\"#\">Shivangi Preet</a></h4>\r\n                            <span><i className=\"lni-phone-handset\"></i>(91) 123 456 7895</span>\r\n                        </div>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"sides-widget-body simple-form\">\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Your Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone No.</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Your Phone\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Description</label>\r\n                            <textarea className=\"form-control\">I'm interested in this property.</textarea>\r\n                        </div>\r\n                        <button className=\"btn btn-black btn-md rounded full-width\">Send Message</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                  <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                      <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ready to apply?</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                          <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"modal-body\">\r\n                       <p>Enter your contact details, and we'll let the rental manager know you want to submit an application. If they're interested, they'll contact you with next steps</p>\r\n                       <form className=\"simple-form\" action=\"\">\r\n                             <div className=\"form-group\">\r\n                                <label> Enter your message </label> \r\n                                <textarea className=\"form-control h-auto\" rows=\"5\"></textarea>\r\n                             </div>   \r\n                             <div className=\"form-group\">\r\n                                <label> Your First & Last Name</label> \r\n                                <input className=\"form-control\" type=\"\" name=\"\" />\r\n                             </div>    \r\n                             <div className=\"form-group\">\r\n                                <label> Phone </label> \r\n                                <input className=\"form-control\" type=\"\" name=\"\" />\r\n                             </div>     \r\n                             <div className=\"form-group\">\r\n                                <label> Email </label> \r\n                                <input className=\"form-control\" type=\"\" name=\"\" />\r\n                             </div>  \r\n                             <button type=\"button\" className=\"btn btn-primary rounded-0 my-3 btn-block\">Save changes</button>\r\n\r\n                       </form>\r\n\r\n                       <p className=\"small \">You agree to Zillow's Terms of Use & Privacy Policy. By choosing to contact a property, you also agree that Zillow Group, landlords, and property managers may call or text you about any inquiries you submit through our services, which may involve use of automated means and prerecorded/artificial voices. You don't need to consent as a condition of renting any property, or buying any other goods or services. Message/data rates may apply.</p>\r\n                      </div>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\FeaturedProperty.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Features\\PropertyDetails\\Calculate.js",["1036"],"import React, { Component } from 'react'\r\n\r\nexport default class Calculate extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"sides-widget\">\r\n\r\n                    <div className=\"sides-widget-header\">\r\n                        <div className=\"sides-widget-details\">\r\n                            <h4><a href=\"#\">Shivangi Preet</a></h4>\r\n                            <span>View your Interest Rate</span>\r\n                        </div>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"sides-widget-body simple-form\">\r\n                        <div className=\"form-group\">\r\n                            <div className=\"input-with-icon\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Sale Price\" />\r\n                                <i className=\"ti-money\"></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"input-with-icon\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Down Payment\" />\r\n                                <i className=\"ti-money\"></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"input-with-icon\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Loan Term (Years)\" />\r\n                                <i className=\"ti-calendar\"></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"input-with-icon\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Interest Rate\" />\r\n                                <i className=\"fa fa-percent\"></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-black btn-md rounded full-width\">Calculate</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Listings\\Map\\Map.js",["1037","1038"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\Calculate.js",["1039"],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\Viewproperty\\details\\ContactCard.js",[],"D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\users\\Seller\\Map\\Map.js",["1040"],"import React from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport pin from \"./pin.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst markerStyle = {\r\n  position: \"absolute\",\r\n  top: \"100%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -100%)\"\r\n};\r\n\r\nclass SimpleMap extends React.Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 60.192059,\r\n      lng: 24.945831\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{\r\n            key: \"AIzaSyA16d9FJFh__vK04jU1P64vnEpPc3jenec\"\r\n          }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          {this.props.locations.map(item => {\r\n            if (item.address.length !== 0) {\r\n              return item.address.map(i => {\r\n                return (\r\n                  <Link to={\"/\" + item.name} key={i.id} lat={i.lat} lng={i.lng}>\r\n                    <img style={markerStyle} src={pin} alt=\"pin\" />\r\n                  </Link>\r\n                );\r\n              });\r\n            }\r\n          })}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","D:\\imenso\\Reactjs\\real-estate-marketplace\\src\\components\\constants\\common.js",[],{"ruleId":"1041","severity":1,"message":"1042","line":15,"column":29,"nodeType":"1043","messageId":"1044","endLine":15,"endColumn":31},{"ruleId":"1041","severity":1,"message":"1042","line":30,"column":29,"nodeType":"1043","messageId":"1044","endLine":30,"endColumn":31},{"ruleId":"1045","replacedBy":"1046"},{"ruleId":"1047","replacedBy":"1048"},{"ruleId":"1049","severity":1,"message":"1050","line":87,"column":41,"nodeType":"1051","messageId":"1052","endLine":87,"endColumn":46},{"ruleId":"1049","severity":1,"message":"1050","line":88,"column":53,"nodeType":"1051","messageId":"1052","endLine":88,"endColumn":58},{"ruleId":"1049","severity":1,"message":"1050","line":89,"column":41,"nodeType":"1051","messageId":"1052","endLine":89,"endColumn":46},{"ruleId":"1049","severity":1,"message":"1050","line":90,"column":50,"nodeType":"1051","messageId":"1052","endLine":90,"endColumn":55},{"ruleId":"1049","severity":1,"message":"1050","line":92,"column":44,"nodeType":"1051","messageId":"1052","endLine":92,"endColumn":49},{"ruleId":"1049","severity":1,"message":"1050","line":93,"column":42,"nodeType":"1051","messageId":"1052","endLine":93,"endColumn":47},{"ruleId":"1049","severity":1,"message":"1050","line":94,"column":43,"nodeType":"1051","messageId":"1052","endLine":94,"endColumn":48},{"ruleId":"1049","severity":1,"message":"1050","line":95,"column":60,"nodeType":"1051","messageId":"1052","endLine":95,"endColumn":65},{"ruleId":"1049","severity":1,"message":"1050","line":96,"column":41,"nodeType":"1051","messageId":"1052","endLine":96,"endColumn":46},{"ruleId":"1049","severity":1,"message":"1050","line":97,"column":42,"nodeType":"1051","messageId":"1052","endLine":97,"endColumn":47},{"ruleId":"1049","severity":1,"message":"1050","line":98,"column":44,"nodeType":"1051","messageId":"1052","endLine":98,"endColumn":49},{"ruleId":"1049","severity":1,"message":"1050","line":99,"column":40,"nodeType":"1051","messageId":"1052","endLine":99,"endColumn":45},{"ruleId":"1049","severity":1,"message":"1050","line":101,"column":48,"nodeType":"1051","messageId":"1052","endLine":101,"endColumn":53},{"ruleId":"1049","severity":1,"message":"1050","line":102,"column":49,"nodeType":"1051","messageId":"1052","endLine":102,"endColumn":54},{"ruleId":"1049","severity":1,"message":"1050","line":103,"column":56,"nodeType":"1051","messageId":"1052","endLine":103,"endColumn":61},{"ruleId":"1049","severity":1,"message":"1050","line":104,"column":57,"nodeType":"1051","messageId":"1052","endLine":104,"endColumn":62},{"ruleId":"1049","severity":1,"message":"1050","line":105,"column":54,"nodeType":"1051","messageId":"1052","endLine":105,"endColumn":59},{"ruleId":"1049","severity":1,"message":"1050","line":106,"column":63,"nodeType":"1051","messageId":"1052","endLine":106,"endColumn":68},{"ruleId":"1049","severity":1,"message":"1050","line":107,"column":55,"nodeType":"1051","messageId":"1052","endLine":107,"endColumn":60},{"ruleId":"1049","severity":1,"message":"1050","line":109,"column":40,"nodeType":"1051","messageId":"1052","endLine":109,"endColumn":45},{"ruleId":"1049","severity":1,"message":"1050","line":110,"column":48,"nodeType":"1051","messageId":"1052","endLine":110,"endColumn":53},{"ruleId":"1049","severity":1,"message":"1050","line":111,"column":49,"nodeType":"1051","messageId":"1052","endLine":111,"endColumn":54},{"ruleId":"1049","severity":1,"message":"1050","line":112,"column":58,"nodeType":"1051","messageId":"1052","endLine":112,"endColumn":63},{"ruleId":"1049","severity":1,"message":"1050","line":113,"column":58,"nodeType":"1051","messageId":"1052","endLine":113,"endColumn":63},{"ruleId":"1049","severity":1,"message":"1050","line":114,"column":71,"nodeType":"1051","messageId":"1052","endLine":114,"endColumn":76},{"ruleId":"1049","severity":1,"message":"1050","line":115,"column":62,"nodeType":"1051","messageId":"1052","endLine":115,"endColumn":67},{"ruleId":"1049","severity":1,"message":"1050","line":116,"column":48,"nodeType":"1051","messageId":"1052","endLine":116,"endColumn":53},{"ruleId":"1049","severity":1,"message":"1050","line":117,"column":53,"nodeType":"1051","messageId":"1052","endLine":117,"endColumn":58},{"ruleId":"1049","severity":1,"message":"1050","line":118,"column":55,"nodeType":"1051","messageId":"1052","endLine":118,"endColumn":60},{"ruleId":"1049","severity":1,"message":"1050","line":119,"column":61,"nodeType":"1051","messageId":"1052","endLine":119,"endColumn":66},{"ruleId":"1049","severity":1,"message":"1050","line":120,"column":60,"nodeType":"1051","messageId":"1052","endLine":120,"endColumn":65},{"ruleId":"1049","severity":1,"message":"1050","line":121,"column":56,"nodeType":"1051","messageId":"1052","endLine":121,"endColumn":61},{"ruleId":"1049","severity":1,"message":"1050","line":122,"column":55,"nodeType":"1051","messageId":"1052","endLine":122,"endColumn":60},{"ruleId":"1049","severity":1,"message":"1050","line":123,"column":70,"nodeType":"1051","messageId":"1052","endLine":123,"endColumn":75},{"ruleId":"1049","severity":1,"message":"1050","line":124,"column":69,"nodeType":"1051","messageId":"1052","endLine":124,"endColumn":74},{"ruleId":"1049","severity":1,"message":"1050","line":125,"column":65,"nodeType":"1051","messageId":"1052","endLine":125,"endColumn":70},{"ruleId":"1049","severity":1,"message":"1050","line":126,"column":64,"nodeType":"1051","messageId":"1052","endLine":126,"endColumn":69},{"ruleId":"1049","severity":1,"message":"1050","line":129,"column":41,"nodeType":"1051","messageId":"1052","endLine":129,"endColumn":46},{"ruleId":"1049","severity":1,"message":"1050","line":130,"column":49,"nodeType":"1051","messageId":"1052","endLine":130,"endColumn":54},{"ruleId":"1049","severity":1,"message":"1050","line":131,"column":59,"nodeType":"1051","messageId":"1052","endLine":131,"endColumn":64},{"ruleId":"1049","severity":1,"message":"1050","line":132,"column":72,"nodeType":"1051","messageId":"1052","endLine":132,"endColumn":77},{"ruleId":"1049","severity":1,"message":"1050","line":133,"column":50,"nodeType":"1051","messageId":"1052","endLine":133,"endColumn":55},{"ruleId":"1049","severity":1,"message":"1050","line":134,"column":60,"nodeType":"1051","messageId":"1052","endLine":134,"endColumn":65},{"ruleId":"1049","severity":1,"message":"1050","line":135,"column":49,"nodeType":"1051","messageId":"1052","endLine":135,"endColumn":54},{"ruleId":"1049","severity":1,"message":"1050","line":136,"column":56,"nodeType":"1051","messageId":"1052","endLine":136,"endColumn":61},{"ruleId":"1049","severity":1,"message":"1050","line":137,"column":55,"nodeType":"1051","messageId":"1052","endLine":137,"endColumn":60},{"ruleId":"1049","severity":1,"message":"1050","line":138,"column":64,"nodeType":"1051","messageId":"1052","endLine":138,"endColumn":69},{"ruleId":"1049","severity":1,"message":"1050","line":140,"column":40,"nodeType":"1051","messageId":"1052","endLine":140,"endColumn":45},{"ruleId":"1049","severity":1,"message":"1050","line":141,"column":38,"nodeType":"1051","messageId":"1052","endLine":141,"endColumn":43},{"ruleId":"1049","severity":1,"message":"1050","line":142,"column":47,"nodeType":"1051","messageId":"1052","endLine":142,"endColumn":52},{"ruleId":"1049","severity":1,"message":"1050","line":143,"column":46,"nodeType":"1051","messageId":"1052","endLine":143,"endColumn":51},{"ruleId":"1049","severity":1,"message":"1050","line":144,"column":57,"nodeType":"1051","messageId":"1052","endLine":144,"endColumn":62},{"ruleId":"1049","severity":1,"message":"1050","line":145,"column":48,"nodeType":"1051","messageId":"1052","endLine":145,"endColumn":53},{"ruleId":"1049","severity":1,"message":"1050","line":146,"column":49,"nodeType":"1051","messageId":"1052","endLine":146,"endColumn":54},{"ruleId":"1049","severity":1,"message":"1050","line":147,"column":48,"nodeType":"1051","messageId":"1052","endLine":147,"endColumn":53},{"ruleId":"1049","severity":1,"message":"1050","line":148,"column":49,"nodeType":"1051","messageId":"1052","endLine":148,"endColumn":54},{"ruleId":"1049","severity":1,"message":"1050","line":149,"column":58,"nodeType":"1051","messageId":"1052","endLine":149,"endColumn":63},{"ruleId":"1049","severity":1,"message":"1050","line":150,"column":56,"nodeType":"1051","messageId":"1052","endLine":150,"endColumn":61},{"ruleId":"1049","severity":1,"message":"1050","line":151,"column":66,"nodeType":"1051","messageId":"1052","endLine":151,"endColumn":71},{"ruleId":"1049","severity":1,"message":"1050","line":152,"column":55,"nodeType":"1051","messageId":"1052","endLine":152,"endColumn":60},{"ruleId":"1049","severity":1,"message":"1050","line":153,"column":68,"nodeType":"1051","messageId":"1052","endLine":153,"endColumn":73},{"ruleId":"1049","severity":1,"message":"1050","line":154,"column":69,"nodeType":"1051","messageId":"1052","endLine":154,"endColumn":74},{"ruleId":"1049","severity":1,"message":"1050","line":155,"column":59,"nodeType":"1051","messageId":"1052","endLine":155,"endColumn":64},{"ruleId":"1049","severity":1,"message":"1050","line":157,"column":39,"nodeType":"1051","messageId":"1052","endLine":157,"endColumn":44},{"ruleId":"1053","severity":1,"message":"1054","line":10,"column":20,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":24},{"ruleId":"1053","severity":1,"message":"1057","line":13,"column":7,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1058","line":171,"column":17,"nodeType":"1055","messageId":"1056","endLine":171,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1059","line":194,"column":15,"nodeType":"1055","messageId":"1056","endLine":194,"endColumn":22},{"ruleId":"1060","severity":1,"message":"1061","line":296,"column":12,"nodeType":"1062","endLine":296,"endColumn":144},{"ruleId":"1053","severity":1,"message":"1063","line":8,"column":18,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":149,"column":17,"nodeType":"1055","messageId":"1056","endLine":149,"endColumn":21},{"ruleId":"1060","severity":1,"message":"1061","line":178,"column":12,"nodeType":"1062","endLine":178,"endColumn":144},{"ruleId":"1060","severity":1,"message":"1065","line":219,"column":53,"nodeType":"1062","endLine":219,"endColumn":157},{"ruleId":"1066","severity":1,"message":"1067","line":219,"column":142,"nodeType":"1068","messageId":"1069","endLine":219,"endColumn":156},{"ruleId":"1053","severity":1,"message":"1070","line":2,"column":8,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":12},{"ruleId":"1053","severity":1,"message":"1071","line":8,"column":8,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":12},{"ruleId":"1060","severity":1,"message":"1065","line":8,"column":6,"nodeType":"1062","endLine":8,"endColumn":148},{"ruleId":"1060","severity":1,"message":"1065","line":12,"column":11,"nodeType":"1062","endLine":12,"endColumn":49},{"ruleId":"1060","severity":1,"message":"1065","line":13,"column":11,"nodeType":"1062","endLine":13,"endColumn":49},{"ruleId":"1060","severity":1,"message":"1065","line":14,"column":11,"nodeType":"1062","endLine":14,"endColumn":49},{"ruleId":"1053","severity":1,"message":"1072","line":8,"column":25,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":32},{"ruleId":"1073","severity":1,"message":"1074","line":294,"column":57,"nodeType":"1075","messageId":"1076","endLine":294,"endColumn":59},{"ruleId":"1073","severity":1,"message":"1074","line":295,"column":62,"nodeType":"1075","messageId":"1076","endLine":295,"endColumn":64},{"ruleId":"1053","severity":1,"message":"1077","line":393,"column":17,"nodeType":"1055","messageId":"1056","endLine":393,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1077","line":427,"column":17,"nodeType":"1055","messageId":"1056","endLine":427,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":427,"column":27,"nodeType":"1055","messageId":"1056","endLine":427,"endColumn":31},{"ruleId":"1041","severity":1,"message":"1042","line":451,"column":43,"nodeType":"1043","messageId":"1044","endLine":451,"endColumn":45},{"ruleId":"1041","severity":1,"message":"1042","line":454,"column":48,"nodeType":"1043","messageId":"1044","endLine":454,"endColumn":50},{"ruleId":"1041","severity":1,"message":"1042","line":457,"column":48,"nodeType":"1043","messageId":"1044","endLine":457,"endColumn":50},{"ruleId":"1053","severity":1,"message":"1078","line":489,"column":13,"nodeType":"1055","messageId":"1056","endLine":489,"endColumn":18},{"ruleId":"1041","severity":1,"message":"1079","line":509,"column":22,"nodeType":"1043","messageId":"1044","endLine":509,"endColumn":24},{"ruleId":"1053","severity":1,"message":"1078","line":535,"column":13,"nodeType":"1055","messageId":"1056","endLine":535,"endColumn":18},{"ruleId":"1060","severity":1,"message":"1061","line":562,"column":12,"nodeType":"1062","endLine":562,"endColumn":144},{"ruleId":"1080","severity":1,"message":"1081","line":771,"column":65,"nodeType":"1062","endLine":771,"endColumn":244},{"ruleId":"1060","severity":1,"message":"1065","line":99,"column":41,"nodeType":"1062","endLine":99,"endColumn":85},{"ruleId":"1060","severity":1,"message":"1065","line":143,"column":49,"nodeType":"1062","endLine":143,"endColumn":88},{"ruleId":"1060","severity":1,"message":"1065","line":144,"column":49,"nodeType":"1062","endLine":144,"endColumn":92},{"ruleId":"1060","severity":1,"message":"1065","line":148,"column":61,"nodeType":"1062","endLine":148,"endColumn":90},{"ruleId":"1060","severity":1,"message":"1065","line":154,"column":21,"nodeType":"1062","endLine":154,"endColumn":90},{"ruleId":"1053","severity":1,"message":"1072","line":5,"column":10,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":17},{"ruleId":"1060","severity":1,"message":"1065","line":87,"column":37,"nodeType":"1062","endLine":87,"endColumn":71},{"ruleId":"1073","severity":1,"message":"1074","line":82,"column":56,"nodeType":"1075","messageId":"1076","endLine":82,"endColumn":58},{"ruleId":"1073","severity":1,"message":"1074","line":83,"column":57,"nodeType":"1075","messageId":"1076","endLine":83,"endColumn":59},{"ruleId":"1053","severity":1,"message":"1082","line":106,"column":16,"nodeType":"1055","messageId":"1056","endLine":106,"endColumn":20},{"ruleId":"1053","severity":1,"message":"1083","line":5,"column":8,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":14},{"ruleId":"1060","severity":1,"message":"1061","line":150,"column":12,"nodeType":"1062","endLine":150,"endColumn":144},{"ruleId":"1060","severity":1,"message":"1065","line":222,"column":53,"nodeType":"1062","endLine":222,"endColumn":92},{"ruleId":"1060","severity":1,"message":"1065","line":223,"column":53,"nodeType":"1062","endLine":223,"endColumn":96},{"ruleId":"1060","severity":1,"message":"1065","line":227,"column":65,"nodeType":"1062","endLine":227,"endColumn":94},{"ruleId":"1060","severity":1,"message":"1065","line":233,"column":25,"nodeType":"1062","endLine":233,"endColumn":94},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":50,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":61},{"ruleId":"1053","severity":1,"message":"1085","line":10,"column":8,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1086","line":11,"column":22,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1087","line":13,"column":7,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1064","line":124,"column":17,"nodeType":"1055","messageId":"1056","endLine":124,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1077","line":180,"column":17,"nodeType":"1055","messageId":"1056","endLine":180,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":180,"column":27,"nodeType":"1055","messageId":"1056","endLine":180,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1072","line":5,"column":10,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":17},{"ruleId":"1060","severity":1,"message":"1065","line":63,"column":37,"nodeType":"1062","endLine":63,"endColumn":71},{"ruleId":"1053","severity":1,"message":"1083","line":3,"column":8,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1088","line":7,"column":10,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1090","line":29,"column":4,"nodeType":"1091","messageId":"1044","endLine":29,"endColumn":10},{"ruleId":"1053","severity":1,"message":"1092","line":48,"column":7,"nodeType":"1055","messageId":"1056","endLine":48,"endColumn":12},{"ruleId":"1093","severity":1,"message":"1094","line":48,"column":49,"nodeType":"1062","endLine":48,"endColumn":76},{"ruleId":"1053","severity":1,"message":"1086","line":10,"column":22,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":27},{"ruleId":"1095","severity":1,"message":"1096","line":143,"column":5,"nodeType":"1097","messageId":"1044","endLine":151,"endColumn":6},{"ruleId":"1098","severity":1,"message":"1099","line":415,"column":53,"nodeType":"1062","endLine":418,"endColumn":55},{"ruleId":"1098","severity":1,"message":"1099","line":442,"column":25,"nodeType":"1062","endLine":444,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1100","line":94,"column":27,"nodeType":"1055","messageId":"1056","endLine":94,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1086","line":11,"column":22,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1077","line":181,"column":17,"nodeType":"1055","messageId":"1056","endLine":181,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":181,"column":27,"nodeType":"1055","messageId":"1056","endLine":181,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1086","line":11,"column":22,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1077","line":189,"column":17,"nodeType":"1055","messageId":"1056","endLine":189,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":189,"column":27,"nodeType":"1055","messageId":"1056","endLine":189,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1101","line":2,"column":98,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":106},{"ruleId":"1073","severity":1,"message":"1074","line":81,"column":57,"nodeType":"1075","messageId":"1076","endLine":81,"endColumn":59},{"ruleId":"1073","severity":1,"message":"1074","line":82,"column":61,"nodeType":"1075","messageId":"1076","endLine":82,"endColumn":63},{"ruleId":"1053","severity":1,"message":"1102","line":259,"column":17,"nodeType":"1055","messageId":"1056","endLine":259,"endColumn":29},{"ruleId":"1098","severity":1,"message":"1099","line":399,"column":113,"nodeType":"1062","endLine":399,"endColumn":192},{"ruleId":"1103","severity":1,"message":"1104","line":447,"column":113,"nodeType":"1062","endLine":447,"endColumn":234},{"ruleId":"1098","severity":1,"message":"1099","line":493,"column":121,"nodeType":"1062","endLine":493,"endColumn":200},{"ruleId":"1053","severity":1,"message":"1087","line":12,"column":7,"nodeType":"1055","messageId":"1056","endLine":12,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1105","line":58,"column":13,"nodeType":"1091","messageId":"1044","endLine":58,"endColumn":17},{"ruleId":"1053","severity":1,"message":"1077","line":273,"column":17,"nodeType":"1055","messageId":"1056","endLine":273,"endColumn":25},{"ruleId":"1049","severity":1,"message":"1050","line":419,"column":69,"nodeType":"1051","messageId":"1052","endLine":419,"endColumn":77},{"ruleId":"1098","severity":1,"message":"1099","line":600,"column":73,"nodeType":"1062","endLine":604,"endColumn":75},{"ruleId":"1098","severity":1,"message":"1099","line":633,"column":29,"nodeType":"1062","endLine":635,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1077","line":197,"column":17,"nodeType":"1055","messageId":"1056","endLine":197,"endColumn":25},{"ruleId":"1049","severity":1,"message":"1050","line":266,"column":53,"nodeType":"1051","messageId":"1052","endLine":266,"endColumn":77},{"ruleId":"1053","severity":1,"message":"1106","line":8,"column":10,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":15},{"ruleId":"1053","severity":1,"message":"1107","line":8,"column":17,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":26},{"ruleId":"1053","severity":1,"message":"1108","line":8,"column":28,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":39},{"ruleId":"1053","severity":1,"message":"1084","line":8,"column":41,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1086","line":11,"column":22,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1085","line":10,"column":8,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1086","line":11,"column":22,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1087","line":13,"column":7,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1108","line":2,"column":28,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":39},{"ruleId":"1053","severity":1,"message":"1084","line":2,"column":41,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1109","line":2,"column":63,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":69},{"ruleId":"1053","severity":1,"message":"1110","line":2,"column":71,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":75},{"ruleId":"1053","severity":1,"message":"1111","line":2,"column":77,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":85},{"ruleId":"1053","severity":1,"message":"1112","line":2,"column":87,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":96},{"ruleId":"1053","severity":1,"message":"1101","line":2,"column":98,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":106},{"ruleId":"1073","severity":1,"message":"1074","line":72,"column":57,"nodeType":"1075","messageId":"1076","endLine":72,"endColumn":59},{"ruleId":"1073","severity":1,"message":"1074","line":73,"column":61,"nodeType":"1075","messageId":"1076","endLine":73,"endColumn":63},{"ruleId":"1053","severity":1,"message":"1102","line":250,"column":17,"nodeType":"1055","messageId":"1056","endLine":250,"endColumn":29},{"ruleId":"1098","severity":1,"message":"1099","line":381,"column":113,"nodeType":"1062","endLine":381,"endColumn":192},{"ruleId":"1103","severity":1,"message":"1104","line":429,"column":113,"nodeType":"1062","endLine":429,"endColumn":234},{"ruleId":"1098","severity":1,"message":"1099","line":476,"column":125,"nodeType":"1062","endLine":476,"endColumn":204},{"ruleId":"1053","severity":1,"message":"1085","line":9,"column":8,"nodeType":"1055","messageId":"1056","endLine":9,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1087","line":13,"column":7,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1108","line":2,"column":28,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":39},{"ruleId":"1053","severity":1,"message":"1084","line":2,"column":41,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1109","line":2,"column":63,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":69},{"ruleId":"1053","severity":1,"message":"1110","line":2,"column":71,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":75},{"ruleId":"1053","severity":1,"message":"1111","line":2,"column":77,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":85},{"ruleId":"1053","severity":1,"message":"1112","line":2,"column":87,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":96},{"ruleId":"1053","severity":1,"message":"1101","line":2,"column":98,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":106},{"ruleId":"1053","severity":1,"message":"1113","line":18,"column":7,"nodeType":"1055","messageId":"1056","endLine":18,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1114","line":22,"column":7,"nodeType":"1055","messageId":"1056","endLine":22,"endColumn":23},{"ruleId":"1073","severity":1,"message":"1074","line":88,"column":57,"nodeType":"1075","messageId":"1076","endLine":88,"endColumn":59},{"ruleId":"1073","severity":1,"message":"1074","line":89,"column":61,"nodeType":"1075","messageId":"1076","endLine":89,"endColumn":63},{"ruleId":"1098","severity":1,"message":"1099","line":422,"column":113,"nodeType":"1062","endLine":422,"endColumn":192},{"ruleId":"1103","severity":1,"message":"1104","line":475,"column":121,"nodeType":"1062","endLine":475,"endColumn":243},{"ruleId":"1053","severity":1,"message":"1108","line":2,"column":28,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":39},{"ruleId":"1053","severity":1,"message":"1084","line":2,"column":41,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1109","line":2,"column":63,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":69},{"ruleId":"1053","severity":1,"message":"1110","line":2,"column":71,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":75},{"ruleId":"1053","severity":1,"message":"1111","line":2,"column":77,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":85},{"ruleId":"1053","severity":1,"message":"1112","line":2,"column":87,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":96},{"ruleId":"1053","severity":1,"message":"1101","line":2,"column":98,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":106},{"ruleId":"1073","severity":1,"message":"1074","line":72,"column":57,"nodeType":"1075","messageId":"1076","endLine":72,"endColumn":59},{"ruleId":"1073","severity":1,"message":"1074","line":73,"column":61,"nodeType":"1075","messageId":"1076","endLine":73,"endColumn":63},{"ruleId":"1053","severity":1,"message":"1102","line":250,"column":17,"nodeType":"1055","messageId":"1056","endLine":250,"endColumn":29},{"ruleId":"1098","severity":1,"message":"1099","line":383,"column":113,"nodeType":"1062","endLine":383,"endColumn":192},{"ruleId":"1103","severity":1,"message":"1104","line":431,"column":113,"nodeType":"1062","endLine":431,"endColumn":234},{"ruleId":"1098","severity":1,"message":"1099","line":478,"column":125,"nodeType":"1062","endLine":478,"endColumn":204},{"ruleId":"1053","severity":1,"message":"1077","line":230,"column":17,"nodeType":"1055","messageId":"1056","endLine":230,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1108","line":2,"column":28,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":39},{"ruleId":"1053","severity":1,"message":"1084","line":2,"column":41,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1101","line":2,"column":98,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":106},{"ruleId":"1053","severity":1,"message":"1113","line":18,"column":7,"nodeType":"1055","messageId":"1056","endLine":18,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1114","line":22,"column":7,"nodeType":"1055","messageId":"1056","endLine":22,"endColumn":23},{"ruleId":"1073","severity":1,"message":"1074","line":90,"column":57,"nodeType":"1075","messageId":"1076","endLine":90,"endColumn":59},{"ruleId":"1073","severity":1,"message":"1074","line":91,"column":61,"nodeType":"1075","messageId":"1076","endLine":91,"endColumn":63},{"ruleId":"1098","severity":1,"message":"1099","line":410,"column":113,"nodeType":"1062","endLine":410,"endColumn":192},{"ruleId":"1103","severity":1,"message":"1104","line":458,"column":113,"nodeType":"1062","endLine":458,"endColumn":234},{"ruleId":"1053","severity":1,"message":"1108","line":2,"column":28,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":39},{"ruleId":"1053","severity":1,"message":"1084","line":2,"column":41,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1101","line":2,"column":98,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":106},{"ruleId":"1053","severity":1,"message":"1113","line":18,"column":7,"nodeType":"1055","messageId":"1056","endLine":18,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1114","line":22,"column":7,"nodeType":"1055","messageId":"1056","endLine":22,"endColumn":23},{"ruleId":"1073","severity":1,"message":"1074","line":94,"column":57,"nodeType":"1075","messageId":"1076","endLine":94,"endColumn":59},{"ruleId":"1073","severity":1,"message":"1074","line":95,"column":61,"nodeType":"1075","messageId":"1076","endLine":95,"endColumn":63},{"ruleId":"1098","severity":1,"message":"1099","line":420,"column":121,"nodeType":"1062","endLine":420,"endColumn":200},{"ruleId":"1041","severity":1,"message":"1042","line":461,"column":119,"nodeType":"1043","messageId":"1044","endLine":461,"endColumn":121},{"ruleId":"1103","severity":1,"message":"1104","line":478,"column":145,"nodeType":"1062","endLine":478,"endColumn":266},{"ruleId":"1053","severity":1,"message":"1085","line":9,"column":8,"nodeType":"1055","messageId":"1056","endLine":9,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1087","line":12,"column":7,"nodeType":"1055","messageId":"1056","endLine":12,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1085","line":10,"column":8,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1086","line":11,"column":22,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1087","line":13,"column":7,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":50,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":61},{"ruleId":"1053","severity":1,"message":"1077","line":154,"column":17,"nodeType":"1055","messageId":"1056","endLine":154,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":154,"column":27,"nodeType":"1055","messageId":"1056","endLine":154,"endColumn":31},{"ruleId":"1095","severity":1,"message":"1115","line":206,"column":5,"nodeType":"1097","messageId":"1044","endLine":210,"endColumn":6},{"ruleId":"1053","severity":1,"message":"1077","line":59,"column":17,"nodeType":"1055","messageId":"1056","endLine":59,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":59,"column":27,"nodeType":"1055","messageId":"1056","endLine":59,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1065","line":121,"column":49,"nodeType":"1062","endLine":121,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":121,"column":57,"nodeType":"1068","messageId":"1069","endLine":121,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1088","line":3,"column":16,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":24},{"ruleId":"1053","severity":1,"message":"1077","line":149,"column":17,"nodeType":"1055","messageId":"1056","endLine":149,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":149,"column":27,"nodeType":"1055","messageId":"1056","endLine":149,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1116","line":7,"column":18,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1085","line":8,"column":8,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1087","line":15,"column":7,"nodeType":"1055","messageId":"1056","endLine":15,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1077","line":127,"column":17,"nodeType":"1055","messageId":"1056","endLine":127,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":127,"column":27,"nodeType":"1055","messageId":"1056","endLine":127,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1110","line":6,"column":63,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":67},{"ruleId":"1053","severity":1,"message":"1112","line":6,"column":77,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":86},{"ruleId":"1053","severity":1,"message":"1101","line":6,"column":88,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":96},{"ruleId":"1053","severity":1,"message":"1117","line":6,"column":98,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":101},{"ruleId":"1053","severity":1,"message":"1118","line":6,"column":103,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":106},{"ruleId":"1053","severity":1,"message":"1119","line":6,"column":108,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":113},{"ruleId":"1053","severity":1,"message":"1120","line":13,"column":8,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1064","line":101,"column":17,"nodeType":"1055","messageId":"1056","endLine":101,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1064","line":129,"column":17,"nodeType":"1055","messageId":"1056","endLine":129,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1121","line":202,"column":15,"nodeType":"1055","messageId":"1056","endLine":202,"endColumn":26},{"ruleId":"1053","severity":1,"message":"1077","line":155,"column":17,"nodeType":"1055","messageId":"1056","endLine":155,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":155,"column":27,"nodeType":"1055","messageId":"1056","endLine":155,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1086","line":11,"column":22,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1077","line":191,"column":17,"nodeType":"1055","messageId":"1056","endLine":191,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":191,"column":27,"nodeType":"1055","messageId":"1056","endLine":191,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1065","line":136,"column":49,"nodeType":"1062","endLine":136,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":136,"column":57,"nodeType":"1068","messageId":"1069","endLine":136,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":50,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":61},{"ruleId":"1089","severity":1,"message":"1090","line":152,"column":21,"nodeType":"1091","messageId":"1044","endLine":152,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1077","line":159,"column":17,"nodeType":"1055","messageId":"1056","endLine":159,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":159,"column":27,"nodeType":"1055","messageId":"1056","endLine":159,"endColumn":31},{"ruleId":"1089","severity":1,"message":"1090","line":55,"column":13,"nodeType":"1091","messageId":"1044","endLine":55,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1077","line":239,"column":17,"nodeType":"1055","messageId":"1056","endLine":239,"endColumn":25},{"ruleId":"1060","severity":1,"message":"1065","line":340,"column":49,"nodeType":"1062","endLine":340,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":340,"column":57,"nodeType":"1068","messageId":"1069","endLine":340,"endColumn":78},{"ruleId":"1060","severity":1,"message":"1065","line":234,"column":49,"nodeType":"1062","endLine":234,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":234,"column":57,"nodeType":"1068","messageId":"1069","endLine":234,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":49,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":60},{"ruleId":"1053","severity":1,"message":"1086","line":13,"column":22,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1065","line":233,"column":49,"nodeType":"1062","endLine":233,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":233,"column":57,"nodeType":"1068","messageId":"1069","endLine":233,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":64,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":75},{"ruleId":"1053","severity":1,"message":"1122","line":13,"column":8,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":18},{"ruleId":"1089","severity":1,"message":"1090","line":149,"column":21,"nodeType":"1091","messageId":"1044","endLine":149,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1077","line":156,"column":17,"nodeType":"1055","messageId":"1056","endLine":156,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":156,"column":27,"nodeType":"1055","messageId":"1056","endLine":156,"endColumn":31},{"ruleId":"1095","severity":1,"message":"1115","line":268,"column":5,"nodeType":"1097","messageId":"1044","endLine":272,"endColumn":6},{"ruleId":"1060","severity":1,"message":"1065","line":310,"column":49,"nodeType":"1062","endLine":310,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":310,"column":57,"nodeType":"1068","messageId":"1069","endLine":310,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1122","line":13,"column":8,"nodeType":"1055","messageId":"1056","endLine":13,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1077","line":154,"column":17,"nodeType":"1055","messageId":"1056","endLine":154,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":154,"column":27,"nodeType":"1055","messageId":"1056","endLine":154,"endColumn":31},{"ruleId":"1060","severity":1,"message":"1065","line":237,"column":49,"nodeType":"1062","endLine":237,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":237,"column":57,"nodeType":"1068","messageId":"1069","endLine":237,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1070","line":3,"column":8,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":12},{"ruleId":"1060","severity":1,"message":"1065","line":38,"column":49,"nodeType":"1062","endLine":38,"endColumn":110},{"ruleId":"1066","severity":1,"message":"1067","line":38,"column":57,"nodeType":"1068","messageId":"1069","endLine":38,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1106","line":7,"column":34,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":39},{"ruleId":"1053","severity":1,"message":"1107","line":7,"column":41,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":50},{"ruleId":"1053","severity":1,"message":"1084","line":7,"column":52,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":63},{"ruleId":"1053","severity":1,"message":"1108","line":7,"column":65,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":76},{"ruleId":"1053","severity":1,"message":"1085","line":8,"column":8,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1087","line":12,"column":7,"nodeType":"1055","messageId":"1056","endLine":12,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1123","line":42,"column":13,"nodeType":"1091","messageId":"1044","endLine":42,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1077","line":164,"column":17,"nodeType":"1055","messageId":"1056","endLine":164,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":164,"column":27,"nodeType":"1055","messageId":"1056","endLine":164,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":50,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":61},{"ruleId":"1053","severity":1,"message":"1077","line":156,"column":17,"nodeType":"1055","messageId":"1056","endLine":156,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":156,"column":27,"nodeType":"1055","messageId":"1056","endLine":156,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":50,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":61},{"ruleId":"1053","severity":1,"message":"1077","line":156,"column":17,"nodeType":"1055","messageId":"1056","endLine":156,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":156,"column":27,"nodeType":"1055","messageId":"1056","endLine":156,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1087","line":11,"column":7,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1123","line":42,"column":13,"nodeType":"1091","messageId":"1044","endLine":42,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1077","line":164,"column":17,"nodeType":"1055","messageId":"1056","endLine":164,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":164,"column":27,"nodeType":"1055","messageId":"1056","endLine":164,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1087","line":11,"column":7,"nodeType":"1055","messageId":"1056","endLine":11,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1123","line":42,"column":13,"nodeType":"1091","messageId":"1044","endLine":42,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1077","line":146,"column":17,"nodeType":"1055","messageId":"1056","endLine":146,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":146,"column":27,"nodeType":"1055","messageId":"1056","endLine":146,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":50,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":61},{"ruleId":"1053","severity":1,"message":"1077","line":157,"column":17,"nodeType":"1055","messageId":"1056","endLine":157,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":157,"column":27,"nodeType":"1055","messageId":"1056","endLine":157,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1084","line":6,"column":50,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":61},{"ruleId":"1053","severity":1,"message":"1077","line":157,"column":17,"nodeType":"1055","messageId":"1056","endLine":157,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":157,"column":27,"nodeType":"1055","messageId":"1056","endLine":157,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1085","line":8,"column":8,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1087","line":12,"column":7,"nodeType":"1055","messageId":"1056","endLine":12,"endColumn":19},{"ruleId":"1089","severity":1,"message":"1123","line":43,"column":13,"nodeType":"1091","messageId":"1044","endLine":43,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1077","line":145,"column":17,"nodeType":"1055","messageId":"1056","endLine":145,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":145,"column":27,"nodeType":"1055","messageId":"1056","endLine":145,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1124","line":6,"column":8,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":15},{"ruleId":"1053","severity":1,"message":"1063","line":7,"column":18,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1100","line":45,"column":27,"nodeType":"1055","messageId":"1056","endLine":45,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1125","line":99,"column":17,"nodeType":"1055","messageId":"1056","endLine":99,"endColumn":28},{"ruleId":"1053","severity":1,"message":"1126","line":99,"column":30,"nodeType":"1055","messageId":"1056","endLine":99,"endColumn":42},{"ruleId":"1053","severity":1,"message":"1064","line":100,"column":17,"nodeType":"1055","messageId":"1056","endLine":100,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1127","line":100,"column":23,"nodeType":"1055","messageId":"1056","endLine":100,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1065","line":135,"column":33,"nodeType":"1062","endLine":135,"endColumn":131},{"ruleId":"1053","severity":1,"message":"1128","line":5,"column":10,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":17},{"ruleId":"1053","severity":1,"message":"1100","line":49,"column":27,"nodeType":"1055","messageId":"1056","endLine":49,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1064","line":78,"column":17,"nodeType":"1055","messageId":"1056","endLine":78,"endColumn":21},{"ruleId":"1060","severity":1,"message":"1065","line":93,"column":29,"nodeType":"1062","endLine":93,"endColumn":62},{"ruleId":"1053","severity":1,"message":"1124","line":6,"column":8,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":15},{"ruleId":"1053","severity":1,"message":"1063","line":7,"column":18,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1100","line":40,"column":27,"nodeType":"1055","messageId":"1056","endLine":40,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1125","line":94,"column":17,"nodeType":"1055","messageId":"1056","endLine":94,"endColumn":28},{"ruleId":"1053","severity":1,"message":"1126","line":94,"column":30,"nodeType":"1055","messageId":"1056","endLine":94,"endColumn":42},{"ruleId":"1053","severity":1,"message":"1064","line":96,"column":17,"nodeType":"1055","messageId":"1056","endLine":96,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1127","line":96,"column":23,"nodeType":"1055","messageId":"1056","endLine":96,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1065","line":126,"column":33,"nodeType":"1062","endLine":126,"endColumn":131},{"ruleId":"1053","severity":1,"message":"1128","line":5,"column":10,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":17},{"ruleId":"1053","severity":1,"message":"1110","line":5,"column":29,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":33},{"ruleId":"1053","severity":1,"message":"1111","line":5,"column":35,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":43},{"ruleId":"1053","severity":1,"message":"1109","line":5,"column":45,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":51},{"ruleId":"1053","severity":1,"message":"1064","line":114,"column":17,"nodeType":"1055","messageId":"1056","endLine":114,"endColumn":21},{"ruleId":"1060","severity":1,"message":"1065","line":128,"column":29,"nodeType":"1062","endLine":128,"endColumn":62},{"ruleId":"1053","severity":1,"message":"1129","line":4,"column":8,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":16},{"ruleId":"1053","severity":1,"message":"1130","line":5,"column":8,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":13},{"ruleId":"1053","severity":1,"message":"1109","line":6,"column":9,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":15},{"ruleId":"1053","severity":1,"message":"1131","line":76,"column":10,"nodeType":"1055","messageId":"1056","endLine":76,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1072","line":6,"column":17,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":24},{"ruleId":"1053","severity":1,"message":"1107","line":6,"column":26,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":35},{"ruleId":"1053","severity":1,"message":"1108","line":6,"column":37,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":48},{"ruleId":"1053","severity":1,"message":"1100","line":80,"column":27,"nodeType":"1055","messageId":"1056","endLine":80,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1064","line":160,"column":17,"nodeType":"1055","messageId":"1056","endLine":160,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1132","line":160,"column":29,"nodeType":"1055","messageId":"1056","endLine":160,"endColumn":38},{"ruleId":"1060","severity":1,"message":"1065","line":67,"column":16,"nodeType":"1062","endLine":67,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1065","line":68,"column":16,"nodeType":"1062","endLine":68,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1065","line":69,"column":16,"nodeType":"1062","endLine":69,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1065","line":70,"column":16,"nodeType":"1062","endLine":70,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1065","line":88,"column":15,"nodeType":"1062","endLine":88,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1065","line":89,"column":15,"nodeType":"1062","endLine":89,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1065","line":90,"column":15,"nodeType":"1062","endLine":90,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1065","line":91,"column":15,"nodeType":"1062","endLine":91,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1063","line":8,"column":18,"nodeType":"1055","messageId":"1056","endLine":8,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1100","line":45,"column":27,"nodeType":"1055","messageId":"1056","endLine":45,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1126","line":141,"column":30,"nodeType":"1055","messageId":"1056","endLine":141,"endColumn":42},{"ruleId":"1053","severity":1,"message":"1064","line":142,"column":17,"nodeType":"1055","messageId":"1056","endLine":142,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1127","line":142,"column":23,"nodeType":"1055","messageId":"1056","endLine":142,"endColumn":27},{"ruleId":"1060","severity":1,"message":"1061","line":183,"column":33,"nodeType":"1062","endLine":183,"endColumn":58},{"ruleId":"1060","severity":1,"message":"1065","line":189,"column":33,"nodeType":"1062","endLine":189,"endColumn":106},{"ruleId":"1053","severity":1,"message":"1128","line":5,"column":10,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":17},{"ruleId":"1053","severity":1,"message":"1063","line":6,"column":18,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1100","line":54,"column":27,"nodeType":"1055","messageId":"1056","endLine":54,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1064","line":115,"column":17,"nodeType":"1055","messageId":"1056","endLine":115,"endColumn":21},{"ruleId":"1053","severity":1,"message":"1132","line":115,"column":29,"nodeType":"1055","messageId":"1056","endLine":115,"endColumn":38},{"ruleId":"1060","severity":1,"message":"1065","line":127,"column":29,"nodeType":"1062","endLine":127,"endColumn":62},{"ruleId":"1053","severity":1,"message":"1077","line":173,"column":17,"nodeType":"1055","messageId":"1056","endLine":173,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":173,"column":27,"nodeType":"1055","messageId":"1056","endLine":173,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1077","line":217,"column":17,"nodeType":"1055","messageId":"1056","endLine":217,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":217,"column":27,"nodeType":"1055","messageId":"1056","endLine":217,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1133","line":6,"column":8,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":11},{"ruleId":"1053","severity":1,"message":"1077","line":199,"column":17,"nodeType":"1055","messageId":"1056","endLine":199,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":199,"column":27,"nodeType":"1055","messageId":"1056","endLine":199,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1077","line":239,"column":17,"nodeType":"1055","messageId":"1056","endLine":239,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":239,"column":27,"nodeType":"1055","messageId":"1056","endLine":239,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1117","line":2,"column":10,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":13},{"ruleId":"1053","severity":1,"message":"1118","line":2,"column":15,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1134","line":2,"column":29,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":38},{"ruleId":"1053","severity":1,"message":"1135","line":2,"column":40,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":45},{"ruleId":"1053","severity":1,"message":"1116","line":2,"column":47,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1106","line":2,"column":62,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":67},{"ruleId":"1053","severity":1,"message":"1107","line":2,"column":69,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1108","line":2,"column":80,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":91},{"ruleId":"1053","severity":1,"message":"1136","line":2,"column":93,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":98},{"ruleId":"1053","severity":1,"message":"1084","line":2,"column":100,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":111},{"ruleId":"1053","severity":1,"message":"1088","line":5,"column":10,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1054","line":5,"column":20,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":24},{"ruleId":"1053","severity":1,"message":"1117","line":2,"column":10,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":13},{"ruleId":"1053","severity":1,"message":"1118","line":2,"column":15,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1134","line":2,"column":29,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":38},{"ruleId":"1053","severity":1,"message":"1135","line":2,"column":40,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":45},{"ruleId":"1053","severity":1,"message":"1116","line":2,"column":47,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":52},{"ruleId":"1053","severity":1,"message":"1106","line":2,"column":62,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":67},{"ruleId":"1053","severity":1,"message":"1107","line":2,"column":69,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":78},{"ruleId":"1053","severity":1,"message":"1108","line":2,"column":80,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":91},{"ruleId":"1053","severity":1,"message":"1136","line":2,"column":93,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":98},{"ruleId":"1053","severity":1,"message":"1084","line":2,"column":100,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":111},{"ruleId":"1053","severity":1,"message":"1088","line":5,"column":10,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":18},{"ruleId":"1053","severity":1,"message":"1054","line":5,"column":20,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":24},{"ruleId":"1098","severity":1,"message":"1099","line":209,"column":53,"nodeType":"1062","endLine":209,"endColumn":99},{"ruleId":"1053","severity":1,"message":"1077","line":110,"column":17,"nodeType":"1055","messageId":"1056","endLine":110,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":110,"column":27,"nodeType":"1055","messageId":"1056","endLine":110,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1077","line":151,"column":17,"nodeType":"1055","messageId":"1056","endLine":151,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":151,"column":27,"nodeType":"1055","messageId":"1056","endLine":151,"endColumn":31},{"ruleId":"1053","severity":1,"message":"1129","line":4,"column":8,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":16},{"ruleId":"1053","severity":1,"message":"1109","line":6,"column":10,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":73,"column":38,"nodeType":"1043","messageId":"1044","endLine":73,"endColumn":40},{"ruleId":"1041","severity":1,"message":"1042","line":76,"column":43,"nodeType":"1043","messageId":"1044","endLine":76,"endColumn":45},{"ruleId":"1041","severity":1,"message":"1042","line":79,"column":43,"nodeType":"1043","messageId":"1044","endLine":79,"endColumn":45},{"ruleId":"1041","severity":1,"message":"1042","line":82,"column":43,"nodeType":"1043","messageId":"1044","endLine":82,"endColumn":45},{"ruleId":"1053","severity":1,"message":"1131","line":114,"column":17,"nodeType":"1055","messageId":"1056","endLine":114,"endColumn":26},{"ruleId":"1060","severity":1,"message":"1061","line":138,"column":12,"nodeType":"1062","endLine":138,"endColumn":144},{"ruleId":"1053","severity":1,"message":"1137","line":2,"column":8,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1054","line":3,"column":10,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1072","line":5,"column":17,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":24},{"ruleId":"1053","severity":1,"message":"1108","line":5,"column":37,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":48},{"ruleId":"1053","severity":1,"message":"1084","line":5,"column":50,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":61},{"ruleId":"1053","severity":1,"message":"1109","line":5,"column":63,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":69},{"ruleId":"1053","severity":1,"message":"1116","line":5,"column":71,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":76},{"ruleId":"1053","severity":1,"message":"1138","line":7,"column":10,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":19},{"ruleId":"1073","severity":1,"message":"1074","line":70,"column":81,"nodeType":"1075","messageId":"1076","endLine":70,"endColumn":83},{"ruleId":"1073","severity":1,"message":"1074","line":71,"column":54,"nodeType":"1075","messageId":"1076","endLine":71,"endColumn":56},{"ruleId":"1060","severity":1,"message":"1065","line":65,"column":16,"nodeType":"1062","endLine":65,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1065","line":66,"column":16,"nodeType":"1062","endLine":66,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1065","line":67,"column":16,"nodeType":"1062","endLine":67,"endColumn":28},{"ruleId":"1060","severity":1,"message":"1065","line":68,"column":16,"nodeType":"1062","endLine":68,"endColumn":28},{"ruleId":"1053","severity":1,"message":"1139","line":3,"column":8,"nodeType":"1055","messageId":"1056","endLine":3,"endColumn":17},{"ruleId":"1053","severity":1,"message":"1140","line":4,"column":8,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":19},{"ruleId":"1053","severity":1,"message":"1141","line":9,"column":8,"nodeType":"1055","messageId":"1056","endLine":9,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1116","line":10,"column":54,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":59},{"ruleId":"1053","severity":1,"message":"1110","line":10,"column":78,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":82},{"ruleId":"1053","severity":1,"message":"1111","line":10,"column":84,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":92},{"ruleId":"1053","severity":1,"message":"1112","line":10,"column":94,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":103},{"ruleId":"1053","severity":1,"message":"1101","line":10,"column":105,"nodeType":"1055","messageId":"1056","endLine":10,"endColumn":113},{"ruleId":"1053","severity":1,"message":"1086","line":17,"column":22,"nodeType":"1055","messageId":"1056","endLine":17,"endColumn":27},{"ruleId":"1053","severity":1,"message":"1142","line":18,"column":10,"nodeType":"1055","messageId":"1056","endLine":18,"endColumn":29},{"ruleId":"1053","severity":1,"message":"1143","line":18,"column":31,"nodeType":"1055","messageId":"1056","endLine":18,"endColumn":49},{"ruleId":"1053","severity":1,"message":"1144","line":18,"column":51,"nodeType":"1055","messageId":"1056","endLine":18,"endColumn":70},{"ruleId":"1053","severity":1,"message":"1145","line":19,"column":10,"nodeType":"1055","messageId":"1056","endLine":19,"endColumn":22},{"ruleId":"1053","severity":1,"message":"1146","line":19,"column":24,"nodeType":"1055","messageId":"1056","endLine":19,"endColumn":35},{"ruleId":"1053","severity":1,"message":"1147","line":19,"column":37,"nodeType":"1055","messageId":"1056","endLine":19,"endColumn":49},{"ruleId":"1073","severity":1,"message":"1074","line":115,"column":61,"nodeType":"1075","messageId":"1076","endLine":115,"endColumn":63},{"ruleId":"1073","severity":1,"message":"1074","line":116,"column":65,"nodeType":"1075","messageId":"1076","endLine":116,"endColumn":67},{"ruleId":"1148","severity":1,"message":"1149","line":160,"column":22,"nodeType":"1150","messageId":"1151","endLine":160,"endColumn":24},{"ruleId":"1148","severity":1,"message":"1149","line":160,"column":36,"nodeType":"1150","messageId":"1151","endLine":160,"endColumn":38},{"ruleId":"1148","severity":1,"message":"1149","line":168,"column":22,"nodeType":"1150","messageId":"1151","endLine":168,"endColumn":24},{"ruleId":"1148","severity":1,"message":"1149","line":168,"column":36,"nodeType":"1150","messageId":"1151","endLine":168,"endColumn":38},{"ruleId":"1053","severity":1,"message":"1077","line":307,"column":17,"nodeType":"1055","messageId":"1056","endLine":307,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1077","line":335,"column":17,"nodeType":"1055","messageId":"1056","endLine":335,"endColumn":25},{"ruleId":"1053","severity":1,"message":"1064","line":335,"column":27,"nodeType":"1055","messageId":"1056","endLine":335,"endColumn":31},{"ruleId":"1103","severity":1,"message":"1104","line":598,"column":121,"nodeType":"1062","endLine":598,"endColumn":243},{"ruleId":"1066","severity":1,"message":"1067","line":622,"column":61,"nodeType":"1068","messageId":"1069","endLine":622,"endColumn":82},{"ruleId":"1066","severity":1,"message":"1067","line":626,"column":127,"nodeType":"1068","messageId":"1069","endLine":626,"endColumn":148},{"ruleId":"1066","severity":1,"message":"1067","line":628,"column":126,"nodeType":"1068","messageId":"1069","endLine":628,"endColumn":147},{"ruleId":"1148","severity":1,"message":"1152","line":633,"column":59,"nodeType":"1150","messageId":"1151","endLine":633,"endColumn":61},{"ruleId":"1148","severity":1,"message":"1152","line":633,"column":88,"nodeType":"1150","messageId":"1151","endLine":633,"endColumn":90},{"ruleId":"1053","severity":1,"message":"1070","line":6,"column":8,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":12},{"ruleId":"1053","severity":1,"message":"1054","line":7,"column":10,"nodeType":"1055","messageId":"1056","endLine":7,"endColumn":14},{"ruleId":"1053","severity":1,"message":"1129","line":4,"column":8,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":16},{"ruleId":"1053","severity":1,"message":"1109","line":6,"column":10,"nodeType":"1055","messageId":"1056","endLine":6,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":73,"column":38,"nodeType":"1043","messageId":"1044","endLine":73,"endColumn":40},{"ruleId":"1041","severity":1,"message":"1042","line":76,"column":43,"nodeType":"1043","messageId":"1044","endLine":76,"endColumn":45},{"ruleId":"1041","severity":1,"message":"1042","line":79,"column":43,"nodeType":"1043","messageId":"1044","endLine":79,"endColumn":45},{"ruleId":"1041","severity":1,"message":"1042","line":82,"column":43,"nodeType":"1043","messageId":"1044","endLine":82,"endColumn":45},{"ruleId":"1053","severity":1,"message":"1131","line":113,"column":17,"nodeType":"1055","messageId":"1056","endLine":113,"endColumn":26},{"ruleId":"1060","severity":1,"message":"1061","line":137,"column":12,"nodeType":"1062","endLine":137,"endColumn":144},{"ruleId":"1060","severity":1,"message":"1065","line":305,"column":45,"nodeType":"1062","endLine":305,"endColumn":94},{"ruleId":"1066","severity":1,"message":"1067","line":481,"column":53,"nodeType":"1068","messageId":"1069","endLine":481,"endColumn":74},{"ruleId":"1066","severity":1,"message":"1067","line":482,"column":53,"nodeType":"1068","messageId":"1069","endLine":482,"endColumn":74},{"ruleId":"1053","severity":1,"message":"1070","line":2,"column":8,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":12},{"ruleId":"1053","severity":1,"message":"1077","line":64,"column":11,"nodeType":"1055","messageId":"1056","endLine":64,"endColumn":19},{"ruleId":"1060","severity":1,"message":"1065","line":126,"column":33,"nodeType":"1062","endLine":126,"endColumn":45},{"ruleId":"1053","severity":1,"message":"1153","line":4,"column":8,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":12},{"ruleId":"1041","severity":1,"message":"1042","line":67,"column":29,"nodeType":"1043","messageId":"1044","endLine":67,"endColumn":31},{"ruleId":"1041","severity":1,"message":"1042","line":70,"column":34,"nodeType":"1043","messageId":"1044","endLine":70,"endColumn":36},{"ruleId":"1041","severity":1,"message":"1042","line":73,"column":34,"nodeType":"1043","messageId":"1044","endLine":73,"endColumn":36},{"ruleId":"1041","severity":1,"message":"1042","line":76,"column":34,"nodeType":"1043","messageId":"1044","endLine":76,"endColumn":36},{"ruleId":"1053","severity":1,"message":"1131","line":127,"column":11,"nodeType":"1055","messageId":"1056","endLine":127,"endColumn":20},{"ruleId":"1060","severity":1,"message":"1061","line":151,"column":12,"nodeType":"1062","endLine":151,"endColumn":144},{"ruleId":"1053","severity":1,"message":"1070","line":2,"column":8,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":12},{"ruleId":"1041","severity":1,"message":"1079","line":42,"column":21,"nodeType":"1043","messageId":"1044","endLine":42,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1154","line":1,"column":15,"nodeType":"1055","messageId":"1056","endLine":1,"endColumn":24},{"ruleId":"1053","severity":1,"message":"1155","line":2,"column":8,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":16},{"ruleId":"1053","severity":1,"message":"1156","line":4,"column":10,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1054","line":4,"column":25,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":29},{"ruleId":"1053","severity":1,"message":"1157","line":4,"column":31,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":36},{"ruleId":"1053","severity":1,"message":"1158","line":5,"column":7,"nodeType":"1055","messageId":"1056","endLine":5,"endColumn":16},{"ruleId":"1053","severity":1,"message":"1155","line":2,"column":8,"nodeType":"1055","messageId":"1056","endLine":2,"endColumn":16},{"ruleId":"1053","severity":1,"message":"1156","line":4,"column":10,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":23},{"ruleId":"1053","severity":1,"message":"1054","line":4,"column":25,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":29},{"ruleId":"1053","severity":1,"message":"1157","line":4,"column":31,"nodeType":"1055","messageId":"1056","endLine":4,"endColumn":36},{"ruleId":"1060","severity":1,"message":"1065","line":15,"column":33,"nodeType":"1062","endLine":15,"endColumn":45},{"ruleId":"1060","severity":1,"message":"1065","line":11,"column":33,"nodeType":"1062","endLine":11,"endColumn":45},{"ruleId":"1049","severity":1,"message":"1050","line":61,"column":11,"nodeType":"1051","messageId":"1052","endLine":61,"endColumn":43},{"ruleId":"1073","severity":1,"message":"1159","line":65,"column":42,"nodeType":"1075","messageId":"1160","endLine":65,"endColumn":44},{"ruleId":"1060","severity":1,"message":"1065","line":11,"column":33,"nodeType":"1062","endLine":11,"endColumn":45},{"ruleId":"1073","severity":1,"message":"1159","line":33,"column":42,"nodeType":"1075","messageId":"1160","endLine":33,"endColumn":44},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["1161"],"no-negated-in-lhs",["1162"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'options' is assigned a value but never used.","'signupData' is assigned a value but never used.","'success' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BASEURL' is defined but never used.","'user' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'logo' is defined but never used.","'News' is defined but never used.","'Spinner' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'userInfo' is assigned a value but never used.","'query' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","'Data' is assigned a value but never used.","'Header' is defined but never used.","'ModalFooter' is defined but never used.","'Select' is defined but never used.","'masks' is defined but never used.","'colourStyles' is assigned a value but never used.","'Redirect' is defined but never used.","no-dupe-keys","Duplicate key 'Loader'.","ObjectExpression","'token' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-dupe-class-members","Duplicate name 'handlePageChange'.","MethodDefinition","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'info' is assigned a value but never used.","'CardText' is defined but never used.","'PropertyInfo' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","Duplicate key 'name'.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'captionStyle' is assigned a value but never used.","'slideNumberStyle' is assigned a value but never used.","Duplicate name 'ModalClose'.","'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","'PropertyMap' is defined but never used.","'property_id' is assigned a value but never used.","'dateFormat' is defined but never used.","Duplicate key 'propertyId'.","'Sidebar' is defined but never used.","'openSidebar' is assigned a value but never used.","'closeSidebar' is assigned a value but never used.","'name' is assigned a value but never used.","'Tooltip' is defined but never used.","'logoMini' is defined but never used.","'face1' is defined but never used.","'user_type' is assigned a value but never used.","'activetab' is assigned a value but never used.","'Map' is defined but never used.","'Jumbotron' is defined but never used.","'Label' is defined but never used.","'Table' is defined but never used.","'carouselImg' is defined but never used.","'APIDOMAIN' is defined but never used.","'Calculate' is defined but never used.","'ContactCard' is defined but never used.","'SimpleImageSlider' is defined but never used.","'FacebookShareButton' is defined but never used.","'TwitterShareButton' is defined but never used.","'WhatsappShareButton' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'WhatsappIcon' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","'user' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'locations' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]